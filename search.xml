<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图床使用、阿里、路过、聚合、github+picgo+typora+jsd加速</title>
      <link href="/archives/8646cdf.html"/>
      <url>/archives/8646cdf.html</url>
      
        <content type="html"><![CDATA[<p>图床这种东西，做博客是必须要的。这里我记录目前我使用的几种图床，方便以后使用，以后有新的好用的，也会相应的更新。</p><h1 id="路过图床"><a href="#路过图床" class="headerlink" title="路过图床"></a>路过图床</h1><blockquote><p><a href="https://imgchr.com/" target="_blank" rel="noopener">https://imgchr.com/</a></p></blockquote><p>免费的图床工具，无限空间，使用可以不用注册登录，但是上传的图片随时可能就被删除</p><p>如果注册登录，稍微稳定的点，但是速度很慢。虽然官网说有cdn加速，但是我用着还是慢</p><h1 id="聚合图床"><a href="#聚合图床" class="headerlink" title="聚合图床"></a>聚合图床</h1><p>这款就很舒服了。速度比较快，但是非vip只能使用10G空间，前期使用还是够用了。这里不用担心图片的丢失，这里的图片会备份到三个主机上</p><blockquote><p><a href="https://www.superbed.cn/" target="_blank" rel="noopener">https://www.superbed.cn/</a></p></blockquote><h1 id="picgo-github-jsd搭建私有图床"><a href="#picgo-github-jsd搭建私有图床" class="headerlink" title="picgo+github+jsd搭建私有图床"></a>picgo+github+jsd搭建私有图床</h1><p>本文的图片都是使用的github图床，各位可以感受一下速度</p><h2 id="下载picgo"><a href="#下载picgo" class="headerlink" title="下载picgo"></a>下载picgo</h2><p>点击<a href="https://yxqz.lanzous.com/ibm5qaj" target="_blank" rel="noopener">这里</a>下载picog</p><p>安装这里就不掩饰了</p><h2 id="github创建图片仓库"><a href="#github创建图片仓库" class="headerlink" title="github创建图片仓库"></a>github创建图片仓库</h2><p>登录你的github，然后新建仓库</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200419233758.png"  alt="image-20200419233756528"></p><h2 id="添加访问令牌"><a href="#添加访问令牌" class="headerlink" title="添加访问令牌"></a>添加访问令牌</h2><p>点击头像，点击settering进入个人设置</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420004534.png"  alt="image-20200419234133614"></p><p>在左侧菜单栏选择developer settering</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200419234907.png"  alt="image-20200419234848955"></p><p>创建访问令牌</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200419235234.png"  alt="image-20200419235231575"></p><p>这里的note随便写</p><p>能记录名字就行了。把第一个选项的作用域所有都勾上</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200419235426.png"  alt="image-20200419235420505"></p><p>然后点击页面最下面生成令牌</p><p>复制生成的令牌。这里只会出现一次</p><p>例如我的</p><blockquote><p>3b1794583cbb7c0b101cb1fd38f57739fea0a40a</p></blockquote><p>到这里，需要配置GitHub的地方就结束了</p><h2 id="配置picgo"><a href="#配置picgo" class="headerlink" title="配置picgo"></a>配置picgo</h2><p>打开picgo，到图床设置，选中GitHub图床</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420001113.png"  alt=""></p><p>仓库名就是之前你创建仓库</p><p>分支名填写master，因为这里只有一个主分支</p><p>token：刚才复制的命令。如果忘记复制，删除该个人命令，在重新生成一个就可以了</p><p>指定路径。这里填写一个文件夹\     如果没有该文件夹，会自动创建文件夹</p><p>自定义域名：这里使用了jsd加速。<a href="https://cdn.jsdelivr.net/gh/用户名/仓库名" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/仓库名</a></p><p><a href="https://cdn.jsdelivr.net/gh/YQ888/hexo-public" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/YQ888/hexo-public</a></p><p>点击确定。然后去到，上传区。拖进一张图片测试</p><h2 id="picgo上传报错"><a href="#picgo上传报错" class="headerlink" title="picgo上传报错"></a>picgo上传报错</h2><p>如果出现了上传错误，但是你的配置没有问题的情况下</p><h3 id="姿势一"><a href="#姿势一" class="headerlink" title="姿势一"></a>姿势一</h3><p>找到picgo设置的设置server<img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420001256.png"  alt=""></p><p>然后关闭，在重开启一下</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420001350.png"  alt=""></p><h3 id="姿势二"><a href="#姿势二" class="headerlink" title="姿势二"></a>姿势二</h3><p>重启picgo。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420004605.png"  alt="image-20200420001504627"></p><p>然后再上传一张图片来测试</p><h2 id="配合Typora使用"><a href="#配合Typora使用" class="headerlink" title="配合Typora使用"></a>配合Typora使用</h2><p>如果之前的picgo server没有配置则需要配置地址和端口</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">地址：127.0.0.1</span><br><span class="line">端口：36677</span><br><span class="line">也就是typora测试文档的地址和端口</span><br></pre></td></tr></table></figure><p>点击typora的文件，找到偏好设置</p><p>先择对本地位置应用上传规则。</p><p>为了方便查找（删除本地复制的图片），这里把路径设置到复制到指定路径。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420002054.png"  alt="image-20200420001654674"></p><p>点击验证上传</p><p>如果上传失败，照上一步处理</p><p>以后直接把截图粘贴到typora里，然后点击上传就ok</p><h1 id="牛图图床"><a href="#牛图图床" class="headerlink" title="牛图图床"></a>牛图图床</h1><p>这里使用牛图图床主要是利用了第三方的插件及第三方的接口。</p><p>插件是 <code>web-uploader</code>，软件里可以直接下载。然后配置我直接给出，按照我的填入即可。</p><table><thead><tr><th><strong>API 地址</strong></th><th><strong><a href="https://api.abcyun.co/api/picbed/index/type/niupic/token/5d8f31cf6a8ab" target="_blank" rel="noopener">https://api.abcyun.co/api/picbed/index/type/niupic/token/5d8f31cf6a8ab</a></strong></th></tr></thead><tbody><tr><td>POST 参数名</td><td>image</td></tr><tr><td>JSON 路径</td><td>url.niupic</td></tr><tr><td>自定义请求体</td><td>{“type”:”niupic”}</td></tr></tbody></table><p>来到picgo的自定义</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/YQ888/hexopublic/blogimg01%5C20200420004702.png"  alt="image-20200420004700368"></p><h1 id="阿里图床"><a href="#阿里图床" class="headerlink" title="阿里图床"></a>阿里图床</h1><p>这里使用阿里图床主要是利用了第三方的插件及第三方的接口。</p><p>插件是 <code>web-uploader</code>，软件里可以直接下载。然后配置我直接给出，按照我的填入即可。</p><table><thead><tr><th><strong>API 地址</strong></th><th><strong><strong><a href="https://api.abcyun.co/api/picbed/index/type/ali/token/5d8f31cf6a8ab" target="_blank" rel="noopener">https://api.abcyun.co/api/picbed/index/type/ali/token/5d8f31cf6a8ab</a></strong></strong></th></tr></thead><tbody><tr><td>POST 参数名</td><td>image</td></tr><tr><td>JSON 路径</td><td>url.ali</td></tr><tr><td>自定义请求体</td><td>{“type”:”ali”}</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>万恶的看板娘</title>
      <link href="/archives/154867527.html"/>
      <url>/archives/154867527.html</url>
      
        <content type="html"><![CDATA[<p>​     看板娘业太狗带了吧，用了看板娘，蒜子计数就不能用了，不知道是我姿势不对还是有冲突，等以后再说吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>铭飞CMS管理系统</title>
      <link href="/archives/1856597008.html"/>
      <url>/archives/1856597008.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用的cms管理系统"><a href="#常用的cms管理系统" class="headerlink" title="常用的cms管理系统"></a>常用的cms管理系统</h1><ul><li>织梦</li><li>jspxcms</li><li>jeecms</li><li>mcms：铭飞</li></ul><h1 id="mcms：铭飞管理系统本地搭建"><a href="#mcms：铭飞管理系统本地搭建" class="headerlink" title="mcms：铭飞管理系统本地搭建"></a>mcms：铭飞管理系统本地搭建</h1><h2 id="下载网址"><a href="#下载网址" class="headerlink" title="下载网址"></a>下载网址</h2><blockquote><p><a href="https://gitee.com/mingSoft/MCMS" target="_blank" rel="noopener">https://gitee.com/mingSoft/MCMS</a></p></blockquote><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul><li>Windows、Linux</li><li>Eclipse、Idea</li><li>Mysql≧5.7</li><li>JDK≧8</li><li>Tomcat≧8</li></ul><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><ul><li>Eclipse导入，菜单 File -&gt; Import，然后选择 Maven -&gt; Existing Maven Projects，点击 Next&gt; 按钮，选择检出的项目MCMS文件夹，然后点击 Finish 按钮，即可成功导入</li><li>IDEA导入，点击 Import Project，选择 pom.xml 文件，点击 Next 按钮，选择 Import Maven projects automatically 复选框，然后一直点击 Next 按钮，直到点击 Finish 按钮，即可成功导入</li></ul><p>Eclipse（IDEA）会自动加载 Maven 依赖包，初次加载会比较慢（根据自身网络情况而定），若工程上有小叉号，请打开 Problems 窗口，查看具体错误内容，直到无错误为止</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>创建数据库<strong>db-mcms-open</strong>（数据库使用utf-8编码），导入系统文件目录下的doc/db-mcms-open-版本号.sql，如果升级现有系统请使用＊-up-*.sql升级，如果导入了系统对应的完整版SQL，sql升级补丁不需要重复导入；</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e90294a504f4bcb04749a51.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e90298c504f4bcb0474ccd0.png"  alt=""></p><p><strong>然后重启数据库</strong></p><h2 id="修改的数据库设置参数"><a href="#修改的数据库设置参数" class="headerlink" title="修改的数据库设置参数"></a>修改的数据库设置参数</h2><p><strong>打开src\main\resources\application-dev.yml文件</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8feb5b504f4bcb043462fe.png"  alt=""></p><h2 id="设置本机jdk（idea也可以不设置）"><a href="#设置本机jdk（idea也可以不设置）" class="headerlink" title="设置本机jdk（idea也可以不设置）"></a>设置本机jdk（idea也可以不设置）</h2><p>idea默认是11 建议设置个人本地的jdk版本</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9009a3504f4bcb04577676.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9009f2504f4bcb0457d0f7.png"  alt=""></p><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fec6a504f4bcb04358912.png"  alt=""></p><h2 id="修改启动端口"><a href="#修改启动端口" class="headerlink" title="修改启动端口"></a>修改启动端口</h2><p><strong>修改后需要重启项目</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">port: <span class="number">80</span></span><br><span class="line">servlet.context-path: /</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8ff1b0504f4bcb043b7c26.png"  alt=""></p><h2 id="本地访问部署的系统"><a href="#本地访问部署的系统" class="headerlink" title="本地访问部署的系统"></a><strong>本地访问部署的系统</strong></h2><blockquote><p><a href="http://127.0.0.1/ms/login.do" target="_blank" rel="noopener">http://127.0.0.1/ms/login.do</a></p></blockquote><ol><li>首先先访问后台地址：<a href="http://ip|域名/项目发布名/ms/login.do，" target="_blank" rel="noopener">http://ip|域名/项目发布名/ms/login.do，</a></li><li>管理员账号，用户名：msopen 密码：msopen</li><li>进入后台点击内容管理-&gt;静态化菜单，进行”生成主页”，”生成栏目”,”生成文章”操作一遍 （注意！！！是后台登录界面，不是会员中心登录界面）</li></ol><h2 id="网页静态化"><a href="#网页静态化" class="headerlink" title="网页静态化"></a>网页静态化</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902ad9504f4bcb0475edbd.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902ae5504f4bcb0475fa1c.png"  alt=""></p><h2 id="预览首页"><a href="#预览首页" class="headerlink" title="预览首页"></a>预览首页</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;</span><br><span class="line">或者在生成静态页面处点击预览主页</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902b6f504f4bcb04767568.png"  alt=""></p><h1 id="官方开发文档"><a href="#官方开发文档" class="headerlink" title="官方开发文档"></a>官方开发文档</h1><blockquote><p><a href="http://doc.ms.mingsoft.net/plugs-cms/" target="_blank" rel="noopener">http://doc.ms.mingsoft.net/plugs-cms/</a></p></blockquote><h1 id="更换主题（设置自己的门户网站）"><a href="#更换主题（设置自己的门户网站）" class="headerlink" title="更换主题（设置自己的门户网站）"></a>更换主题（设置自己的门户网站）</h1><h2 id="下载互联网技术公司模板"><a href="#下载互联网技术公司模板" class="headerlink" title="下载互联网技术公司模板"></a>下载互联网技术公司模板</h2><blockquote><p>链接：<a href="https://pan.baidu.com/s/1h_XdglkB6sDW2k6cOyivFw" target="_blank" rel="noopener">https://pan.baidu.com/s/1h_XdglkB6sDW2k6cOyivFw</a><br>提取码：aqzy </p></blockquote><p>进入后台管理页面找到模板管理</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902de5504f4bcb047909f6.png"  alt=""></p><h2 id="上传网站模板"><a href="#上传网站模板" class="headerlink" title="上传网站模板"></a>上传网站模板</h2><p>default是默认的模板</p><blockquote><p>需要将模板压缩zip格式，这里会自动解压</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902e0a504f4bcb04792f8d.png"  alt=""></p><p>结果如图</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902e71504f4bcb0479944a.png"  alt=""></p><h2 id="清理文件夹"><a href="#清理文件夹" class="headerlink" title="清理文件夹"></a>清理文件夹</h2><p><strong>这里清理的是之前搭建本地默认主题的网站的时候生成的静态网站信息</strong></p><p>为了不混淆，可以清理，也可以不用清理</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e901019504f4bcb045da079.png"  alt=""></p><h2 id="清理默认的文章和栏目"><a href="#清理默认的文章和栏目" class="headerlink" title="清理默认的文章和栏目"></a>清理默认的文章和栏目</h2><blockquote><p>这里有个bug必须要先删除文章在删除栏目</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e90315b504f4bcb047cc34a.png"  alt=""></p><blockquote><p>清理栏目也是同理，找到栏目管理删除所有栏目即可</p></blockquote><h2 id="选择个人站点"><a href="#选择个人站点" class="headerlink" title="选择个人站点"></a>选择个人站点</h2><p>找到系统设置–应用设置–站点风格</p><p>选中需要使用的网站，然后保存</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e902f6b504f4bcb047aadd5.png"  alt=""></p><h2 id="静态化个人的网站首页"><a href="#静态化个人的网站首页" class="headerlink" title="静态化个人的网站首页"></a>静态化个人的网站首页</h2><blockquote><p>如果主界面被意外关闭，直接刷新页面即可，简单粗暴就能找到了</p></blockquote><p>和之前静态化的方式一样，在主界面点击静态化然后生成首页</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e901397504f4bcb046219e2.png"  alt=""></p><p><strong>通过预览发现没有css样式，然后接着配置就行了，详情参考官方开发文档</strong></p><h2 id="修复样式"><a href="#修复样式" class="headerlink" title="修复样式"></a>修复样式</h2><h3 id="新建html文件"><a href="#新建html文件" class="headerlink" title="新建html文件"></a>新建html文件</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9032ce504f4bcb047e36f1.png"  alt=""></p><p><strong>在webapp–templets.1–个人门户网站名字目录下新建一个空的html页面用来拆分统一的网站元素</strong></p><ul><li>head.html</li><li>footer.html</li><li>nav.html</li><li>reight-menu.html</li></ul><h3 id="剪切通用代码块"><a href="#剪切通用代码块" class="headerlink" title="剪切通用代码块"></a>剪切通用代码块</h3><blockquote><p>这里从index.html剪切的时候注意，值剪切整个网站都共用的代码部分，比如head和footer</p></blockquote><p>然后分别把index.html里的head、foot 和顶部nav 以及右侧菜单标签 放入相应的html文件里</p><p>head.html剪切到的代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>上海网站建设_上海网站设计_上海网站制作-科技公司<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"上海网站建设,上海网站制作,上海网站设计,上海建站"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"科技公司是一家专业做定制开发的上海网站建设公司，独一无二的一对一设计，一流的开发团队，完善的售服体系，为您的企业量身定制最贴身的品牌官网！"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"baidu-site-verification"</span> <span class="attr">content</span>=<span class="string">"H6rHrDTuI2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/banner.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/iconfont.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/animate.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/carousel.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/global.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br></pre></td></tr></table></figure><p> footer.html里剪切的代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mydiv"</span> <span class="attr">style</span>=<span class="string">"height:465px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer_content"</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer_content_top clear"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content_top_share fl"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/logo.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_share_content"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span>分享至：<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">"bdsharebuttonbox clear"</span> <span class="attr">id</span>=<span class="string">"share"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"bds_tsina iconfont fl"</span> <span class="attr">data-cmd</span>=<span class="string">"tsina"</span> <span class="attr">title</span>=<span class="string">"分享到新浪微博"</span>&gt;</span><span class="symbol">&amp;#xe632;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"bds_sqq iconfont fl"</span> <span class="attr">data-cmd</span>=<span class="string">"sqq"</span> <span class="attr">title</span>=<span class="string">"分享到QQ好友"</span>&gt;</span><span class="symbol">&amp;#xe663;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"bds_weixin iconfont fl"</span> <span class="attr">data-cmd</span>=<span class="string">"weixin"</span> <span class="attr">title</span>=<span class="string">"分享到微信"</span>&gt;</span><span class="symbol">&amp;#xe603;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"bds_weixin iconfont fl"</span> <span class="attr">data-cmd</span>=<span class="string">"tieba"</span> <span class="attr">title</span>=<span class="string">"分享到贴吧"</span>&gt;</span><span class="symbol">&amp;#xe683;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">                  <span class="built_in">window</span>._bd_share_config=&#123;<span class="string">"common"</span>:&#123;<span class="string">"bdSnsKey"</span>:&#123;&#125;,<span class="string">"bdText"</span>:<span class="string">""</span>,<span class="string">"bdMini"</span>:<span class="string">"2"</span>,<span class="string">"bdMiniList"</span>:<span class="literal">false</span>,<span class="string">"bdPic"</span>:<span class="string">""</span>,<span class="string">"bdStyle"</span>:<span class="string">"1"</span>,<span class="string">"bdSize"</span>:<span class="string">"16"</span>&#125;,<span class="string">"share"</span>:&#123;&#125;&#125;;<span class="keyword">with</span>(<span class="built_in">document</span>)<span class="number">0</span>[(getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]||body).appendChild(createElement(<span class="string">'script'</span>)).src=<span class="string">'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='</span>+~(-<span class="keyword">new</span> <span class="built_in">Date</span>()/<span class="number">36e5</span>)];</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content_top_left fl clear"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_left_list fl"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"about.html#"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"about.html#"</span>&gt;</span>公司简介<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"about.html##qywh"</span>&gt;</span>企业文化<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"about.html##zzry"</span>&gt;</span>资质荣誉<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_left_list fl"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"service.html#"</span>&gt;</span>服务项目<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"service.html#"</span>&gt;</span>高端网站定制<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"weixin.html#"</span>&gt;</span>微信开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"app.html"</span>&gt;</span>APP开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"yingxiao.html"</span>&gt;</span>网络营销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_left_list fl"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"news.html"</span>&gt;</span>新闻动态<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"newsinfo.html#hyxw/"</span>&gt;</span>行业新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"newsinfo.html#xuetang/"</span>&gt;</span>建站学堂<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"newsinfo.html#wenti/"</span>&gt;</span>常见问题<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_left_list fl"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"contact.html"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"contact.html"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"contact.html"</span>&gt;</span>人才招聘<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content_top_right fr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_right_title"</span>&gt;</span>联系方式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_right_content"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_content_list clear"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"fl iconfont"</span>&gt;</span><span class="symbol">&amp;#xe62c;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>电话：021-1234567<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_content_list clear"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"fl iconfont"</span>&gt;</span><span class="symbol">&amp;#xe663;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>QQ：10001 / 877178297<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_content_list clear"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"fl iconfont"</span>&gt;</span><span class="symbol">&amp;#xe624;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>邮箱：service@jijintech.com<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_content_list clear"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"fl iconfont"</span>&gt;</span><span class="symbol">&amp;#xe604;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>地址：上海市闸北区共和新路3699号共和国际商务广场A栋707室<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer_content_bottom clear"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content_bottom_left fl"</span>&gt;</span>友情链接：<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content_bottom_right clear fl"</span>&gt;</span></span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.yidiansheng.cn"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>郑州网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.leadto.com.cn/index.html"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>青岛网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.feimao666.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>武汉网站建设 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.zhuang520.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>办公室装修<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.edo2008.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>北京网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.rackspacechina.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>厦门网站开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.coverweb.cc"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>英文网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.lonwin.net/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>深圳网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.seofuwu.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>seo实战培训<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.bjshyl.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>北京网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.hkxiaopan.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>重庆网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.lingd.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.yunduancn.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>南昌网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.qifanweb.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>合肥网络公司<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.szweb.cn"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>深圳网站设计<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.ehscn.org"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>上海甲醛检测<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.xinhongru.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>北京网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.fimvisual.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>北京网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.jz182.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>网络营销公司<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.fireinter.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>美国空间<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.jccit.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>重庆网站建设公司<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.583idc.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>免备案空间<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.znbo.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>广州网站建设公司<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.ganji.com/zpwangzhanyunying/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>网站运营<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.meilele.com/shanghai/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>上海家具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://hs.fang.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>衡水房地产<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.reanod.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>外贸网站建设<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://maanshan.offcn.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>马鞍山人事考试网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer_content_copyright clear"</span>&gt;</span>Copyright©2012-2022 上海信息科技有限公司版权所有   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.bootstrapmb.com/"</span>  <span class="attr">rel</span>=<span class="string">"nofollow"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>备案号：沪ICP备xxxxx号<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.8.3.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/banner.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/global.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/iconfont.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/digital.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/wow.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/canvas.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/carousel.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>nav.html剪切的代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pc_header"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pc_header_content clear"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html"</span> <span class="attr">class</span>=<span class="string">"header_content_logo fl"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/logo.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header_content_right clear fr"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu fl clear"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"fl on"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html"</span> <span class="attr">class</span>=<span class="string">"menu_title"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"about.html#"</span> <span class="attr">class</span>=<span class="string">"menu_title"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"menu_title service_items"</span>&gt;</span>服务项目<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"DropDown clear"</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"DropDown_content"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"service.html#"</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe70b;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dt</span>&gt;</span>高端网站定制<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"weixin.html#"</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe629;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dt</span>&gt;</span>微信定制<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                          </span><br><span class="line">                          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"app.html"</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe6c0;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dt</span>&gt;</span>APP开发服务<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                          </span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"yingxiao.html"</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe634;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                             <span class="tag">&lt;<span class="name">dt</span>&gt;</span>网络营销服务<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"case.html"</span> <span class="attr">class</span>=<span class="string">"menu_title"</span>&gt;</span>案例展示<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"news.html"</span> <span class="attr">class</span>=<span class="string">"menu_title"</span>&gt;</span>新闻动态<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"fl "</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"contact.html"</span> <span class="attr">class</span>=<span class="string">"menu_title"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header_content_phone fr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe6ee;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>021-1234567</span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"burger fr"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"x"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"y"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"z"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>right-menu.html剪切到的代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"FloatingWindow clear"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://wpa.qq.com/msgrd?v=3&amp;uin=10001&amp;site=qq&amp;menu=yes"</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list fr"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list_title"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe675;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dt</span>&gt;</span>在线咨询<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://wpa.qq.com/msgrd?v=3&amp;uin=10001&amp;site=qq&amp;menu=yes"</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list fr"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list_title"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe618;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dt</span>&gt;</span>QQ咨询<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list fr"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list_title"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe619;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dt</span>&gt;</span>服务热线<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list_down bounceInRight animated"</span>&gt;</span>服务热线：021-1234567<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list fr"</span> <span class="attr">id</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"FloatingWindow_list_title"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe628;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dt</span>&gt;</span>TOP<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-hero-slider-wrapper"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slider slick-hero-slider slick-slider-center-mode slick-animation slick-inner-dot alt-dot-position with-main-search-wrapper-2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-item"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"image-bg"</span> <span class="attr">style</span>=<span class="string">" background:url(images/index_banner.jpg) no-repeat 50%/cover"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-10 col-sm-offset-1 col-md-10"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-hero-slider-caption"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"animation fromBottom transitionDelay2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/bn1.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"animation fromBottom transitionDelay4"</span>&gt;</span>十余载致力于互联网技术服务、开发及应用，为企事业单位提供一站式、完善的整合网络品牌服务<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"animation fromBottom transitionDelay6"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>More than ten years dedicated to Internet technology services, development and application,<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>providing a one-stop, integrated network brand service for enterprises and institutions.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-item"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"image-bg Network_bg"</span> <span class="attr">style</span>=<span class="string">" background:url(images/index_banner4.jpg) no-repeat 50%/cover"</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-10 col-sm-offset-1 col-md-10"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-hero-slider-caption Network"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"animation fromBottom transitionDelay2"</span>&gt;</span>Jinjin Tech<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"animation fromBottom transitionDelay4"</span>&gt;</span>致力于做服务最好的网站建设公司<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"animation fromBottom transitionDelay4"</span>&gt;</span>已服务客户2000+<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-item"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"image-bg"</span> <span class="attr">style</span>=<span class="string">" background:url(images/index_banner5.jpg) no-repeat 50%/cover"</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-10 col-sm-offset-1 col-md-10"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slick-hero-slider-caption year"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">"bg2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner_yuan.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner_title.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="参考文档标签"><a href="#参考文档标签" class="headerlink" title="参考文档标签"></a>参考文档标签</h3><blockquote><p>点击博客目录快速跳转到文档网站</p></blockquote><p>在index.html剪切后的空白处参照官方开发文档</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9035bb504f4bcb0480c1e7.png"  alt=""></p><h4 id="lt-include-“url”-gt"><a href="#lt-include-“url”-gt" class="headerlink" title="&lt;#include “url”&gt;"></a>&lt;#include “url”&gt;</h4><p>使用该标签插入到index中剪切的位置，并把url改为相应的标签.html</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#include</span> "<span class="attr">head.html</span>"&gt;</span></span><br></pre></td></tr></table></figure><p>footer 以及菜单位置一样处理</p><h4 id="ms-global-style"><a href="#ms-global-style" class="headerlink" title="{ms:global.style/}"></a>{ms:global.style/}</h4><p>引入全局设置在每个css以及js标签前面加入该标签</p><p><strong>head里的css也是类似操作</strong></p><p><strong>然后重新生成静态页面</strong></p><blockquote><p>如果还是没效果，注意路径或者反斜杠对不对</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9039be504f4bcb04839d0c.png"  alt=""></p><h3 id="修复图片问题，使用全局替换"><a href="#修复图片问题，使用全局替换" class="headerlink" title="修复图片问题，使用全局替换"></a>修复图片问题，使用全局替换</h3><p>把所有src的img前添加{ms:global.style/}</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;ms:global.host&#x2F;&#125;&#x2F;&#123;ms:global.style&#x2F;&#125;&#x2F;images</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 铭飞cms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual C++ 6.0（完整绿色版）的下载、安装和破解（图解）</title>
      <link href="/archives/2900021104.html"/>
      <url>/archives/2900021104.html</url>
      
        <content type="html"><![CDATA[<h1 id="vc工具的下载"><a href="#vc工具的下载" class="headerlink" title="vc工具的下载"></a>vc工具的下载</h1><pre><code>链接: https://pan.baidu.com/s/1GTkcWjureiZS_2WL2dvrMw 提取码: 5859</code></pre><h1 id="首先点击链接下载好压缩包并解压"><a href="#首先点击链接下载好压缩包并解压" class="headerlink" title="首先点击链接下载好压缩包并解压"></a>首先点击链接下载好压缩包并解压</h1><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303144834967.png?x-o"  alt="在这里插入图片描述">这里是解压好滴文件目录</p><h1 id="双击-exe应用程序"><a href="#双击-exe应用程序" class="headerlink" title="双击.exe应用程序"></a>双击.exe应用程序</h1><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303145038260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303145125298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303145141701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303145152736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>选择自己想要安装第位置 点击下一步即可</p><h1 id="开始破解"><a href="#开始破解" class="headerlink" title="开始破解"></a>开始破解</h1><h2 id="打开vc的安装目录进行操作"><a href="#打开vc的安装目录进行操作" class="headerlink" title="打开vc的安装目录进行操作"></a>打开vc的安装目录进行操作</h2><p>这里可以通过桌面鼠标右键的方式直接打开文件位置<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303145649294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>然后打开之前解压文件 复制这个主程序MSDEV.exe<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303145758637.png"  alt="在这里插入图片描述">把复制的主程序粘贴在vc安装目录里的Bin目录下</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303150046297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>点击替换目标文件，已经完成破解</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ViscualC++6.0工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 2019.2.4激活码，到2089年，需要的来拿</title>
      <link href="/archives/845073791.html"/>
      <url>/archives/845073791.html</url>
      
        <content type="html"><![CDATA[<p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200303172451192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>激活码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 3AGXEJXFK9-eyJsaWNlbnNlSWQiOiIzQUdYRUpYRks5IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9XSwiaGFzaCI6IjEyNzk2ODc3LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0&#x3D;-WGTHs6XpDhr+uumvbwQPOdlxWnQwgnGaL4eRnlpGKApEEkJyYvNEuPWBSrQkPmVpim&#x2F;8Sab6HV04Dw3IzkJT0yTc29sPEXBf69+7y6Jv718FaJu4MWfsAk&#x2F;ZGtNIUOczUQ0iGKKnSSsfQ&#x2F;3UoMv0q&#x2F;yJcfvj+me5Zd&#x2F;gfaisCCMUaGjB&#x2F;lWIPpEPzblDtVJbRexB1MALrLCEoDv3ujcPAZ7xWb54DiZwjYhQvQ+CvpNNF2jeTku7lbm5v+BoDsdeRq7YBt9ANLUKPr2DahcaZ4gctpHZXhG96IyKx232jYq9jQrFDbQMtVr3E+GsCekMEWSD&#x2F;&#x2F;dLT+HuZdc1sAIYrw&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG&#x2F;PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg&#x2F;nYV31HLF7fJUAplI&#x2F;1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4&#x2F;G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd&#x2F;GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt&#x2F;wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59&#x2F;THOT7NJQhr6AyLkhhJCdkzE2cob&#x2F;KouVp4ivV7Q3Fc6HX7eepHAAF&#x2F;DpxwgOrg9smX6coXLgfp0b1RU2u&#x2F;tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB&#x2F;40BjpMUrDRCeKuiBahC0DCoU&#x2F;4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV&#x2F;g&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea全家桶激活码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VMWare中CentOS设置静态IP后SSH登录过慢问题（同样适用于Ubuntu）</title>
      <link href="/archives/1988406376.html"/>
      <url>/archives/1988406376.html</url>
      
        <content type="html"><![CDATA[<p><strong>修改ssh配置文件</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br></pre></td></tr></table></figure><p><strong>使用:/命令语句找到UseDNS</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:&#x2F;UseDNS</span><br></pre></td></tr></table></figure><p><strong>修改为：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UseDNS &#x3D; no</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8f41a0504f4bcb049e0ed0.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8f4204504f4bcb049e7a1f.png"  alt=""></p><p><strong>重启ssh服务：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常见bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理、系统管理、远程命令、防火墙</title>
      <link href="/archives/1517358039.html"/>
      <url>/archives/1517358039.html</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><blockquote><p>磁盘管理的好坏直接关系到整个系统的性能问题</p><p>磁盘管理常用的三个命令 df、du和fdisk</p></blockquote><h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><p><strong>语法：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">df [参数] [目录或文件名]</span><br></pre></td></tr></table></figure><ul><li>df列出文件系统的整个磁盘使用量</li><li>df命令参数的功能：检查文件系统的磁盘空间占用情况，可以利用该命令来获取磁盘被占用了多少空间，目前还剩下多少空间等信息</li></ul><p><strong>常用参数</strong></p><p>文件 -h，–human-readable：使用人类可读的格式（预设值是不加这个选项的）</p><p><strong>实例</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85f641504f4bcb04a50dcb.png"  alt=""></p><h2 id="du"><a href="#du" class="headerlink" title="du"></a>du</h2><p>也是查看使用空间的，但是与df命令不同的是，linux du命令是对文件和目录磁盘使用的空间进行查看</p><p><strong>语法</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du [参数] [目录或文件名]</span><br></pre></td></tr></table></figure><p><strong>常用参数说明</strong></p><ul><li>-a或-all：显示目录中个别文件的大小</li><li>-h：用人类易读的容量格式（G/M）显示</li><li>-s：列出总量，但是不列出每个个别的目录占用总量</li></ul><p>列出目录下所有文件以及文件夹的大小：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du -sh .&#x2F;*</span><br></pre></td></tr></table></figure><p>列出目录下所有文件以及文件夹和文件夹里面文件的大小：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du -ah .&#x2F;*</span><br></pre></td></tr></table></figure><h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h1><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p>显示当前进程process的状态</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps [optios] [--help]</span><br></pre></td></tr></table></figure><p><strong>参数</strong></p><p>ps：将某个进程显示出来</p><ul><li>-A：显示所有程序</li><li>-e：此参数的效果-A相同</li><li>-f：显示UID、PPIP、C与STIME栏位</li></ul><p><strong>实例</strong></p><p>查找进程信息中包含MySQL的进程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef | grep mysql</span><br></pre></td></tr></table></figure><h2 id="jps"><a href="#jps" class="headerlink" title="jps"></a>jps</h2><p>是java自带的命令，的安装jdk才能运行</p><p><strong>语法</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jps [optios] [--help]</span><br></pre></td></tr></table></figure><p><strong>参数</strong></p><ul><li>-q：只输入进程ID</li><li>-l：输入完全的报名，应用主类名，jar的完全路径名</li></ul><p><strong>实例</strong></p><p>查找信息中包含Bootstrap的Java进程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jps|gerp Bootstrap</span><br></pre></td></tr></table></figure><h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h2><p>删除执行中的进程</p><p>语法：</p><ul><li>kill -15 进程id：大部分程序接收到SIGTERM信号后，会先释放自己的资源，然后在停止（默认的方式）</li><li>kill -9 进程id：立即杀死进程，该信号不能被阻塞、处理和忽略</li></ul><p><strong>实例</strong></p><p>查找tomcat进程并关闭</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef|grep tomcat</span><br><span class="line">kill -9 查询的pid</span><br></pre></td></tr></table></figure><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><p>实时显示process的动态</p><p>使用权限：所有使用者（用户）</p><p>常用实例</p><h3 id="安进程的cpu使用率排序"><a href="#安进程的cpu使用率排序" class="headerlink" title="安进程的cpu使用率排序"></a><strong>安进程的cpu使用率排序</strong></h3><p>运行top后，键盘按P</p><p>效果如图：</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e869d38504f4bcb042d287b.png"  alt=""></p><h3 id="安进程的内存使用率排序"><a href="#安进程的内存使用率排序" class="headerlink" title="安进程的内存使用率排序"></a><strong>安进程的内存使用率排序</strong></h3><p>运行top后，键盘按M</p><p>运行图示：</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e869d9d504f4bcb0430150a.png"  alt=""></p><h3 id="显示详细目录"><a href="#显示详细目录" class="headerlink" title="显示详细目录"></a><strong>显示详细目录</strong></h3><p>运行top后，键盘按c</p><h3 id="显示多核cpu详情"><a href="#显示多核cpu详情" class="headerlink" title="显示多核cpu详情"></a>显示多核cpu详情</h3><p>运行top后，键盘按1</p><h1 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h1><p>防火墙拦截应用程序的端口</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl status sshd#查看sshd状态</span><br><span class="line">systemctl status firewalld#查看防火墙状态</span><br><span class="line">systemctl start firewalld#启动防火墙</span><br><span class="line">systemctl disable firewalld#禁用防火墙(重启防火墙生效)</span><br><span class="line">systemctl enable firewalld#启用防火墙</span><br><span class="line">systemctl restart firewalld#重启防火墙</span><br><span class="line"></span><br><span class="line">Centos6 的防火墙命令</span><br><span class="line">service iptables status|stop|start|restart chkconfig firewalld off|on</span><br></pre></td></tr></table></figure><p><strong>查看22端口是否开启</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --query-port&#x3D;22&#x2F;tcp</span><br></pre></td></tr></table></figure><blockquote><p>返回结果是no，则表示未开启防火墙</p></blockquote><p><strong>允许外部访问22端口</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;22&#x2F;tcp --permanent</span><br></pre></td></tr></table></figure><p><strong>配置生效</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart firewalld.service：重启防火墙服务</span><br></pre></td></tr></table></figure><h1 id="关机、重启"><a href="#关机、重启" class="headerlink" title="关机、重启"></a>关机、重启</h1><ol><li>shutdown -r now ：立刻重启</li><li>shutdown -r 10：10分钟后自动重启</li><li>shutdown -r 20:35   ：在时间为20:33的时候重启</li><li>shutdown -c：取消重启</li><li>shutdown  now：立即关机</li><li>shutdown    10:10分钟后自动关机</li><li>poweroff：立刻关机</li><li>reboot：重启</li></ol><h1 id="远程命令"><a href="#远程命令" class="headerlink" title="远程命令"></a>远程命令</h1><p><strong>实例代码</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh [-l longin_name] [-p port] [user@]hostname</span><br><span class="line">ssh root@192.168.100.120</span><br></pre></td></tr></table></figure><h2 id="ssh免密登录"><a href="#ssh免密登录" class="headerlink" title="ssh免密登录"></a><strong>ssh免密登录</strong></h2><ul><li><p>进入用户的home目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;.ssh&#x2F;root用户就在root目录下的.ssh目录</span><br><span class="line">cd &#x2F;home&#x2F;omd&#x2F;.ssh&#x2F;普通用户在家目录下的.ssh目录</span><br></pre></td></tr></table></figure></li><li><p>根据dsa算法生成私和公钥【<strong>默认在当前用户的home目录</strong>】</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t dsa  一路回车即可</span><br><span class="line">id_dsa私钥（钥匙）</span><br><span class="line">id_dsa.pub公钥(锁)</span><br></pre></td></tr></table></figure></li><li><p>拷贝公钥给目标服务器</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i id_dsa.pub root@192.168.100.120</span><br></pre></td></tr></table></figure></li><li><p>查看目标服务器生成的文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ll &#x2F;home&#x2F;omd&#x2F; .ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>免密码登录目标服务器</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh rooot@192.168.100.120</span><br></pre></td></tr></table></figure></li></ul><h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><ul><li><p>从本地复制到远程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp a.txt root@192.168.100.12:&#x2F;.data</span><br></pre></td></tr></table></figure></li><li><p>从远程复制到本地</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp root@192.168.100.120:&#x2F;a.txt .&#x2F;</span><br></pre></td></tr></table></figure></li></ul><h2 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h2><p>安全协议，使用22端口</p><p><strong>1.登录</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sftp root@192.168.100.120</span><br></pre></td></tr></table></figure><p><strong>2.从远程服务器获取文件</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sftp&gt; get -r &#x2F;data&#x2F;*递归获取</span><br><span class="line">Fetching &#x2F;data&#x2F;a.txt to a.txt</span><br></pre></td></tr></table></figure><p><em>3.</em>上传文件到远程服务器**</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sftp&gt; put b.txt &#x2F;data</span><br><span class="line">Uploading  b.txt to &#x2F;data&#x2F;b.txt</span><br></pre></td></tr></table></figure><p><strong>实例:</strong></p><p>使用cmd给linux的根目录下的upload目录（提前新建好文件夹）发送data.txt文件（window内置了sftp）</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86afb7504f4bcb047e5e39.png"  alt=""></p><p>在linux里查看是否上传成功了</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86b056504f4bcb047ec5a1.png"  alt=""></p><h2 id="使用FlashFXP工具"><a href="#使用FlashFXP工具" class="headerlink" title="使用FlashFXP工具"></a>使用FlashFXP工具</h2><blockquote><p>链接：<a href="https://pan.baidu.com/s/1FbkzAICg00bLyqSMEaUs5Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1FbkzAICg00bLyqSMEaUs5Q</a><br>提取码：e9lk </p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86b0b9504f4bcb047f063f.png"  alt=""></p><p>按需求选择</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86b0dc504f4bcb047f1d23.png"  alt=""></p><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p>找到你的本地要上传的文件，直接拖到服务器区域</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86b185504f4bcb047f87fa.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用软件（jdk、mysql、redis、tomcat）安装</title>
      <link href="/archives/1973821148.html"/>
      <url>/archives/1973821148.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><h2 id="查看网络配置"><a href="#查看网络配置" class="headerlink" title="查看网络配置"></a>查看网络配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</span><br></pre></td></tr></table></figure><p>网络配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD&#x3D;&quot;none&quot;</span><br><span class="line">BROWSER_ONLY&#x3D;&quot;no&quot;</span><br><span class="line">BOOTPROTO&#x3D;&quot;dhcp&quot;</span><br><span class="line">DEFROUTE&#x3D;&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;&quot;no&quot;</span><br><span class="line">IPV6INIT&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;&quot;stable-privacy&quot;</span><br><span class="line">NAME&#x3D;&quot;ens33&quot;</span><br><span class="line">UUID&#x3D;&quot;e9ba6f59-0e58-4d4c-8726-9eef75564060&quot;</span><br><span class="line">DEVICE&#x3D;&quot;ens33&quot;</span><br><span class="line">ONBOOT&#x3D;&quot;yes&quot;</span><br></pre></td></tr></table></figure><h2 id="重启网卡"><a href="#重启网卡" class="headerlink" title="重启网卡"></a>重启网卡</h2><p><strong>测试：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost upload]# ping www.baidu.com</span><br><span class="line">PING www.a.shifen.com (14.215.177.39) 56(84) bytes of data.</span><br><span class="line">64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq&#x3D;1 ttl&#x3D;128 time&#x3D;42.9 ms</span><br><span class="line">64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq&#x3D;2 ttl&#x3D;128 time&#x3D;46.4 ms</span><br><span class="line">64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq&#x3D;3 ttl&#x3D;128 time&#x3D;42.5 ms</span><br><span class="line">64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq&#x3D;4 ttl&#x3D;128 time&#x3D;41.8 ms</span><br></pre></td></tr></table></figure><h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><h2 id="下载jdk"><a href="#下载jdk" class="headerlink" title="下载jdk"></a>下载jdk</h2><blockquote><p>官网下载：</p></blockquote><blockquote><p>链接: <a href="https://pan.baidu.com/s/1jvjsTqSkYiXW-os6IWLF0w" target="_blank" rel="noopener">https://pan.baidu.com/s/1jvjsTqSkYiXW-os6IWLF0w</a> 提取码: 1u2x</p><p>官网：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p></blockquote><p><strong>使用ftp工具传输到linux端</strong></p><h2 id="解压jdk"><a href="#解压jdk" class="headerlink" title="解压jdk"></a>解压jdk</h2><p><strong>cd /upload</strong></p><p>一般吧jdk目录解压在/usr/local目录下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u131-linux-x64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;</span><br></pre></td></tr></table></figure><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p><strong>配置etc/profile</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p><strong>在最后面添加如下语句</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk1.8.0_131</span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86da93504f4bcb04a119cc.png"  alt=""></p><h2 id="刷新profile目录"><a href="#刷新profile目录" class="headerlink" title="刷新profile目录"></a>刷新profile目录</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h2 id="检查是否配置成功"><a href="#检查是否配置成功" class="headerlink" title="检查是否配置成功"></a>检查是否配置成功</h2><p>输入java命令</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86de1a504f4bcb04a4036a.png"  alt=""></p><p><strong>输入java -version</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]# java -version</span><br><span class="line">java version &quot;1.8.0_131&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_131-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)</span><br></pre></td></tr></table></figure><h1 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h1><p><strong>必须先装jdk在装Tomcat</strong></p><h2 id="下载tomcat"><a href="#下载tomcat" class="headerlink" title="下载tomcat"></a>下载tomcat</h2><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-7/v7.0.103/bin/apache-tomcat-7.0.103.tar.gz" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-7/v7.0.103/bin/apache-tomcat-7.0.103.tar.gz</a></p></blockquote><p><strong>使用ftp工具传输到linux端</strong></p><h2 id="解压tomcat"><a href="#解压tomcat" class="headerlink" title="解压tomcat"></a>解压tomcat</h2><p><strong>进入upload（提交apache-tomcat-7.0.103.tar.gz的位置）解压apache-tomcat-7.0.103.tar.gz到/usr/local目录下</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-7.0.103.tar.gz -C &#x2F;usr&#x2F;local&#x2F;</span><br></pre></td></tr></table></figure><p>cd到/usr/local目录在ll查看是否有apache-tomcat-7.0.103文件夹，在进入到apache-tomcat-7.0.103文件里，<strong>在进入到bin里，输入./startup.sh开启tomcat服务</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86e1a7504f4bcb04a72083.png"  alt=""></p><h2 id="浏览器输入端口号检测（http-192-168-205-129-8080）"><a href="#浏览器输入端口号检测（http-192-168-205-129-8080）" class="headerlink" title="浏览器输入端口号检测（http://192.168.205.129:8080）"></a>浏览器输入端口号检测（<a href="http://192.168.205.129:8080）">http://192.168.205.129:8080）</a></h2><p>网站080查看是否能打开tomcat网站，<strong>如果无法打卡，需要进入防火墙设置</strong>【提示，http协议底层还是tcp协议】</p><h2 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --query-port&#x3D;8080&#x2F;tcp</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86e278504f4bcb04a7bd6b.png"  alt=""></p><p>发现8080端口未开启</p><h2 id="允许外部访问8080端口"><a href="#允许外部访问8080端口" class="headerlink" title="允许外部访问8080端口"></a>允许外部访问8080端口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp --permanent</span><br><span class="line">success</span><br></pre></td></tr></table></figure><p><strong>配置生效</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart firewalld 重启防火墙服务</span><br></pre></td></tr></table></figure><h2 id="再次检测8080端口防火墙状态"><a href="#再次检测8080端口防火墙状态" class="headerlink" title="再次检测8080端口防火墙状态"></a>再次检测8080端口防火墙状态</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --query-port&#x3D;8080&#x2F;tcp</span><br></pre></td></tr></table></figure><h2 id="在浏览器测试（推荐使用谷歌或者火狐）"><a href="#在浏览器测试（推荐使用谷歌或者火狐）" class="headerlink" title="在浏览器测试（推荐使用谷歌或者火狐）"></a>在浏览器测试（推荐使用谷歌或者火狐）</h2><p>微软的默认有个/   呵呵呵了</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8bffd0504f4bcb04ce1a15.png"  alt=""></p><h2 id="将tomcat安装成系统服务（重点）"><a href="#将tomcat安装成系统服务（重点）" class="headerlink" title="将tomcat安装成系统服务（重点）"></a>将tomcat安装成系统服务（重点）</h2><h3 id="找到tomcat目录下的catelina-sh（复制代码需要注意tomcat版本）"><a href="#找到tomcat目录下的catelina-sh（复制代码需要注意tomcat版本）" class="headerlink" title="找到tomcat目录下的catelina.sh（复制代码需要注意tomcat版本）"></a>找到tomcat目录下的catelina.sh（复制代码需要注意tomcat版本）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;local&#x2F;apache-tomcat-7.0.103&#x2F;bin&#x2F;catalina.sh</span><br></pre></td></tr></table></figure><h3 id="在“OS-specific-support-”的上一行添加如下内容-这里使用-命令搜索"><a href="#在“OS-specific-support-”的上一行添加如下内容-这里使用-命令搜索" class="headerlink" title="在“OS specific support.”的上一行添加如下内容 这里使用/命令搜索"></a>在“OS specific support.”的<strong>上一行</strong>添加如下内容 这里使用/命令搜索</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:&#x2F;OS specific support.</span><br></pre></td></tr></table></figure><p>添加如下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk1.8.0_131 </span><br><span class="line">JRE_HOME&#x3D;$JAVA_HOME&#x2F;jre</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d95ee504f4bcb0423d798.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d969d504f4bcb042485ec.png"  alt=""></p><h3 id="使用vim创建tomcat-service"><a href="#使用vim创建tomcat-service" class="headerlink" title="使用vim创建tomcat.service"></a>使用vim创建tomcat.service</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;tomcat.service</span><br></pre></td></tr></table></figure><p>输入以下内容（<strong>注意你的tomcat版本</strong>）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Tomcat</span><br><span class="line">After&#x3D;syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;oneshot</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;apache-tomcat-7.0.103&#x2F;bin&#x2F;startup.sh</span><br><span class="line">ExecStop&#x3D;&#x2F;usr&#x2F;local&#x2F;apache-tomcat-7.0.103&#x2F;bin&#x2F;shutdown.sh</span><br><span class="line">ExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID</span><br><span class="line">RemainAfterExit&#x3D;yes</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><h3 id="重新加载使配置生效"><a href="#重新加载使配置生效" class="headerlink" title="重新加载使配置生效"></a>重新加载使配置生效</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="允许开机启动"><a href="#允许开机启动" class="headerlink" title="允许开机启动"></a>允许开机启动</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable tomcat</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d9819504f4bcb0425e399.png"  alt=""></p><h3 id="其他tomcat服务操作命令"><a href="#其他tomcat服务操作命令" class="headerlink" title="其他tomcat服务操作命令"></a>其他tomcat服务操作命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start tomcat # 启动</span><br><span class="line">systemctl status tomcat # 查看状态</span><br><span class="line">systemctl restart tomcat # 重启</span><br><span class="line">systemctl stop tomcat # 停止</span><br><span class="line">systemctl disable tomcat # 禁止开机启动</span><br><span class="line">systemctl enable tomcat # 允许开机启动</span><br></pre></td></tr></table></figure><p>重启Linux客户端，尝试输入<a href="http://192.168.100.110:8080能否进入tomcat界面（注意：是你Linux客户端的IP）">http://192.168.100.110:8080能否进入tomcat界面（注意：是你Linux客户端的IP）</a></p><h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><h2 id="下载mysql"><a href="#下载mysql" class="headerlink" title="下载mysql"></a>下载mysql</h2><blockquote><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><p>百度网盘：<a href="https://pan.baidu.com/s/1gcaSIDpo874sVtiAOEYqYw" target="_blank" rel="noopener">https://pan.baidu.com/s/1gcaSIDpo874sVtiAOEYqYw</a> </p><p>提取码：0jvw</p></blockquote><h2 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h2><h3 id="检查是否已安装其它版本MySQL"><a href="#检查是否已安装其它版本MySQL" class="headerlink" title="检查是否已安装其它版本MySQL"></a>检查是否已安装其它版本MySQL</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -qa|grep mysql</span><br></pre></td></tr></table></figure><p> 如果有执行如下命令卸载这里卸载client和server</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps MySQL-client-5.5.52-1.linux2.6.x86_64</span><br><span class="line">rpm -e --nodeps MySQL-server-5.5.52-1.linux2.6.x86_64</span><br></pre></td></tr></table></figure><p>在此执行rpm -qa|grep mysql检查</p><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><h3 id="添加mysql组"><a href="#添加mysql组" class="headerlink" title="添加mysql组"></a>添加mysql组</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br></pre></td></tr></table></figure><h3 id="添加mysql用户"><a href="#添加mysql用户" class="headerlink" title="添加mysql用户"></a>添加mysql用户</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd -g mysql mysql</span><br></pre></td></tr></table></figure><h3 id="解压缩（复制代码注意版本）"><a href="#解压缩（复制代码注意版本）" class="headerlink" title="解压缩（复制代码注意版本）"></a>解压缩（复制代码注意版本）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;upload</span><br><span class="line">tar -zxvf mysql-5.7.29-linux-glibc2.12-x86_64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;</span><br></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">mv mysql-5.7.29-linux-glibc2.12-x86_64&#x2F; mysql-5.7.29</span><br></pre></td></tr></table></figure><h3 id="创建日志，data文件目录"><a href="#创建日志，data文件目录" class="headerlink" title="创建日志，data文件目录"></a>创建日志，data文件目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;data&#x2F;mysql&#x2F;data</span><br><span class="line">mkdir -p &#x2F;data&#x2F;mysql&#x2F;log</span><br><span class="line">touch  &#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.log</span><br></pre></td></tr></table></figure><h3 id="设置文件目录权限"><a href="#设置文件目录权限" class="headerlink" title="设置文件目录权限"></a>设置文件目录权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown -R mysql &#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;</span><br><span class="line">chgrp -R mysql &#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;</span><br><span class="line">chown -R mysql &#x2F;data&#x2F;mysql&#x2F;</span><br><span class="line">chgrp -R mysql &#x2F;data&#x2F;mysql&#x2F;</span><br></pre></td></tr></table></figure><blockquote><p>chown 将用户自己创建的文件或目录的所有权都交给指定的用户 root –&gt; mysql</p><p>chgrp 将用户自己创建的文件或目录的所有权都交给指定的组  root –&gt; mysql</p></blockquote><h3 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;bin&#x2F;mysqld --initialize --user&#x3D;mysql --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29 --datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data --explicit_defaults_for_timestamp</span><br></pre></td></tr></table></figure><ul><li>–initialize ：初始化</li><li>–user=mysql ：指定用户</li><li>–basedir=/usr/local/mysql-5.7.29：指定安装目录</li><li>–datadir=/data/mysql/data：指定数据目录</li><li>–explicit_defaults_for_timestamp：安装时间戳</li></ul><h3 id="复制随机密码"><a href="#复制随机密码" class="headerlink" title="复制随机密码"></a>复制随机密码</h3><p>RptgUmhR8C/r</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e912e2c504f4bcb044bd9d7.png"  alt=""></p><h3 id="配置my-cnf"><a href="#配置my-cnf" class="headerlink" title="配置my.cnf"></a>配置my.cnf</h3><p><strong>上传配好的my.cnf文件到/etc下</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysql]  </span><br><span class="line"># 设置mysql客户端默认字符集  </span><br><span class="line">default-character-set&#x3D;utf8   </span><br><span class="line">[mysqld]  </span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集  </span><br><span class="line">character-set-server&#x3D;utf8 </span><br><span class="line">#设置3306端口  </span><br><span class="line">port &#x3D; 3306 </span><br><span class="line"># 设置mysql的安装目录  </span><br><span class="line">basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29</span><br><span class="line"># 设置mysql数据库的数据的存放目录  </span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data</span><br><span class="line"># 允许最大连接数  </span><br><span class="line">max_connections&#x3D;300  </span><br><span class="line"># 创建新表时将使用的默认存储引擎  </span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br><span class="line"># 日志文件</span><br><span class="line">log-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.log</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e915e20504f4bcb047618f8.png"  alt=""></p><h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;etc</span><br><span class="line">chmod 644 &#x2F;etc&#x2F;my.cnf</span><br></pre></td></tr></table></figure><h3 id="配置mysql的环境变量"><a href="#配置mysql的环境变量" class="headerlink" title="配置mysql的环境变量"></a>配置mysql的环境变量</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME:&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h3 id="拷贝和配置启动文件"><a href="#拷贝和配置启动文件" class="headerlink" title="拷贝和配置启动文件"></a>拷贝和配置启动文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;support-files&#x2F;mysql.server</span><br><span class="line">往下找，在此处填写</span><br><span class="line">basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29 </span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9137b2504f4bcb04541e10.png"  alt=""></p><p>在复制mysql.server到etc目录下的/etc/init.d/mysqld</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqld</span><br></pre></td></tr></table></figure><p>设置文件权限</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x &#x2F;etc&#x2F;init.d&#x2F;mysqld</span><br></pre></td></tr></table></figure><h2 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><h2 id="修改mysql密码"><a href="#修改mysql密码" class="headerlink" title="修改mysql密码"></a>修改mysql密码</h2><h3 id="如果忘记保存初始密码"><a href="#如果忘记保存初始密码" class="headerlink" title="如果忘记保存初始密码"></a>如果忘记保存初始密码</h3><blockquote><p>初始化密码从 /usr/local/mysql-5.7.29/log/mysqld.log 文件中查找</p></blockquote><h3 id="登录mysql"><a href="#登录mysql" class="headerlink" title="登录mysql"></a>登录mysql</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>然后输入初始密码</p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set password &#x3D; password(&#39;123456&#39;);</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e915e4b504f4bcb047638f4.png"  alt=""></p><h4 id="退出mysql"><a href="#退出mysql" class="headerlink" title="退出mysql"></a>退出mysql</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><h4 id="使用新密码登录"><a href="#使用新密码登录" class="headerlink" title="使用新密码登录"></a>使用新密码登录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysq -uroot -p</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><h2 id="允许mysql远程访问"><a href="#允许mysql远程访问" class="headerlink" title="允许mysql远程访问"></a>允许mysql远程访问</h2><p>这里使用navicat</p><h3 id="查看3306端口是否开启"><a href="#查看3306端口是否开启" class="headerlink" title="查看3306端口是否开启"></a>查看3306端口是否开启</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --query-port&#x3D;22&#x2F;tcp</span><br></pre></td></tr></table></figure><h3 id="开启3306端口"><a href="#开启3306端口" class="headerlink" title="开启3306端口"></a>开启3306端口</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;3306&#x2F;tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="重启防火墙服务"><a href="#重启防火墙服务" class="headerlink" title="重启防火墙服务"></a>重启防火墙服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><h3 id="登录mysql开启最高权限"><a href="#登录mysql开启最高权限" class="headerlink" title="登录mysql开启最高权限"></a>登录mysql开启最高权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9162df504f4bcb047a254e.png"  alt=""></p><h2 id="使用navicat访问MySQL"><a href="#使用navicat访问MySQL" class="headerlink" title="使用navicat访问MySQL"></a>使用navicat访问MySQL</h2><p>新建连接，输入主机ip以及用户名和密码</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e916364504f4bcb047aa2cf.png"  alt=""></p><h2 id="将MySQL安装成系统服务"><a href="#将MySQL安装成系统服务" class="headerlink" title="将MySQL安装成系统服务"></a>将MySQL安装成系统服务</h2><h3 id="创建MySQL服务"><a href="#创建MySQL服务" class="headerlink" title="创建MySQL服务"></a>创建MySQL服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld.service</span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;MySQL</span><br><span class="line">After&#x3D;network.target syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;mysql</span><br><span class="line">Group&#x3D;mysql</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;bin&#x2F;mysqld --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf</span><br><span class="line">LimitNOFILE&#x3D;5000</span><br></pre></td></tr></table></figure><h3 id="给予执行权限"><a href="#给予执行权限" class="headerlink" title="给予执行权限"></a>给予执行权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld.service</span><br></pre></td></tr></table></figure><h3 id="重新加载使配置生效-1"><a href="#重新加载使配置生效-1" class="headerlink" title="重新加载使配置生效"></a>重新加载使配置生效</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="允许开机启动-1"><a href="#允许开机启动-1" class="headerlink" title="允许开机启动"></a>允许开机启动</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable mysqld.service</span><br></pre></td></tr></table></figure><h1 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h1><p>Redis是C语言开发，建议在linux上运行。</p><h2 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-5.0.8.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装-gcc-环境"><a href="#安装-gcc-环境" class="headerlink" title="安装 gcc 环境"></a>安装 gcc 环境</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure><h2 id="解压缩Redis源码包"><a href="#解压缩Redis源码包" class="headerlink" title="解压缩Redis源码包"></a>解压缩Redis源码包</h2><p>cd到upload目录下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;upload</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf redis-4.0.14.tar.gz -C &#x2F;usr&#x2F;local&#x2F;src</span><br></pre></td></tr></table></figure><h2 id="编译Redis源码并安装"><a href="#编译Redis源码并安装" class="headerlink" title="编译Redis源码并安装"></a>编译Redis源码并安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis-4.0.14&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make install PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;redis-4.0.14</span><br></pre></td></tr></table></figure><h2 id="将Redis安装目录配置到环境变量"><a href="#将Redis安装目录配置到环境变量" class="headerlink" title="将Redis安装目录配置到环境变量"></a>将Redis安装目录配置到环境变量</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;mysql-5.7.29&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;bin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h2 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92828ec2a9a83be5e7ae48.png"  alt=""></p><p>redis-cli：客户端工具</p><p>redis-server:服务端工具</p><h3 id="前端启动"><a href="#前端启动" class="headerlink" title="前端启动"></a>前端启动</h3><h4 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h4><p>cd 到在redis安装目录下运行redis-serve。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;bin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92829dc2a9a83be5e7b83d.png"  alt=""></p><h4 id="启动本机客户端"><a href="#启动本机客户端" class="headerlink" title="启动本机客户端"></a>启动本机客户端</h4><ol><li>新开一个ssh窗口</li><li>cd 到在redis安装目录下运行redis-cli。</li><li>不要关闭了这个客户端窗口，下面测试还要用到</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;bin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure><blockquote><p>redis-cli 默认访问的ip地址是127.0.0.1（localhost），端口号默认使用6379</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9283aec2a9a83be5e89747.png"  alt=""></p><h4 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set k1 hello</span><br><span class="line">get k1</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928479c2a9a83be5e92e06.png"  alt=""></p><h3 id="前端启动的关闭"><a href="#前端启动的关闭" class="headerlink" title="前端启动的关闭"></a>前端启动的关闭</h3><p> ctrl+c</p><blockquote><p>ctrl+c 后 则redis-server程序结束，不推荐使用此方法</p></blockquote><p>服务器停止后，连接被拒绝了</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928514c2a9a83be5e99650.png"  alt=""></p><h3 id="后端启动"><a href="#后端启动" class="headerlink" title="后端启动"></a>后端启动</h3><h4 id="复制redis的配置文件"><a href="#复制redis的配置文件" class="headerlink" title="复制redis的配置文件"></a>复制redis的配置文件</h4><p>在/usr/local/redis-4.0.14/新建一个conf目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14</span><br><span class="line">mkdir conf</span><br></pre></td></tr></table></figure><p>将 redis 源码包 <strong>/usr/local/src/redis-4.0.14</strong>中的 redis.conf 配置文件 复制到 <strong>/usr/local/redis-4.0.14/conf/</strong> 下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis-4.0.14</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928b06c2a9a83be5ed86a7.png"  alt=""></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp redis.conf &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;conf&#x2F;</span><br></pre></td></tr></table></figure><p>cd 到/usr/local/redis-4.0.14/的conf目录下使用ls查看是否复制过去了</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;conf&#x2F;</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928b25c2a9a83be5eda0cd.png"  alt=""></p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>此配置文件就是刚才复制到conf目录下的redis.conf文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;conf&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#更多详情参照linux基本命令</span><br><span class="line">#向光标之下查找</span><br><span class="line">:&#x2F;daemonize</span><br><span class="line">#向光标之上查找</span><br><span class="line">:?daemonize</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928c52c2a9a83be5ee5e31.png"  alt=""></p><p>将 <strong>daemonize 由 no 改为 yes</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e916a90504f4bcb04819845.png"  alt=""></p><p>然后:wq保存退出</p><h4 id="启动服务端-1"><a href="#启动服务端-1" class="headerlink" title="启动服务端"></a>启动服务端</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;bin</span><br><span class="line">或者</span><br><span class="line">cd ..&#x2F;bin</span><br><span class="line">#因为当前在conf目录下 redis-4.0.14是他的相对路径</span><br></pre></td></tr></table></figure><p><strong>使用指定的配置文件启动server</strong>（使redis.conf生效）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-server ..&#x2F;conf&#x2F;redis.conf</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928f04c2a9a83be5f00d32.png"  alt=""></p><h4 id="使用本机客户端访问"><a href="#使用本机客户端访问" class="headerlink" title="使用本机客户端访问"></a>使用本机客户端访问</h4><p>在刚才打开的新窗口再次调用get k1</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e928f7bc2a9a83be5f05ace.png"  alt=""></p><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><h3 id="添加6379端口防火墙例外："><a href="#添加6379端口防火墙例外：" class="headerlink" title="添加6379端口防火墙例外："></a>添加6379端口防火墙例外：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看6379端口是否开启</span><br><span class="line">firewall-cmd --permanent --query-port&#x3D;6379&#x2F;tcp</span><br><span class="line"># 允许外部访问6379端口</span><br><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;6379&#x2F;tcp --permanent</span><br><span class="line"># 重启防火墙</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><h3 id="修改-redis-conf-配置文件"><a href="#修改-redis-conf-配置文件" class="headerlink" title="修改 redis.conf 配置文件"></a>修改 redis.conf 配置文件</h3><p>默认安装redis只让本机连接所以要设置bind文件为本机的ip</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;conf</span><br><span class="line"></span><br><span class="line">vim redis-conf</span><br></pre></td></tr></table></figure><p>找到bind</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:&#x2F;bind</span><br></pre></td></tr></table></figure><p>设置bind</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bind 0.0.0.0 192.168.100.130</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e929858c2a9a83be5f622db.png"  alt=""></p><p>然后保存退出</p><h3 id="终止redis服务进程"><a href="#终止redis服务进程" class="headerlink" title="终止redis服务进程"></a>终止redis服务进程</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#到bin目录下</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;bin</span><br><span class="line">或者</span><br><span class="line">cd ..&#x2F;bin</span><br><span class="line">发现没有重启的程序</span><br><span class="line"></span><br><span class="line">#找到redis进程查看redis-server的端口</span><br><span class="line">ps -ef|grep redis</span><br><span class="line">#干掉进程</span><br><span class="line">kill -9 1662</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e929495c2a9a83be5f39acf.png"  alt=""></p><h3 id="启动redis服务"><a href="#启动redis服务" class="headerlink" title="启动redis服务"></a>启动redis服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#到bin目录下</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;redis-4.0.14&#x2F;bin</span><br><span class="line">或者</span><br><span class="line">cd ..&#x2F;bin</span><br><span class="line">#一定要使用配置文件启动</span><br><span class="line">redis-server ..&#x2F;conf&#x2F;redis.conf</span><br></pre></td></tr></table></figure><h3 id="远程客户端连接"><a href="#远程客户端连接" class="headerlink" title="远程客户端连接"></a>远程客户端连接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;redis-cli -h 192.168.100.130 -p 6379</span><br></pre></td></tr></table></figure><h2 id="使用redis客户端工具"><a href="#使用redis客户端工具" class="headerlink" title="使用redis客户端工具"></a>使用redis客户端工具</h2><h3 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h3><blockquote><p>链接：<a href="https://pan.baidu.com/s/1UTR5mVMCLUhR-jTFYoUsYA" target="_blank" rel="noopener">https://pan.baidu.com/s/1UTR5mVMCLUhR-jTFYoUsYA</a><br>提取码：e8bq </p></blockquote><h3 id="连接redis"><a href="#连接redis" class="headerlink" title="连接redis"></a>连接redis</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92915bc2a9a83be5f18212.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vmware15下载安装、Centos下载安装（图解）</title>
      <link href="/archives/4257653461.html"/>
      <url>/archives/4257653461.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载VMware15"><a href="#下载VMware15" class="headerlink" title="下载VMware15"></a>下载VMware15</h1><blockquote><p>下载链接: <a href="https://pan.baidu.com/s/1tfH9peAhT2oh_hMX3MKteA" target="_blank" rel="noopener">https://pan.baidu.com/s/1tfH9peAhT2oh_hMX3MKteA</a> 提取码: 3c8t</p><p>注册码： <a href="https://pan.baidu.com/s/1LeriLLOuIpb0CE-lOUKQOQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1LeriLLOuIpb0CE-lOUKQOQ</a> 提取码: x5o4</p></blockquote><h1 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h1><p>这里使用网易镜像库下载</p><blockquote><p><strong>网易开源镜像站</strong><a href="http://mirrors.163.com/" target="_blank" rel="noopener">http://mirrors.163.com/</a></p><p><strong>网易Centos下载</strong><a href="http://mirrors.163.com/centos/7.7.1908/isos/x86_64/" target="_blank" rel="noopener">http://mirrors.163.com/centos/7.7.1908/isos/x86_64/</a></p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e859d3c504f4bcb04dff5cf.png"  alt=""></p><h1 id="安装Centos系统"><a href="#安装Centos系统" class="headerlink" title="安装Centos系统"></a>安装Centos系统</h1><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e859f68504f4bcb04e1911b.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e859f7f504f4bcb04e1a238.png"  alt=""></p><p><strong>如果你还没有镜像，可以稍后选择</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e859f8c504f4bcb04e1ad14.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e859fc5504f4bcb04e1d5c2.png"  alt=""></p><h2 id="开始安装Centos系统"><a href="#开始安装Centos系统" class="headerlink" title="开始安装Centos系统"></a>开始安装Centos系统</h2><p>选择第一个，安装Centos</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e859fde504f4bcb04e1e4b7.png"  alt=""></p><h3 id="选择语言"><a href="#选择语言" class="headerlink" title="选择语言"></a>选择语言</h3><p>选中安装的时候所用的语言这里<strong>直接拉在最下面点击中文</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a01d504f4bcb04e21281.png"  alt=""></p><p>开始安装</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a050504f4bcb04e2366f.png"  alt=""></p><p>选择安装的硬盘，这点击一下就是了。然后再点击完成就好</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a069504f4bcb04e248ae.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a090504f4bcb04e2674f.png"  alt=""></p><h3 id="配置软件选择"><a href="#配置软件选择" class="headerlink" title="配置软件选择"></a>配置软件选择</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8aac504f4bcb0418219e.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8afb504f4bcb04187547.png"  alt=""></p><h3 id="配置网络，设置静态ip（重要）"><a href="#配置网络，设置静态ip（重要）" class="headerlink" title="配置网络，设置静态ip（重要）"></a>配置网络，设置静态ip（重要）</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8b60504f4bcb0418e17a.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8c3d504f4bcb0419ccb9.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8e2f504f4bcb041bd0b7.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8e49504f4bcb041bea01.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8e58504f4bcb041bf96f.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8e9d504f4bcb041c4578.png"  alt=""></p><p><strong>这里一般第一次配置都需要管理员权限，看看右下角</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8eb3504f4bcb041c59de.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8f1f504f4bcb041ccc32.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8f0c504f4bcb041cb9e9.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8f2f504f4bcb041cdd98.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8f3b504f4bcb041ce928.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8d8f45504f4bcb041cf549.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe550504f4bcb042e76a4.png"  alt=""></p><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>设置root密码    <strong>设置简单点</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a0f1504f4bcb04e2a997.png"  alt=""></p><p>然后等待几分钟就好了</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a149504f4bcb04e2e50a.png"  alt=""></p><h2 id="登录Centos"><a href="#登录Centos" class="headerlink" title="登录Centos"></a>登录Centos</h2><ul><li><strong>这里注意，密码是不显示的，</strong></li><li><strong>默认开机数字键盘锁是开了的，</strong></li><li><strong>设置的是英文密码就直接输入</strong></li><li><strong>需要打开你键盘的数字锁直接输入你之前设置的root密码然后回车</strong></li></ul><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a19a504f4bcb04e32361.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a236504f4bcb04e394ae.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vmware15 </tag>
            
            <tag> Centos </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本命令、解压和压缩、用户管理、权限管理、vim编辑器的使用</title>
      <link href="/archives/4086565940.html"/>
      <url>/archives/4086565940.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h1><ul><li>/根目录</li><li><strong>root，存放root用户的相关文件</strong></li><li><strong>home，存放普通用户的相关文件</strong></li><li>bin，存放常用命令的目录，如vi，su</li><li>sbin，要具有一定权限才可以使用命令</li><li>mnt，默认挂载光驱和软驱的目录</li><li><strong>etc，存放配置的相关文件</strong></li><li>var，存放经常变化的文件，如网络连接的sock文件 、日志</li><li>boot，存放引导系统启动的相关文件</li><li><strong>usr，安装一个软件的默认目录，相当于windows下的program files</strong></li><li>proc，这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息</li><li>srv ，service缩写。该目录存放一些服务启动之后需要提取的数据</li><li>sys，这是linux2.6内核的一个很大的变化，该目录下安装了2.6内核中新出现的一个文件系统</li><li>tmp，这个目录是用来存放一些临时文件的</li><li>del，类似于windows的设备管理器，把所有的硬件用文件的形式存储</li><li>media，系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里面的内容了。</li><li><strong>opt，这是给主机额外安装软件所摆放，如安装oracle数据库就可放到该目录下默认为空。</strong></li><li>selinux，selinux是一种安全子系统，它能控制程序只能访问特定文件。</li></ul><h1 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h1><p>在敲出/文件 或者/目录 或者/命令的前几个命令之后，按下tab键，如果输入的没有错，即该命令，或者该文件目录是存在的，系统会自动补全，如果存在多个开头字母的命令，系统也会列出所有相关的命令供我们选择</p><h1 id="使用过的命令"><a href="#使用过的命令" class="headerlink" title="使用过的命令"></a>使用过的命令</h1><p>使用上/下光标键来切换之前使用的命令</p><p>如果要退出选择，并且不想执行当前选中的命令（执行则按回车）可以按ctrl +c</p><h1 id="文件和目录命令"><a href="#文件和目录命令" class="headerlink" title="文件和目录命令"></a>文件和目录命令</h1><h2 id="在linux里所有的命令是区分大小写的，所以我们用命令的时候都是用小写"><a href="#在linux里所有的命令是区分大小写的，所以我们用命令的时候都是用小写" class="headerlink" title="在linux里所有的命令是区分大小写的，所以我们用命令的时候都是用小写"></a><strong>在linux里所有的命令是区分大小写的，所以我们用命令的时候都是用小写</strong></h2><h2 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h2><p>清屏</p><h2 id="ip-addr"><a href="#ip-addr" class="headerlink" title="ip addr"></a>ip addr</h2><p>查看ip地址</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85a2f3504f4bcb04e428ba.png"  alt=""></p><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><ul><li>ls -a ：all 列出当前目录下所有文件，包括.开头的隐藏文件</li><li>ls -l ：long listing formage,列出明细列表信息</li><li>ls -l  <em>.db：列出以db结尾的文件的详细信息，（※）为通配符代表任意多个字符(*</em>只对文件有作用**)</li><li>ls s※：列出目前工作目录下所有名称是s开头的文件</li></ul><h2 id="ll-相当于ls-l"><a href="#ll-相当于ls-l" class="headerlink" title="ll(相当于ls -l)"></a>ll(相当于ls -l)</h2><p>是Long Listing format的缩写，列出当前位置文件及文件夹的明细列表，包括隐藏文件</p><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><p>pwd是print working directory的缩写，打印当前该工作目录</p><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><p>cd是chang directory的缩写，切换工作目录</p><ul><li>cd ~:切换到工作目录</li><li>cd .. :切换到上一级目录【.表示当前目录，..表示上一级目录】</li><li>cd ../..:切换到当前目录的上两层目录</li><li>cd -：切换到上一次所在的目录</li><li>cd /:切换到系统根目录</li><li>cd /usr:切换到usr目录</li></ul><h2 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h2><p>创建文件或修改文件时间</p><ul><li>如果文件不存在，可创建一个空白文件</li><li>如果文件存在，可以修改文件的末次修改日期</li></ul><p><strong>这里观察hexo文件的创建时间，第一次使touch命令是直接创hexo文件，因为hexo文件不存在，第二次使用touch是hexo文件存在，就修改该文件的末次修改时间</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85576c504f4bcb04ab4c57.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8557bd504f4bcb04ab7105.png"  alt=""></p><blockquote><p>例如：touch a.txt 表示创建a.txt  虽然mkdir也可以创建文件，但是一般创建文件还是使用touch，mkdir一般用来创建目录（文件夹）</p></blockquote><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><ul><li>mkdir：是make directory的缩写，创建目录</li><li>mkdir -p ./dir1/dir2：表示在当前目录下创建dir1目录，在dir1中创建子目录dir2。-p表示父目录，parent当父目录不存在时，同时创建父目录，也就是递归创建目录。【<strong>创建多级目录</strong>】</li></ul><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85594e504f4bcb04ac3513.png"  alt=""></p><blockquote><p>加粗的就是文件夹，没有后缀</p><p>带有后缀的，未加粗的就是文件</p></blockquote><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>是remove的缩写，删除文件或目录</p><blockquote><p>使用rm命令删除的文件不能恢复，善用</p></blockquote><ul><li>-r：recursive递归删除，删除目录及目录下所有文件，非空也可以删除</li><li>-f：force强制删除</li><li>rm -rf  *：强制删除当前目录下的所有文件</li><li>rm world*：删除以world开头的文件</li><li>rm *.txt：删除以.txt后缀的文件</li></ul><blockquote><p>这里注意，如果在当前文件夹目录下</p><p>使用rm -rf用绝对路径删除当前文件夹（所在目录）的时候，会删除当前目录上一级里所有的文件，也就是当前所在目录相对的所有文件都会被删除</p><p>我这里就误删了，把root里的所有文件都删除了。。。</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e855f65504f4bcb04af363c.png"  alt=""></p><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><p>是copy的缩写，复制文件的命令</p><ul><li>-a：选项all通常在复制目录的时候使用，它保留链接、文件属性、并复制目录下的所有内容</li><li>-f：force强制覆盖，覆盖已经存在的目标文件而不给出提示</li><li>-i：-i和-f相反，在覆盖目标文件之前给出提示，要求用户是否确认覆盖，回答y才会执行覆盖</li><li>-r：recursive递归赋值，如果给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。例如：cp -ai ./dir1./dir2</li></ul><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><p>mv是move的缩写，剪切文件或者将文件改名</p><p>语法格式：mv  源文件  目标文件</p><ul><li>mv dir1 dir2 :移动到一个文件到指定目录（目标文件存在即移动源文件到指定目录，目标文件不存在就是将源文件名改成目标文件名）</li><li>mv /a/a.txt /b/b.txt：移动a目录下的a.txt到b目录下，并改名为b.txt</li><li>mv /b/b.tt /b/c ：移动b目录下的b.txt到b目录下的c目录下</li></ul><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><p>是concatenate的缩写，连接和打印文件，显示文件内容，不可以进行修改，<strong>cat会一次显示所有 内容，适合查看内容较少的文本文件</strong></p><ul><li>-n或–number：由1开始对所有输出的行数编号</li><li>-b或–number-nonblank：和-n相似，只不过对于空白行不编号</li></ul><blockquote><p>只能cat文件，不能cat目录</p></blockquote><h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><p>less和more相似，但使用less可以随意浏览文件，而more仅能向前移动，且无法查看之前不会加载整个文件</p><p>语法：less [参数] 文件</p><blockquote><ol><li>linux中命令cat、more、less都可以用来查看文件内容主要却别</li><li>cat：是一次性显示整个文件的内容，还可以将多个文件连在一起显示，它常与重定向符号配合使用，适用于文件内容较少的情况</li><li>more和less一般用在显示文件超过一个屏幕的内容，并且提供翻页的功能。</li><li>more比cat强大，提供分页显示的功能</li><li>less比more强大，提供翻译，跳转，查找等命令</li><li>more和less都支持用空格显示下一页，按b显示上一页</li></ol></blockquote><p><strong>常用参数</strong></p><ul><li>空格键：滚动一页（一个屏幕）</li><li>回车键：滚动一行</li><li>[pagedown]（向下的箭头键盘按钮）：向下翻动一页</li><li>[pageup]（向上的箭头键盘按钮）：向上翻动一页</li><li>/字符串：向下搜索“字符串”</li><li>?字符串：向上搜索”字符串“</li><li>n：重复前一个搜素（与/或?有关）</li><li>N：反向重复前一个搜素（与/或?有关）</li></ul><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><ul><li>显示头文件n行内容</li><li>语法结构：head [-n] 文件名</li><li>-n 指定显示多少行</li><li>例如 head -n 10 aa.txt</li><li>表示显示aa.txt的前10行</li></ul><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><ul><li>显示文件尾几行内容</li><li>语法结构：tail [-nf] 文件名</li><li>-n 指定显示多少行，没有-n默认显示10行</li><li>-f 实时追踪文件的所有更新，常用来查阅正在改变的日志文件<strong>[动态显示]</strong>，例如：tail -f -n 3 aa.txt</li><li>表示显示aa.txt文件的最后前3行，并在aa.txt文件更新时实时追加显示</li></ul><h2 id="gt-、-gt-gt"><a href="#gt-、-gt-gt" class="headerlink" title="&gt;、&gt;&gt;"></a>&gt;、&gt;&gt;</h2><p>echo会在终端显示参数指定的文字，通常会和重定向结合使用</p><p>linux运行将命令执行结果重定向到一个文件</p><p>将本该显示的终端上的内容输入或者追加到指定文件中</p><p>‘&gt;’：表示输出，会覆盖文件原有的内容</p><p>‘&gt;&gt;’：表示追加，会将内容追加（新增）到文件的末尾</p><p>例如：ls -l &gt; file</p><p>表示将ls -l命令结果输出到file文件中，如果file不存在就创建，如果file存在，则覆盖file有的内容</p><p>例如：echo hello &gt; a.txt</p><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><ol><li><p>按照修改时间查找</p><ul><li>find ./.mtime-1</li><li>表示查找当前目录下最近1天内（24小时）修改过的文件</li></ul></li><li><p>按照尺寸查找</p><ul><li>find ./-size -1M</li><li>查找当前目录下小于1M的文件</li></ul></li><li><p>按照文件类型查找</p><ul><li>find ./ -type f</li><li>find ./ -type d</li><li>查找当前目录下的文件或目录(f是普通文件，d是目录)</li></ul></li><li><p>按照文件名查找</p><ul><li><p>find . -name ‘*.text’</p></li><li><p>查找当前目录下的文件或目录(f是普通文件，d是目录)</p></li></ul></li></ol><h1 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h1><ul><li>ps -ef ：显示所有进程信息，后面是从进程中查找Java进程是否纯在</li><li> class="lazyload" data-src="https://pic.downk.cc/item/5e859807504f4bcb04dbd566.png" <img src="/"></li><li>|：可以将多条命令连接在一起执行</li><li>grep：查找文件里符合条件的字符串</li><li>ps -ef | grep java ：查找java进程</li><li>PID：进程的唯一标识符</li><li><strong>干掉进程：kill -9 （进程号pid）</strong></li></ul><h1 id="解压、压缩和打包"><a href="#解压、压缩和打包" class="headerlink" title="解压、压缩和打包"></a>解压、压缩和打包</h1><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><p>是tape archive的缩写，是把文件打包并上传到磁带粗胆囊，打包就是把多个文件包成一个大文件</p><p>选项有zxvf、zcvf、jxvf、jcvf</p><ul><li>-z ：表示处理tar.gz文件 gzip</li><li>-x：extract表示提取提炼的意思，解压</li><li>-v：verbose表示各种各样的文件</li><li>-c：compress压缩文件</li><li>-j：表示处理bzip2格式的文件（后缀为tar.bz2）</li><li>-C：参数可以指定解压到特定的目录</li><li>-f：显示解压的详细信息</li></ul><ol><li>tar -zxvf file.tar.gz -C ./test：解压gar.gz到当前目录下的text子目录中</li><li>tar -zcvf /dir2/file.tar.gz ./dire/：压缩tar.gz（把当前目录下的dir1目录及子目录下所有文件压缩到dir2目录下，文件名为file.tar.gz。当使用tar -zxvf file.tar.gz解压出来时，带有目录dir1）</li><li>tar -jxvf file.tar.bz2：解药tar.bz2到当前目录下</li><li>tar -jcvf file.tar.bz2 ./dir1/：压缩tar.bz2(把当前目录下的dir1目录及子目录下所有文件压缩到当前目录下，文件名为file.tar.gz2)</li></ol><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><ul><li>压缩zip文件</li><li>zip -f file.zip ./dir1/</li><li>压缩zip（把当前目录下的dir1目录及子目录下所有文件压缩到当前目录下，文件名为file.zip）</li></ul><h2 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h2><ul><li>解压zip文件</li><li>unzip file.zip：解压zip文件到当前目录中</li><li>unzip -o mdmtest .war -d/opt/mdm</li><li>推荐使用unzip解压war包</li><li>-o：overwrite 覆盖的意思</li><li>-d：directory 指定文件解压后存储的目录</li></ul><h2 id="执行zip未找到命令"><a href="#执行zip未找到命令" class="headerlink" title="执行zip未找到命令"></a>执行zip未找到命令</h2><blockquote><p><strong>yum install zip</strong></p><p><strong>yum install unzip</strong></p><p>然后输入y安装即可</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85b0df504f4bcb04efdb80.png"  alt=""></p><h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><p>压缩和解压gzip文件</p><blockquote><p><strong>只能压缩文件</strong></p></blockquote><ul><li>geip file：压缩file文件为gzip格式（不保留原文件）</li><li>gzip -9 file：最大程度压缩file文件为gzip格式</li><li>gizp -d file.gz ：解压file.ge文件</li></ul><h2 id="bzip2-未找到命令"><a href="#bzip2-未找到命令" class="headerlink" title="bzip2: 未找到命令"></a>bzip2: 未找到命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install bzip2</span><br></pre></td></tr></table></figure><h2 id="bzip2"><a href="#bzip2" class="headerlink" title="bzip2"></a>bzip2</h2><p><strong>只能操作单个文件</strong></p><p>压缩和解压bzip2文件</p><ul><li>bzip2 -k file：-k表示保留原文件，压缩file文件为bzip格式</li><li>bzip2 -d -k file.bz2：解压file.bz2文件，保留源文件</li></ul><h1 id="vim文本编辑器"><a href="#vim文本编辑器" class="headerlink" title="vim文本编辑器"></a>vim文本编辑器</h1><p>具有程序编辑能力，主要是用来编辑文本</p><p>使用语法：vim  a.txt </p><blockquote><p>文件存在则进入命令模式。不存在会先创建文件</p></blockquote><p><strong>编辑模式：</strong></p><ul><li>按键盘v或者i进入编辑模式</li><li>退出编辑模式按exc</li></ul><p><strong>命令模式：</strong></p><ul><li>：w     保存 也可使用shirt+z+z快捷键</li><li>:    q     退出 </li><li>：wq    保存并退出</li><li>：q!      强制退出</li><li>：w!      强制保存</li></ul><h2 id="vim-未找到命令"><a href="#vim-未找到命令" class="headerlink" title="vim: 未找到命令"></a>vim: 未找到命令</h2><p>yum install vim</p><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h2><ul><li>创建用户账号，账号创建好后</li><li>用passwd设置账号的密码。</li><li>可已使用userdel删除账号。</li></ul><p><strong>添加普通（一般，权限比root低）账户</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd user01</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85b941504f4bcb04f606bf.png"  alt=""></p><p><strong>为添加的用户指定相应的用户组</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usermod -g root user01</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e85bb2c504f4bcb04f75b28.png"  alt=""></p><p><strong>创建一个系统用户</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd -r user02</span><br></pre></td></tr></table></figure><p>创建用户并指定root用户组</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd -g root user03</span><br></pre></td></tr></table></figure><h2 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h2><p>给指定的用户设置密码</p><p>语法 passwd  参数  用户名</p><p>参数：</p><ul><li>d 删除密码</li><li>-f：强制执行</li><li>-l：停止账号使用</li><li>-u：启用被停止的账户</li></ul><h2 id="userdel"><a href="#userdel" class="headerlink" title="userdel"></a>userdel</h2><p>删除用户</p><p>语法： userdel 用户名</p><h2 id="su"><a href="#su" class="headerlink" title="su"></a>su</h2><p>切换 用户</p><p>语法 ：su 想要切换的目标用户名</p><blockquote><p>直接输入su。默认是切换到root账户</p></blockquote><h1 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h1><p>分为三级：文件拥有者、群组、其他</p><p><strong>语法格式： chmod [-vR] mode 文件名</strong></p><p>mode 权限设置字串,格式为[ugoa] [+-=] [rwx]</p><ul><li>u：表示该文件的 拥有者</li><li>g：表示与该文件的拥有者属于同一组group的</li><li>o：other表示其他人</li><li>a：表示这三者都有</li><li>+：表示增加权限</li><li>-：表示取消权限</li><li>=：表示唯一设定权限</li><li>r：read表示可读取</li><li>w：write表示写入</li><li>x：表示执行</li><li>-R：对目前目录下的所有文件与子目录进行相同的权限变更（即目标目录的子目录也执行相应的命令【递归的方式】）</li></ul><h2 id="使用数字"><a href="#使用数字" class="headerlink" title="使用数字"></a>使用数字</h2><p>语法 chmod abc file</p><blockquote><p>其中abc各位一个数字，分别表示user，group，other的权限</p></blockquote><p>r=4、w=2、x=1</p><ul><li>如果是使用rwx属性则4+2+1=7；</li><li>如果使用rw属性则4+2=6</li><li>如果使用rx属性则4+1=5；</li></ul><p>给a.txt文件中增加读写执行的权限,在自己以及同组和其他都能有该权限</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chomd 777 a.txt</span><br></pre></td></tr></table></figure><p>给当前目录下所有后缀（扩展名）为.txt的文件增加可执行的权限</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chomd +x *.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基本命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程、TCP协议、TCP传输数据、多线程连接池通讯、网络结构、编写web服务器</title>
      <link href="/archives/2202648686.html"/>
      <url>/archives/2202648686.html</url>
      
        <content type="html"><![CDATA[<h1 id="软件结构"><a href="#软件结构" class="headerlink" title="软件结构"></a>软件结构</h1><h2 id="c-s结构"><a href="#c-s结构" class="headerlink" title="c/s结构"></a>c/s结构</h2><ul><li>全称Client/Server结构，是指客户端和服务器结构。</li><li>是建立在局域网的基础上的。一般建立在专用的网络上, 小范围里的网络环境, 局域网之间再通过专门服务器提供连接和数据交换服务. </li><li>更加注重流程, 可以对权限多层次校验, 对系统运行速度可以较少考虑. </li></ul><h2 id="B-S结构"><a href="#B-S结构" class="headerlink" title="B/S结构"></a>B/S结构</h2><ul><li>全称为Browser/server，指的是浏览器和服务器结构</li><li>建立在广域网的基础上的.</li><li>对安全以及访问速度的多重的考虑, 建立在需要更加优化的基础之上.</li></ul><h1 id="网络通信协议和TCP-IP协议"><a href="#网络通信协议和TCP-IP协议" class="headerlink" title="网络通信协议和TCP/IP协议"></a>网络通信协议和TCP/IP协议</h1><ol><li>网络通信协议：通过计算机网路可以使更多的计算机时间连接，位于同一网络中的计算机在进行连接和通信时，需要遵守一定的规则。这些连接和通信的规则就称为网通信协议</li><li>tcp/ip协议：传输控制协议/因特网互联协议（Transmission Control Protocol/ Internet Protocol） 是Internet最基本、广泛的协议，定义了计算机如何连入互联网，以及数据传输的标准，它内部包含了一系列来处理数据通信的协议，并采用了多层的分层模型。每一层都呼叫它的下一层来完成自己的需求</li></ol><ul><li>OSI七层模型</li><li>Tcp/ip四层模型</li><li>TCp/ip五层模型</li></ul><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/27/G96iJ1.png"  alt="G96iJ1.png"></p><p><strong>网络接口层：</strong>网络接口是用于定义物理传输通道，如网线</p><p><strong>网络层：</strong>是整个tcp/ip协议核心，只要将传输的数据进行分组，将分组数据发送到目标计算机或网络</p><p><strong>传输层：</strong>主要使网络程序进行通信，在通信的时候，可以采用tcp协议，也可以使用udp协议（我们主要是在这一层做操作）</p><p><strong>应用层：</strong>负责应用程序的协议，例如http，ftp协议等</p><h2 id="分类协议"><a href="#分类协议" class="headerlink" title="分类协议"></a>分类协议</h2><p>java.net包中包含了类和接口，提供低层次的通信细节，使用该这些类和接口专注网络程序开发，不用考虑通信细节，该包提供了常用的两种网络协议，tcp和udp协议</p><ul><li>udp：：ternet 协议集支持一个无连接的传输协议，该协议称为用户数据报协议（UDP，User Datagram Protocol）。UDP 为应用程序提供了一种无需建立连接就可以发送封装的 IP 数据包的方法。无连接的是 UDP，它除了给应用程序发送数据包功能并允许它们在所需的层次上架构自己的协议之外，几乎没有做什么特别的事情。适合于一次传输少量数据64k以内</li><li>tcp：（TCP，Transmission Control Protocol）是一种面向连接的、可靠的、基于字节流的传输层通信协议。</li></ul><h3 id="tcp的三次握手"><a href="#tcp的三次握手" class="headerlink" title="tcp的三次握手"></a>tcp的三次握手</h3><p>在发送数据的准备阶段，客户端与服务器有三次交互</p><ol><li>第一次：客户端向服务器发出连接请求，等待服务器确认</li><li>第二次：服务器向客户端回送一个响应，通知科客户端收到了连接请求</li><li>第三次：客户端再次向服务器发送确认信息，确认连接</li></ol><blockquote><p>所有的请求都是由客户端发出，服务端不能主动向客户端发送请求</p></blockquote><h1 id="网络编程的三要素"><a href="#网络编程的三要素" class="headerlink" title="网络编程的三要素"></a>网络编程的三要素</h1><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><p>采用的通信协议，即上文介绍的协议</p><h2 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h2><p>定位网络中计算机的位置</p><blockquote><p>ipv4：<a href="https://baike.baidu.com/item/IPv4/422599?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/IPv4/422599?fr=aladdin</a></p><p>ipv6:<a href="https://baike.baidu.com/item/IPv6/172297?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/IPv6/172297?fr=aladdin</a></p></blockquote><h2 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h2><p>定位计算机中的应用程序</p><h1 id="TCP通信程序"><a href="#TCP通信程序" class="headerlink" title="TCP通信程序"></a>TCP通信程序</h1><p>tcp通信能实现两台计算机之间的数据交互，通信的两端，分为客户端和服务器端</p><p>两端通信的时候的步骤：</p><ol><li>服务端程序需要先启动，等待客户端里连接</li><li>客户端主动连接服务器，连接成功了才能通信，服务端不能主动连接客户端</li></ol><p>java中提供了两个类实现tcp通信：</p><ol><li>客户端：java.net.Socket 类中，创建Socket对象，向服务器发出 连接请求，服务端相应请求，两者建立连接开始通信</li><li>服务端：java.net.ServerSocket 类，创建ServerSocket对象，类似开启了一个服务，等待Socket客户端连接</li></ol><h2 id="Socket类"><a href="#Socket类" class="headerlink" title="Socket类"></a>Socket类</h2><p>实现客户端套接字，套接字指的是两台设备之间通讯的端点</p><h3 id="Socket构造方法"><a href="#Socket构造方法" class="headerlink" title="Socket构造方法"></a>Socket构造方法</h3><ul><li>public Socket(String host,int port):创建套接字对象将其连接到指定主机上的指定端口号，<strong>如果指定的host是null，则相当于指定地址回送地址</strong></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="comment">//1创建一个客户端连接对象</span></span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"localhost"</span>,<span class="number">8080</span>);</span><br><span class="line"><span class="comment">//localhost:本地服务器也可以写成127.0.0.1</span></span><br><span class="line"><span class="comment">//8080：指定服务器端口号</span></span><br></pre></td></tr></table></figure><h2 id="ServerSocket类"><a href="#ServerSocket类" class="headerlink" title="ServerSocket类"></a>ServerSocket类</h2><p>实现服务器端套接字</p><h3 id="ServerSocket构造方法"><a href="#ServerSocket构造方法" class="headerlink" title="ServerSocket构造方法"></a>ServerSocket构造方法</h3><ul><li>public ServerSocket(int port) ：创建一个指定端口号为8080的服务器套接字对象</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.创建服务器套接对象</span></span><br><span class="line">ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><blockquote><p>这里需要注意，需要先启动服务器在来启动客户端，否则客户端回报错找不到该端口号的服务器</p></blockquote><h3 id="ServerSocket成员方法"><a href="#ServerSocket成员方法" class="headerlink" title="ServerSocket成员方法"></a>ServerSocket成员方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Socket <span class="title">accept</span><span class="params">()</span> <span class="comment">//侦听并接受连接，返回一个新的socket对象，用于和客户端实现通信，该方法会一直阻塞，知道建立连接</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.创建服务器套接对象</span></span><br><span class="line">ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">Socket socket = serverSocket.accept();<span class="comment">//侦听并接受连接，返回一个新的socket对象，用于和客户端实现通信，该方法会一直阻塞，知道建立连接</span></span><br><span class="line">System.out.println(<span class="string">"建立客户端连接"</span> + socket);</span><br></pre></td></tr></table></figure><h2 id="网络传输图解（使用字节流传输数据）"><a href="#网络传输图解（使用字节流传输数据）" class="headerlink" title="网络传输图解（使用字节流传输数据）"></a>网络传输图解（使用字节流传输数据）</h2><h3 id="客户端向服务器发送数据"><a href="#客户端向服务器发送数据" class="headerlink" title="客户端向服务器发送数据"></a>客户端向服务器发送数据</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e81b722504f4bcb0424f7a6.png"  alt=""></p><h3 id="服务器向客户端发送数据"><a href="#服务器向客户端发送数据" class="headerlink" title="服务器向客户端发送数据"></a>服务器向客户端发送数据</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82aba2504f4bcb04cb59ee.png"  alt=""></p><h2 id="客户端向服务器通信代码演示"><a href="#客户端向服务器通信代码演示" class="headerlink" title="客户端向服务器通信代码演示"></a>客户端向服务器通信代码演示</h2><h3 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yq;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpCilent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1创建一个客户端连接对象</span></span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"localhost"</span>,<span class="number">8080</span>);</span><br><span class="line">       <span class="comment">//2获取字节输出流对象</span></span><br><span class="line">        OutputStream out= socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3向服务器发送数据</span></span><br><span class="line">        out.write(<span class="string">"大脚好"</span>.getBytes());</span><br><span class="line">        <span class="comment">//从网络中读取数据</span></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="keyword">byte</span> [] bytes= <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = in.read(bytes);</span><br><span class="line">        System.out.println(<span class="string">"获取服务器给的数据："</span>+<span class="keyword">new</span> String(bytes,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4关闭字节输出流</span></span><br><span class="line">        out.close();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="comment">//5关闭连接通道</span></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//本地iploacalhost 127.0.0.1</span></span><br></pre></td></tr></table></figure><h3 id="服务器端代码"><a href="#服务器端代码" class="headerlink" title="服务器端代码"></a>服务器端代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yq;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.util.xml.impl.Input;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器套接对象</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        System.out.println(<span class="string">"启动服务器，等待客户端的连接"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//接受客户端的信息</span></span><br><span class="line">            Socket socket = serverSocket.accept();<span class="comment">//侦听并接受连接，返回一个新的socket对象，用于和客户端实现通信，该方法会一直阻塞，知道建立连接</span></span><br><span class="line">            System.out.println(<span class="string">"建立客户端连接"</span> + socket);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.获取 客户端发送过来的数据</span></span><br><span class="line">            InputStream in = socket.getInputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             int len = 0;</span></span><br><span class="line"><span class="comment">             while ((len = in.read(bytes)) != -1) &#123;</span></span><br><span class="line"><span class="comment">             System.out.println(new String(bytes, 0, len));</span></span><br><span class="line"><span class="comment">             &#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">int</span> len = in.read(bytes);</span><br><span class="line">            String name = <span class="keyword">new</span> String (bytes,<span class="number">0</span>,len);</span><br><span class="line">            System.out.println(name);</span><br><span class="line">            <span class="comment">//4给客户端发送信息 将内存中的数据写到网络里</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//4关闭input流</span></span><br><span class="line">            in.close();</span><br><span class="line">            <span class="comment">//5关闭等待的客户端</span></span><br><span class="line">            socket.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行图示"><a href="#运行图示" class="headerlink" title="运行图示"></a>运行图示</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82a96f504f4bcb04c9e2db.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82a9a8504f4bcb04ca121c.png"  alt=""></p><h2 id="服务器向客户端通信代码演示（服务器连接多个客户端）"><a href="#服务器向客户端通信代码演示（服务器连接多个客户端）" class="headerlink" title="服务器向客户端通信代码演示（服务器连接多个客户端）"></a>服务器向客户端通信代码演示（服务器连接多个客户端）</h2><h3 id="客户端代码-1"><a href="#客户端代码-1" class="headerlink" title="客户端代码"></a>客户端代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpCilent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1创建一个客户端连接对象</span></span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"localhost"</span>,<span class="number">8080</span>);</span><br><span class="line">       <span class="comment">//2获取字节输出流对象</span></span><br><span class="line">        OutputStream out= socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3向服务器发送数据</span></span><br><span class="line">        out.write(<span class="string">"你好啊服务器，我是客户端"</span>.getBytes());</span><br><span class="line">        <span class="comment">//从网络中读取数据</span></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="keyword">byte</span> [] bytes= <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = in.read(bytes);</span><br><span class="line">        System.out.println(<span class="string">"获取服务器给的数据："</span>+<span class="keyword">new</span> String(bytes,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4关闭字节输出流</span></span><br><span class="line">        out.close();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="comment">//5关闭连接通道</span></span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//本地iploacalhost 127.0.0.1</span></span><br></pre></td></tr></table></figure><h3 id="服务器端代码-1"><a href="#服务器端代码-1" class="headerlink" title="服务器端代码"></a>服务器端代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdk.internal.util.xml.impl.Input;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器套接对象</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        System.out.println(<span class="string">"启动服务器，等待客户端的连接"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//接受客户端的信息</span></span><br><span class="line">            Socket socket = serverSocket.accept();<span class="comment">//侦听并接受连接，返回一个新的socket对象，用于和客户端实现通信，该方法会一直阻塞，知道建立连接</span></span><br><span class="line">            System.out.println(<span class="string">"建立客户端连接"</span> + socket);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.获取 客户端发送过来的数据</span></span><br><span class="line">            InputStream in = socket.getInputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             int len = 0;</span></span><br><span class="line"><span class="comment">             while ((len = in.read(bytes)) != -1) &#123;</span></span><br><span class="line"><span class="comment">             System.out.println(new String(bytes, 0, len));</span></span><br><span class="line"><span class="comment">             &#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">int</span> len = in.read(bytes);</span><br><span class="line">            String name = <span class="keyword">new</span> String (bytes,<span class="number">0</span>,len);</span><br><span class="line">            System.out.println(name);</span><br><span class="line">            <span class="comment">//4给客户端发送信息 将内存中的数据写到网络里</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取字节输出流</span></span><br><span class="line">            OutputStream out= socket.getOutputStream();</span><br><span class="line">            out.write((<span class="string">"你好"</span>+name).getBytes());</span><br><span class="line"></span><br><span class="line">            out.close();</span><br><span class="line">            <span class="comment">//4关闭input流</span></span><br><span class="line">            in.close();</span><br><span class="line">            <span class="comment">//5关闭等待的客户端</span></span><br><span class="line">            socket.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行图示-1"><a href="#运行图示-1" class="headerlink" title="运行图示"></a>运行图示</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82aafc504f4bcb04caecdc.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82ab08504f4bcb04caf4da.png"  alt=""></p><h1 id="使用多线程，线程连接池通信（使用字符流传输数据）"><a href="#使用多线程，线程连接池通信（使用字符流传输数据）" class="headerlink" title="使用多线程，线程连接池通信（使用字符流传输数据）"></a>使用多线程，线程连接池通信（使用字符流传输数据）</h1><p>客户端代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zmc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpCilent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1创建一个客户端连接对象</span></span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"localhost"</span>,<span class="number">8080</span>);</span><br><span class="line">       <span class="comment">//2获取字符输出流对象 客户端向服务器发送数据</span></span><br><span class="line">        PrintStream out = <span class="keyword">new</span> PrintStream(socket.getOutputStream());</span><br><span class="line">        <span class="comment">//从键盘输入内容发送个服务器</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNextLine())&#123;</span><br><span class="line">            String content = sc.nextLine();</span><br><span class="line">            out.println(content);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"Q"</span>.equals(content))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        out.close();</span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//5关闭连接通道</span></span><br><span class="line"><span class="comment">//        socket.close();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器端代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zmc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器套接对象</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        System.out.println(<span class="string">"启动服务器，等待客户端的连接"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//2.接受客户端的信息</span></span><br><span class="line">                        Socket socket = serverSocket.accept();<span class="comment">//侦听并接受连接，返回一个新的socket对象，用于和客户端实现通信，该方法会一直阻塞，知道建立连接</span></span><br><span class="line">                        <span class="comment">//3.读取客户端发送过来的数据</span></span><br><span class="line">                        BufferedReader br= <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line">                        System.out.println(br.readLine());</span><br><span class="line"></span><br><span class="line">                        String lint = <span class="string">""</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((lint=br.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                            System.out.println(lint);</span><br><span class="line"></span><br><span class="line">                            <span class="comment">//5关闭等待的客户端 和流</span></span><br><span class="line"><span class="comment">//                    br.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//                    socket.close();</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        System.out.println(<span class="string">"客户端"</span>+ socket+<span class="string">"退出"</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            t.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用多线程实现文件上传"><a href="#使用多线程实现文件上传" class="headerlink" title="使用多线程实现文件上传"></a>使用多线程实现文件上传</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82b26c504f4bcb04d0b102.png"  alt=""></p><h3 id="单个文件上传（单线程）"><a href="#单个文件上传（单线程）" class="headerlink" title="单个文件上传（单线程）"></a>单个文件上传（单线程）</h3><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.xml.internal.bind.v2.runtime.unmarshaller.SAXConnector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一个客户端的连接对象</span></span><br><span class="line">       Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8080</span>);</span><br><span class="line">       <span class="comment">//2.创建字节输入流</span></span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"F:\\file\\ccc.md"</span>);</span><br><span class="line">        <span class="comment">//3.获取客户点socket字节输出流</span></span><br><span class="line">        OutputStream outputStream = socket.getOutputStream();</span><br><span class="line">        <span class="comment">//4.读取ccc.mdd的内容到内存</span></span><br><span class="line">        <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span>  <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">         <span class="comment">//5.读取到的内容写到socket通道中</span></span><br><span class="line">            outputStream.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放资源</span></span><br><span class="line">        outputStream.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器的socket对象</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        <span class="comment">// 2.获取客户端socket</span></span><br><span class="line">        Socket socket = serverSocket.accept();</span><br><span class="line">        <span class="comment">//3.获取客户端socket的字节输入流</span></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="comment">//4.创建一个字节输出流</span></span><br><span class="line">        String filename = System.currentTimeMillis()+<span class="string">".md"</span>;</span><br><span class="line">        OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">"file/"</span>);</span><br><span class="line">        <span class="comment">//5.读取客户端socket的内容到服务器的内存</span></span><br><span class="line">        <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//6.将内存中读取的字节流写入文件</span></span><br><span class="line">            outputStream.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.释放资源</span></span><br><span class="line">        outputStream.close();</span><br><span class="line">        in.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        System.out.println(<span class="string">"文件上传成功"</span>+filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果图示"><a href="#结果图示" class="headerlink" title="结果图示"></a>结果图示</h4><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82bba5504f4bcb04d86382.png"  alt=""></p><h3 id="多个文件上传（单线程）"><a href="#多个文件上传（单线程）" class="headerlink" title="多个文件上传（单线程）"></a>多个文件上传（单线程）</h3><blockquote><p>需要在改项目目录下新建file目录，这里使用绝对路径来作为上传目录</p></blockquote><h4 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.xml.internal.bind.v2.runtime.unmarshaller.SAXConnector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//上传10次</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="comment">//1.创建一个客户端的连接对象</span></span><br><span class="line">       Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8080</span>);</span><br><span class="line">       <span class="comment">//2.创建字节输入流</span></span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"F:\\file\\ccc.md"</span>);</span><br><span class="line">        <span class="comment">//3.获取客户点socket字节输出流</span></span><br><span class="line">        OutputStream outputStream = socket.getOutputStream();</span><br><span class="line">        <span class="comment">//4.读取ccc.mdd的内容到内存</span></span><br><span class="line">        <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span>  <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">         <span class="comment">//5.读取到的内容写到socket通道中</span></span><br><span class="line">            outputStream.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放资源</span></span><br><span class="line">        outputStream.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务器端-1"><a href="#服务器端-1" class="headerlink" title="服务器端"></a>服务器端</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器的socket对象</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="comment">// 2.获取客户端socket</span></span><br><span class="line">        Socket socket = serverSocket.accept();</span><br><span class="line">            System.out.println(<span class="string">"文件上传开始"</span>);</span><br><span class="line">        <span class="comment">//3.获取客户端socket的字节输入流</span></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="comment">//4.创建一个字节输出流</span></span><br><span class="line">        String filename = System.currentTimeMillis()+<span class="string">".md"</span>;</span><br><span class="line">        OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">"file/"</span>+filename);</span><br><span class="line">        <span class="comment">//5.读取客户端socket的内容到服务器的内存</span></span><br><span class="line">        <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//6.将内存中读取的字节流写入文件</span></span><br><span class="line">            outputStream.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.释放资源</span></span><br><span class="line">        outputStream.close();</span><br><span class="line">        in.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        System.out.println(<span class="string">"文件上传成功"</span>+filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行图示-2"><a href="#运行图示-2" class="headerlink" title="运行图示"></a>运行图示</h4><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82be65504f4bcb04dae7ab.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82be5a504f4bcb04daddcf.png"  alt=""></p><h3 id="使用线程池来实现多个客户端上传文件（多线程）"><a href="#使用线程池来实现多个客户端上传文件（多线程）" class="headerlink" title="使用线程池来实现多个客户端上传文件（多线程）"></a>使用线程池来实现多个客户端上传文件（多线程）</h3><h4 id="服务器端-2"><a href="#服务器端-2" class="headerlink" title="服务器端"></a>服务器端</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executor;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器的socket对象</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        <span class="comment">//创建线程池</span></span><br><span class="line">       ExecutorService pool = Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="comment">// 2.获取客户端socket</span></span><br><span class="line">        Socket socket = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启多线程</span></span><br><span class="line">            pool.submit(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"文件上传开始"</span>);</span><br><span class="line">                    <span class="comment">//3.获取客户端socket的字节输入流</span></span><br><span class="line">                    InputStream in = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        in = socket.getInputStream();</span><br><span class="line">                        <span class="comment">//4.创建一个字节输出流</span></span><br><span class="line">                        String filename = System.currentTimeMillis()+<span class="string">".md"</span>;</span><br><span class="line">                        OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">"file/"</span>+filename);</span><br><span class="line">                        <span class="comment">//5.读取客户端socket的内容到服务器的内存</span></span><br><span class="line">                        <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((len = in.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                            <span class="comment">//6.将内存中读取的字节流写入文件</span></span><br><span class="line">                            outputStream.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//7.释放资源</span></span><br><span class="line">                        outputStream.close();</span><br><span class="line">                        in.close();</span><br><span class="line">                        socket.close();</span><br><span class="line">                        System.out.println(<span class="string">"文件上传成功"</span>+filename);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">             &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行图示-3"><a href="#运行图示-3" class="headerlink" title="运行图示"></a>运行图示</h4><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82c03c504f4bcb04dc99be.png"  alt=""></p><h1 id="编写web服务器"><a href="#编写web服务器" class="headerlink" title="编写web服务器"></a>编写web服务器</h1><blockquote><p>这里用到了网络编程、多线程、tcp、io的相关知识</p><p>这里用到了网页，所以是b/s架构</p><p>需要先在项目目录里引入html网页，才能更好的展示运行效果</p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82fa9a504f4bcb04086135.png"  alt=""></p><h2 id="创建服务器端口为8080（字节流）"><a href="#创建服务器端口为8080（字节流）" class="headerlink" title="创建服务器端口为8080（字节流）"></a>创建服务器端口为8080（字节流）</h2><h3 id="创建HttpServer服务端类"><a href="#创建HttpServer服务端类" class="headerlink" title="创建HttpServer服务端类"></a>创建HttpServer服务端类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器的Socket</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        <span class="comment">//2.接受浏览器发送过来的请求</span></span><br><span class="line">        Socket socket = serverSocket.accept();</span><br><span class="line">        <span class="keyword">if</span> (socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"浏览器请求成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.关闭客户端的socket</span></span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行图示-4"><a href="#运行图示-4" class="headerlink" title="运行图示"></a>运行图示</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82c556504f4bcb04e0838f.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82c54e504f4bcb04e07cf3.png"  alt=""></p><h2 id="使用【字符流传输】创web建服务器"><a href="#使用【字符流传输】创web建服务器" class="headerlink" title="使用【字符流传输】创web建服务器"></a>使用【字符流传输】创web建服务器</h2><h3 id="服务器端代码-2"><a href="#服务器端代码-2" class="headerlink" title="服务器端代码"></a>服务器端代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器的Socket</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        <span class="comment">//2.接受浏览器发送过来的请求</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            Socket socket = serverSocket.accept();</span><br><span class="line">            <span class="comment">//将浏览器发送过来的字节输入流，转换成字符缓冲输入流</span></span><br><span class="line">            InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(socket.getInputStream());</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">            String fileName = br.readLine().split(<span class="string">" "</span>)[<span class="number">1</span>];</span><br><span class="line">            System.out.println(fileName);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.响应浏览器的请求，向浏览器发送数据</span></span><br><span class="line">            <span class="comment">//创建一个打印输入流</span></span><br><span class="line">            PrintStream out = <span class="keyword">new</span> PrintStream(socket.getOutputStream());</span><br><span class="line">            out.println(<span class="string">"HTTP/1.1 200 OK"</span>);<span class="comment">//状态行</span></span><br><span class="line">            out.println(<span class="string">"Content-Type:text/html;charset=utf-8"</span>);</span><br><span class="line">            out.println();<span class="comment">//空行</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//4.响应正文</span></span><br><span class="line">            <span class="comment">// 将请求的页面内容写在网络里</span></span><br><span class="line">            <span class="comment">// 先将浏览器请求的内容从服务器硬盘读取到服务器的内存</span></span><br><span class="line">            InputStream in = <span class="keyword">new</span> FileInputStream(<span class="string">"html"</span>+fileName);</span><br><span class="line">            BufferedInputStream bfin = <span class="keyword">new</span> BufferedInputStream(in);</span><br><span class="line">            <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((len = in.read(bytes))!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                out.write(bytes,<span class="number">0</span>,len);<span class="comment">//响应正文</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">            in.close();</span><br><span class="line">            br.close();</span><br><span class="line">            out.close();</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行图示-5"><a href="#运行图示-5" class="headerlink" title="运行图示"></a>运行图示</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82e472504f4bcb04f734a1.png"  alt=""></p><h2 id="服务器中使用多线程"><a href="#服务器中使用多线程" class="headerlink" title="服务器中使用多线程"></a>服务器中使用多线程</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executor;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建服务器的Socket</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">        <span class="comment">//2.接受浏览器发送过来的请求</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            Socket socket = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">            ExecutorService tool = Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">            tool.submit(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//将浏览器发送过来的字节输入流，转换成字符缓冲输入流</span></span><br><span class="line">                    InputStreamReader isr = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        isr = <span class="keyword">new</span> InputStreamReader(socket.getInputStream());</span><br><span class="line">                        BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">                        String fileName = br.readLine().split(<span class="string">" "</span>)[<span class="number">1</span>];</span><br><span class="line">                        System.out.println(fileName);</span><br><span class="line">                        <span class="comment">//3.响应浏览器的请求，向浏览器发送数据</span></span><br><span class="line">                        <span class="comment">//创建一个打印输入流</span></span><br><span class="line">                        PrintStream out = <span class="keyword">new</span> PrintStream(socket.getOutputStream());</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//判断请求的文件是否存在</span></span><br><span class="line">                        File file = <span class="keyword">new</span> File(<span class="string">"html"</span>+fileName);</span><br><span class="line">                        <span class="keyword">if</span> (file.exists())&#123;</span><br><span class="line">                            out.println(<span class="string">"HTTP/1.1 200 OK"</span>);<span class="comment">//状态行</span></span><br><span class="line">                            out.println();<span class="comment">//空行</span></span><br><span class="line">                        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                            out.println(<span class="string">"HTTP/1.1 404 OK"</span>);<span class="comment">//状态行</span></span><br><span class="line">                            out.println(<span class="string">"Content-Type:text/html;charset=utf-8"</span>);</span><br><span class="line">                            out.println();<span class="comment">//空行</span></span><br><span class="line"></span><br><span class="line">                            br.close();</span><br><span class="line">                            out.close();</span><br><span class="line">                            socket.close();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        <span class="comment">//4.响应正文</span></span><br><span class="line">                        <span class="comment">// 将请求的页面内容写在网络里</span></span><br><span class="line">                        <span class="comment">// 先将浏览器请求的内容从服务器硬盘读取到服务器的内存</span></span><br><span class="line">                        InputStream in = <span class="keyword">new</span> FileInputStream(<span class="string">"html"</span>+fileName);</span><br><span class="line">                        BufferedInputStream bfin = <span class="keyword">new</span> BufferedInputStream(in);</span><br><span class="line">                        <span class="keyword">byte</span> [] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((len = in.read(bytes))!=-<span class="number">1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            out.write(bytes,<span class="number">0</span>,len);<span class="comment">//响应正文</span></span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//释放资源</span></span><br><span class="line">                        in.close();</span><br><span class="line">                        br.close();</span><br><span class="line">                        out.close();</span><br><span class="line">                        socket.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e82e7a6504f4bcb04f994f3.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
            <tag> 网络编程 </tag>
            
            <tag> TCP </tag>
            
            <tag> 网络通讯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注解的定义和使用</title>
      <link href="/archives/815832981.html"/>
      <url>/archives/815832981.html</url>
      
        <content type="html"><![CDATA[<h1 id="注解的定义"><a href="#注解的定义" class="headerlink" title="注解的定义"></a>注解的定义</h1><p><strong>注解也叫元数据</strong>，一种代码级别的说明。是<strong>jdk1.5后产生的</strong>一个特性，与类、接口、枚举同一个档次，他可以在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行<strong>说明、注释</strong>；</p><a id="more"></a><h2 id="注解分类"><a href="#注解分类" class="headerlink" title="注解分类"></a>注解分类</h2><ol><li>编写文档：通过代码里的标识的注解生成文档（生成word文档）</li><li>编译检查：通过代码里的标识的注解让编译器能够实现基本的编译检查</li><li><strong>代码分析：通过代码里标识的注解对的代码进行分析（使用反射） 【重点】</strong></li></ol><blockquote><p>注解可以在类、变量、方法、接口上使用</p><p>注解也有生命周期</p><p>一个方法上、一个变量上、一个类上，可以使用多个注解</p></blockquote><h1 id="JDK中内置的注解"><a href="#JDK中内置的注解" class="headerlink" title="JDK中内置的注解"></a>JDK中内置的注解</h1><ul><li><p>@Deprecated:用来修饰已经过时的方法。编译期注解，提示该方法或者该成员变量已经过期，不建议使用，但是还是能使用的，会在使用到该方法 或者该变量会有个横线，<strong>能用到（类、变量、方法）</strong></p></li><li><p>@Override：用来修饰此方法重写了父类的方法 <strong>只能在方法上</strong></p></li><li><p>@SuppressWarnings:用来通知java编译器禁止特定的编译警告</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br></pre></td></tr></table></figure></li></ul><h1 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h1><p>通过@interface 关键字进行定义</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public @interface 注解名称&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用注解、在类上使用的列子</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@注解名称</span><br><span class="line">public class Test &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h1><p>元注解是可以注解到注解上的注解，或者说<strong>元注解是一种基本注解</strong>，但是它能够应用到其他的注解上面。</p><p><strong>元注解有@Retention、@Documented、@Target、@Inherited、@Repeatable这5个</strong></p><p><strong>两个类型一样的注解不能同时用</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8416c1504f4bcb04e1c864.png"  alt=""></p><h2 id="Retention【重点】"><a href="#Retention【重点】" class="headerlink" title="@Retention【重点】"></a>@Retention【重点】</h2><p>Retention 意思是保留期的意思，当@Retention应用到一个注解上的时候，它解释说明了这个注解的存活时间</p><p>取值如下：</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>RetentionPolicy.SOURCE</td><td>注解<strong>只在源代码阶段博保留</strong>，在编译器进行编译时将会被丢弃忽视</td></tr><tr><td>RetentionPolicy.CLASS</td><td>只被<strong>保留在编译进行的时候</strong>，并不会加载到JVM中</td></tr><tr><td>RetentionPolicy.RUNTIME</td><td><strong>可以保留到程序运行时</strong>，它会被加载到JVM中，所以可以获取到他们</td></tr></tbody></table><blockquote><p>RetentionPolicy是一个枚举类</p></blockquote><p>代码演示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)<span class="comment">//定义一个运行期有效的注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Target【重点】"><a href="#Target【重点】" class="headerlink" title="@Target【重点】"></a>@Target【重点】</h2><p>目标的意思，@Target指定注解运用的地方</p><ul><li><p>ElementType.ANNOTATION_TYPE：可以给注解进行注释</p></li><li><p>ElementType.CONSTRUCTOR：可以给构造方法注解</p></li><li><p><strong>ElementType.FIELD：可以给属性进行注解</strong></p></li><li><p>ElementType.LOCAL_VARIABLE：可以给局部变量进行注解</p></li><li><p><strong>ElementType.METHOD：可以给方法进行注解</strong>不能用在构造方法上</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e84174a504f4bcb04e22f39.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8417a5504f4bcb04e27f61.png"  alt=""></p></li><li><p>ElementType.PACKAGE：可以给包进行注解</p></li><li><p>ElementType.PARAMETER：可以给一个方法内的参数进行注解</p></li><li><p><strong>ElementType.TYPE；可以给一个类型进行注解，比如类、接口、枚举</strong></p></li></ul><p>代码实例:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//该注解可在 类 接口、枚举、方法、成员变量使用</span></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE,ElementType.FIELD,ElementType.METHOD&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MyAnnotation</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="meta">@MyAnnotation</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Inherited"><a href="#Inherited" class="headerlink" title="@Inherited"></a>@Inherited</h2><p>表示该注解能被子类使用（继承）</p><blockquote><p>注解MyAnnotation被@Inherited修饰，如果有个类A使用了@MyAnnotation注解，又有一个子类b继承了A，在b中也能使用@MyAnnotation注解</p></blockquote><h2 id="Documented"><a href="#Documented" class="headerlink" title="@Documented"></a>@Documented</h2><p>这个注解和文档有关，它能将注解中的元素包含到Javadoc中</p><h2 id="Repeatable"><a href="#Repeatable" class="headerlink" title="@Repeatable"></a>@Repeatable</h2><p>在需要对同一个注解多次使用在一个类、接口、方法、属性等上面的时候，需要用@Repeatable</p><h1 id="注解的属性"><a href="#注解的属性" class="headerlink" title="注解的属性"></a>注解的属性</h1><p>注解的属性也叫成员变量，<strong>注解中只有成员变量，无成员方法</strong></p><p>注解的成员变量在注解的定义以无参数的方法的形式来声明。其方法名定义了该成员变量的名字，其返回值定义了该成员变量的类型</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE,ElementType.FIELD,ElementType.METHOD&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation &#123;</span><br><span class="line">    <span class="comment">//注解中只有成员变量，无成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">id</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="function">String <span class="title">username</span><span class="params">()</span> <span class="keyword">default</span> " "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里的default给该变量id和username设置了默认值</p></blockquote><p>在Student类中用了该注解的方法可以给该注解中的变量赋值，如果注解没有设置默认值，则在引用该注解的时候必须给该注解赋值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation</span>(id = <span class="number">12</span>, username =<span class="string">"小飞龙"</span> )</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="meta">@MyAnnotation</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@MyAnnotation</span>(id = <span class="number">55</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当注解中只有一个变量的时候（也就是只有一个无参方法的时候）可以这样写</p><p>注解中的代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation &#123;</span><br><span class="line">    <span class="comment">//注解中只有成员变量，无成员方法</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> " "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation</span>(<span class="string">"张三"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">//  @MyAnnotation(value = "李四")等价    @MyAnnotation("张三")</span></span><br><span class="line">  <span class="meta">@MyAnnotation</span>(value = <span class="string">"李四"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在这里@MyAnnotation(value = “李四”)等价    @MyAnnotation(“张三”)，都是给value赋值</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
            <tag> 注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java枚举</title>
      <link href="/archives/3020691415.html"/>
      <url>/archives/3020691415.html</url>
      
        <content type="html"><![CDATA[<h1 id="枚举的特征"><a href="#枚举的特征" class="headerlink" title="枚举的特征"></a>枚举的特征</h1><p>枚举是java1.5后新增的类型，它可以用来定义一组取值范围固定的变量。</p><p>在枚举没有出来之前，要定义一个变量，往往是通过定义一个接口，将不同的变量使用不同的整数赋值，但这样有很明显的缺点</p><ul><li>不能保证定义数组的合法性</li><li>无法根据数值大小获取其含义</li></ul><h2 id="枚举特性"><a href="#枚举特性" class="headerlink" title="枚举特性"></a>枚举特性</h2><ol><li>Enum类是枚举的一个封装类，是所有枚举类型的超类，它是一个没有抽象方法的抽象类</li><li>通过关键字Enum定义枚举类型</li><li>Enum类中定义了很多常用方法：<ol><li>conmpareTo(E o):比较枚举元素的顺序</li><li>equals(Object obj  ):判断枚举元素是否相同</li><li>name():获取元素定义时的名称</li><li>ordinal():获取枚举元素被定义的顺序，从0开始计算</li></ol></li></ol><blockquote><p>枚举类型可以使用==来比较两个元素是否相同，它已经重写了equals和hashCode两个方法</p></blockquote><h1 id="使用枚举"><a href="#使用枚举" class="headerlink" title="使用枚举"></a>使用枚举</h1><h2 id="定义枚举类"><a href="#定义枚举类" class="headerlink" title="定义枚举类"></a>定义枚举类</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修饰符  enum 枚举类名称&#123;</span><br><span class="line">枚举值1，枚举值2，枚举值...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个数据库产品的枚举类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> DBType &#123;</span><br><span class="line">    MYSQL,DB2,ORACLE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用枚举类"><a href="#调用枚举类" class="headerlink" title="调用枚举类"></a>调用枚举类</h2><p>创建一个demo类调用枚举</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">enumDemo01</span>  </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(DBType.DB2);</span><br><span class="line">        System.out.println(DBType.MYSQL);</span><br><span class="line">        System.out.println(DBType.ORACLE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如图：</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e840406504f4bcb04d3f581.png"  alt=""></p><blockquote><p>这里默认调用了该枚举变量中的toString方法，说明该枚举类中的DB2等这几个是对象</p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>每一个枚举值都是该枚举类的一个对象</li><li>枚举类的构造方法是私有的</li><li>在枚举类中，所有的枚举对象以大写的形式存在，枚举对象之间用逗号隔开</li><li>枚举对象一定要定义在枚举类的第一行</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> DBType &#123;</span><br><span class="line">    MYSQL, DB2,ORACLE;</span><br><span class="line">    DBType()&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是DBtype的的构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在执行调用枚举的类，结果如图：</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8406d8504f4bcb04d61593.png"  alt=""></p><p><strong>这里的构造方法被调用了三次，就是创建了三个枚举对象</strong></p><h1 id="枚举案例"><a href="#枚举案例" class="headerlink" title="枚举案例"></a>枚举案例</h1><ul><li>定义一个描述星期一到星期天的枚举类</li><li>定义一个方法 ，传入枚举对象，判断是星期几</li></ul><h2 id="定义枚举类-1"><a href="#定义枚举类-1" class="headerlink" title="定义枚举类"></a>定义枚举类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Week &#123;</span><br><span class="line">    ZHOUYI,ZHOUER,ZHOUSAN,ZHOUSI,ZHOUWU,ZHOULIU,ZHIURI;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义判断方法"><a href="#定义判断方法" class="headerlink" title="定义判断方法"></a>定义判断方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">mthod01</span><span class="params">(Week week)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (week)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> ZHOUYI :</span><br><span class="line">            System.out.println(<span class="string">"周一"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ZHOUER:</span><br><span class="line">            System.out.println(<span class="string">"周二"</span>);  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ZHOUSI:</span><br><span class="line">            System.out.println(<span class="string">"周四"</span>);  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ZHIURI:</span><br><span class="line">            System.out.println(<span class="string">"周日"</span>);  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ZHOUWU:</span><br><span class="line">            System.out.println(<span class="string">"周五"</span>);  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ZHOULIU:</span><br><span class="line">            System.out.println(<span class="string">"周六"</span>);  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ZHOUSAN:</span><br><span class="line">            System.out.println(<span class="string">"周三"</span>);  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">"你好啊"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用判断方法"><a href="#调用判断方法" class="headerlink" title="调用判断方法"></a>调用判断方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    mthod01(Week.ZHOUYI);</span><br><span class="line">    mthod01(Week.ZHOUER);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果图示"><a href="#结果图示" class="headerlink" title="结果图示"></a>结果图示</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e84098e504f4bcb04d81c83.png"  alt=""></p><h2 id="优化代码"><a href="#优化代码" class="headerlink" title="优化代码"></a>优化代码</h2><p>枚举类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.week;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * tostring来打印中文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Week &#123;</span><br><span class="line">    ZHOUYI(<span class="string">"星期一"</span>),ZHOUER(<span class="string">"星期二"</span>),ZHOUSAN(<span class="string">"星期三"</span>),ZHOUSI(<span class="string">"星期四"</span>),ZHOUWU(<span class="string">"星期五"</span>),ZHOULIU(<span class="string">"星期六"</span>),ZHIURI(<span class="string">"星期日"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加带参的构造 方法</span></span><br><span class="line"></span><br><span class="line">    Week(String name ) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>demo类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.week;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeekDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        mthod01(Week.ZHOUYI);</span><br><span class="line">        mthod01(Week.ZHOUER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mthod01</span><span class="params">(Week week)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (week) &#123;</span><br><span class="line">            <span class="keyword">case</span> ZHOUYI:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ZHOUER:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ZHOUSI:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ZHIURI:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ZHOUWU:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ZHOULIU:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ZHOUSAN:</span><br><span class="line">                System.out.println(week.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"你好啊"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e840d2d504f4bcb04daab35.png"  alt=""></p><h1 id="枚举中常用的方法"><a href="#枚举中常用的方法" class="headerlink" title="枚举中常用的方法"></a>枚举中常用的方法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取元素的名称</span></span><br><span class="line">System.out.println(Week.ZHOUER.name());</span><br><span class="line">System.out.println(<span class="string">"-------------------"</span>);</span><br><span class="line"><span class="comment">//获取枚举被定义的顺序</span></span><br><span class="line">System.out.println(Week.ZHIURI.ordinal());</span><br><span class="line">System.out.println(Week.ZHOUSAN.ordinal());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/archives/1462361889.html"/>
      <url>/archives/1462361889.html</url>
      
        <content type="html"><![CDATA[<h1 id="多线程的相关概念"><a href="#多线程的相关概念" class="headerlink" title="多线程的相关概念"></a>多线程的相关概念</h1><h2 id="并发和并行"><a href="#并发和并行" class="headerlink" title="并发和并行"></a>并发和并行</h2><p><strong>并发 ：</strong>同一时刻只能处理一个任务（java中的多线程采用的方式）</p><p>​    单核cpu电脑，在同一时刻只能运行一个程序运行多个程序看似是并行实则并发</p><p><strong>并行：</strong>同一时刻可以处理多个任务（同时进行）</p><h2 id="线程与进程"><a href="#线程与进程" class="headerlink" title="线程与进程"></a>线程与进程</h2><p><strong>进程：</strong>是指在内存中的运用程序，每个进程都一个独立的进程空间，一个应用程序可以同时运行多个进程；</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GSSXee.png"  alt="GSSXee.png"></p><p><strong>线程：</strong>线程是进程中的一个执行单元，一个进程中至少有一个线程，一个程序运行后至少有一个进程，一个进程可以包含多个线程。</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GSpnWq.png"  alt="GSpnWq.png"></p><h2 id="cpu（中央处理器）调度"><a href="#cpu（中央处理器）调度" class="headerlink" title="cpu（中央处理器）调度"></a>cpu（中央处理器）调度</h2><p><strong>这里的调度是对线程进行操作，非进程</strong></p><p>分时调度：cpu平均分配每个线程的占用时间</p><p>抢占式调度：优先让级别高的线程使用cpu，如果级别相同，则随机选择一个（线程随机），<strong>java采用的调度方式</strong></p><h2 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h2><p>java虚拟机启动后，有一个线程从main方法开始执行，然后到main方法结束的时候结束这个就是java中的主线程</p><p>实现一个主线程负责执行一个循环，在用另外一个线程负责其他代码来执行，最终实现部分代码同时执行</p><p>通过java多线程技术来解决</p><blockquote><p> main启动后，最少运行了几个线程：    1.主线程     2.垃圾回收线程</p></blockquote><h1 id="java的多线程"><a href="#java的多线程" class="headerlink" title="java的多线程"></a>java的多线程</h1><p>创建线程的两种方法：</p><ul><li>​    继承 Thread类</li><li>​    实现Runnable接口</li></ul><h2 id="Thread类"><a href="#Thread类" class="headerlink" title="Thread类"></a>Thread类</h2><p><strong>构造方法:</strong></p><ul><li>public Thread()    分配一个新的线程对象</li><li>public Thread(String name)  分配一个指定名字的新的线程对象</li><li>public Thread(Runnable target)   分配一个带有指定目标的新的线程对象</li><li>public Thread(Runnable target , String name) 分配一个带有指定目标新的线程对象并指定名字</li></ul><p><strong>常用方法：</strong></p><ul><li><p>public String getName() 获取当前线程名字：<strong>通过创建对象的先后顺序给该线程对象命名</strong>默认冲Thread-0开始‘</p><p>如果需要修改默认名，在调用多线程对象的时候使用指定名字的构造方法来实例对象</p><p>这需要注意，<strong>父类的构造方法是不能被子类继承的</strong> ，所以我们在使用父类带参的构造方法的时候，子类需要重写带参的构造方法再通过super来调用父类的带参的构造方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread02</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建线程对象的时候，给线程起名字</span></span><br><span class="line">        MyThread02 thread022 = <span class="keyword">new</span> MyThread02(<span class="string">"线程-100"</span>);</span><br></pre></td></tr></table></figure></li><li><p>publice void start() 导致此线程开始执行，java虚拟机调用此线程的run方法</p></li><li><p>public void run() 此线程要执行的任务在此方法里定义的代码</p></li><li><p>public startic void sleep(long millis) 使当前线正在执行的线程以指定的毫秒数暂停</p></li><li><p>public startic Thread currentThread() 返回当前正在执行线程对象的引用</p></li></ul><p><strong>创建线程的步骤：</strong></p><ol><li>定义一个类继承Thread</li><li>重写run() 方法，run方法相当于其他线程的main方法</li><li>创建子类对象，就是创建线程对象</li><li>调用子类对象的start()  方法，开启线程并让线程执行，同时告诉jvm调用run方法</li></ol><p>创建Thread多线程实例代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread01</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment">// 可以理解成子线程的main方法</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"子线程"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个多线程的对象</span></span><br><span class="line">        MyThread01  thread = <span class="keyword">new</span> MyThread01();</span><br><span class="line">        <span class="comment">// 启动一个子线程</span></span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            System.out.println(i+<span class="string">"主线程"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结构图示：</strong></p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GS1M5R.png"  alt="GS1M5R.png"></p><p>实现多线程Thread中的常用方法实例代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread02</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread02</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">              Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">              System.out.println(Thread.currentThread().getName());</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">        MyThread02 thread02 = new MyThread02("线程-1");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        //创建线程对象的时候，给线程起名字</span></span><br><span class="line"><span class="comment">        MyThread02 thread022 = new MyThread02("线程-100");</span></span><br><span class="line"><span class="comment">//        getName 获取线程名字</span></span><br><span class="line"><span class="comment">        System.out.println(thread02.getName());</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        //thread02.start();//开启了一个子线程</span></span><br><span class="line"><span class="comment">        thread02.run();//调用了对象的普通方法，并没有开启线程</span></span><br><span class="line"><span class="comment">        System.out.println("主线程");</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        Thread thread = <span class="keyword">new</span> MyThread02(<span class="string">"子线程-0"</span>);</span><br><span class="line">        Thread thread1 = <span class="keyword">new</span> MyThread02(<span class="string">"子线程-1"</span>);</span><br><span class="line">        thread.start();</span><br><span class="line">        thread1.start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            System.out.println(Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>调用start()以后，run()不会立即执行，因为子线程会和主线程争夺cpu资源，在这里是有一段时间的</strong></p><h2 id="实现Runnable接口"><a href="#实现Runnable接口" class="headerlink" title="实现Runnable接口"></a>实现Runnable接口</h2><p>实例代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRunnable01</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1 创建线程类的对象</span></span><br><span class="line">        MyRunnable01 myThread03 = <span class="keyword">new</span>  MyRunnable01();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(myThread03,<span class="string">"线程0001"</span>);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用匿名类的方式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(Thread.currentThread().getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//启动线程</span></span><br><span class="line">        thread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>start()不能调用多次</strong></p><h2 id="调用run方法和start方法的区别"><a href="#调用run方法和start方法的区别" class="headerlink" title="调用run方法和start方法的区别"></a>调用run方法和start方法的区别</h2><ol><li><p>线程对象调用run方法不能开启方法，而是普通对象调用方法</p></li><li><p>线程对象调用start方法，开启线程，并让jvm调用run方法在开启的线程中执行</p></li><li><p>适合多个相同的程序代码和线程处理同一个资源</p></li><li><p>可以避免java中的继承限制（不能访问父类的私有成员）</p></li><li><p>增阿程序的健壮性，代码可以被多个线程共享</p></li><li><p>线程池只能放入Runnable或Callable类线程，不能放入Thread的子类</p></li></ol><h1 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h1><h2 id="线程池的概念"><a href="#线程池的概念" class="headerlink" title="线程池的概念"></a>线程池的概念</h2><p>线程池，就是一个容纳多个线程的<strong>容器</strong>，里面的<strong>线程可以反复使用</strong>，省去了频繁创建线程对象的操作，无需反复创建线程过多的耗费资源</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GSyVb9.png"  alt="GSyVb9.png"></p><p>使用线程池的好处：</p><ul><li>降低资源消耗，减少创建和销毁线程的次数，每个工作线程都可以被重复使用，可执行多个任务；</li><li>提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行</li><li>提高线程的可管理型性，可以根据系统的承受能力，调整线程池中工作线程的数目，防止因为消耗过多的内存，让服务器死机</li></ul><h2 id="线程池的使用"><a href="#线程池的使用" class="headerlink" title="线程池的使用"></a>线程池的使用</h2><p>java中线程池的顶级接口是java.util.concurrent.Executor严格上说，该接口并不是</p><p>一个线程池，而是一个执行线程的工具，真正的线程池接口是java .util.concurrent.ExecutorService建议使用Executors工具类来创建线程池对象（java中有s的都是工具类）</p><p>Executors类中创建线程池的方法如下</p><ul><li>public strice ExecutorService newFixedThreadPool(int nThreads):返回线程池对象（创建的是有界线程，也就说是能指定线程池中的线程个数）</li></ul><p>获取了ExecutorService 对象后 定义如下方法使用线程池对象</p><ul><li>public Future&lt;?&gt; submit(Runnable task)：获取线程池中指定某个线程对象，并执行；Future接口是用来记录线程执行完毕后的结果，</li></ul><p><strong>使用线程池的步骤：</strong></p><ol><li>创建线程池对象</li><li>创建Runnable接口子类对象，（task）</li><li>提交Runnable接口子类对象，（take task）</li><li>关闭线程池（一般不做）</li></ol><p>实例代码:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadPoolDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一个线程池对象 线程池有两个线程对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//建议使用该工具类获取线程池的对象不要直接newExecutorService</span></span><br><span class="line"></span><br><span class="line">        ExecutorService pool = Executors.newFixedThreadPool(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        MyRunnable01 t1 = <span class="keyword">new</span> MyRunnable01();<span class="comment">//实例Runnable对象</span></span><br><span class="line">        MyRunnable01 t2 = <span class="keyword">new</span> MyRunnable01();</span><br><span class="line">        MyRunnable01 t3 = <span class="keyword">new</span> MyRunnable01();</span><br><span class="line"></span><br><span class="line">        pool.submit(t1);<span class="comment">//提交对象</span></span><br><span class="line">        pool.submit(t2);</span><br><span class="line">        pool.submit(t3);</span><br><span class="line">        pool.shutdown();<span class="comment">//关闭线程池</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h1><p>如果有多个线程在同时运行，而这些线程可能会同时运行这段代码。<strong>多线程程序每次运行结果和单线程运行结果一样，其他的变量的值也和预期一样，这就是线程安全</strong></p><p>案例：电影院卖票 10张票，3个售卖窗口</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Ticket01 implements Runnable&#123;</span><br><span class="line">    private  int ticket &#x3D; 10;&#x2F;&#x2F;电影票的数量</span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        while (true)&#123;</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">                if (ticket&gt;0)&#123;</span><br><span class="line">                    String name &#x3D; Thread.currentThread().getName();&#x2F;&#x2F;获取运行线程的名称</span><br><span class="line">                    System.out.println(name+&quot;-&gt;&quot;+(ticket--));</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Ticket01 ticket &#x3D; new Ticket01();</span><br><span class="line">        Thread thread &#x3D; new Thread(ticket,&quot;窗口1&quot;);</span><br><span class="line">        Thread thread2 &#x3D; new Thread(ticket,&quot;窗口2&quot;);</span><br><span class="line">        Thread thread3 &#x3D; new Thread(ticket,&quot;窗口3&quot;);</span><br><span class="line">        thread.start();&#x2F;&#x2F;窗口一开始售票</span><br><span class="line">        thread2.start();&#x2F;&#x2F;窗口2开始售票</span><br><span class="line">        thread3.start();&#x2F;&#x2F;窗口2开始售票</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如图：</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GSzvSx.png"  alt="GSzvSx.png"></p><p>这里就出现了线程不安全</p><blockquote><p>线程安全问题都是由全局变量及静态变量引起的，如果每个线程中对全局变量，静态变量只有读的操作，没有写的操作，一般来说，这个全局变量是线程安全的。如果有多个线程同时执行写的操作，一般都是需要考虑线程同步的，否则的话就可能影响线程安全。</p></blockquote><h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1><p>当我们使用多个线程访问同一资源，且多个线程对资源有写的操作，就容易出现线程安全问题，解决上述多线程并发访问一个资源的安全性问题，java提供了<strong>线程同步机制synchronized</strong>来解决</p><p>三种方式完成同步操作：</p><ul><li>同步代码块</li><li>同步方法</li><li>同步锁</li></ul><h2 id="同步代码块"><a href="#同步代码块" class="headerlink" title="同步代码块"></a>同步代码块</h2><p>synchronize 关键字可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问语法：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span> (同步锁对象) &#123;</span><br><span class="line">需要同步操作的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同步锁：</p><p>对象同步锁只是一个概念，可以想象在对象上标记了一个锁</p><ol><li>锁对象可以是任意类型</li><li>多个线程对象，要使用一个锁对象</li></ol><blockquote><p>在任何时候，最多允许一个线程拥有同步锁，谁拿到锁就进入代码块，其他只能在外面等着</p></blockquote><p>实例代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ticket01</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> ticket = <span class="number">10</span>;<span class="comment">//电影票的数量</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">               <span class="keyword">if</span> (ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">                   String name = Thread.currentThread().getName();<span class="comment">//获取运行线程的名称</span></span><br><span class="line">                   System.out.println(name + <span class="string">"-&gt;"</span> + (ticket--));</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       sleep(<span class="number">1000</span>);</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Ticket01 ticket = <span class="keyword">new</span> Ticket01();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口1"</span>);</span><br><span class="line">        Thread thread2 = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口2"</span>);</span><br><span class="line">        Thread thread3 = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口3"</span>);</span><br><span class="line">        thread.start();<span class="comment">//窗口一开始售票</span></span><br><span class="line">        thread2.start();<span class="comment">//窗口2开始售票</span></span><br><span class="line">        thread3.start();<span class="comment">//窗口2开始售票</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="同步方法"><a href="#同步方法" class="headerlink" title="同步方法"></a>同步方法</h2><p>使用synchronize 修饰的方法，就叫同步方法，保证一个线程执行该方法的时候，其他线程只能在外等待</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">可能会产生线程安全问题的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码实例</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ticket02</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> ticket = <span class="number">10</span>;<span class="comment">//电影票的数量</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                sellTicket();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span>  <span class="title">sellTicket</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ticket&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            String name = Thread.currentThread().getName();<span class="comment">//获取运行线程的名称</span></span><br><span class="line">            System.out.println(name+<span class="string">"-&gt;"</span>+(ticket--));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"hello"</span>);</span><br><span class="line"></span><br><span class="line">        Ticket02 ticket = <span class="keyword">new</span> Ticket02();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口1"</span>);</span><br><span class="line">        Thread thread2 = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口2"</span>);</span><br><span class="line">        Thread thread3 = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口3"</span>);</span><br><span class="line">        thread.start();<span class="comment">//窗口一开始售票</span></span><br><span class="line">        thread2.start();<span class="comment">//窗口2开始售票</span></span><br><span class="line">        thread3.start();<span class="comment">//窗口2开始售票</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * StringBuffer 线程安全</span></span><br><span class="line"><span class="comment">         * StringBilder 线程不安全 效率高</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * HashMap  线程不安全</span></span><br><span class="line"><span class="comment">         * HasTable  线程安全</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * ArrayList 线程不安全</span></span><br><span class="line"><span class="comment">         * Victor  线程安全</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="同步锁"><a href="#同步锁" class="headerlink" title="同步锁"></a>同步锁</h2><p>java.util.concurrent.locks.Lock 机制提供了比synchronize代码块和synchronize方法更广泛的锁定操作</p><p>Lock锁也成同步锁，加锁和释放锁方法化了，</p><ul><li>public void lock():加锁</li><li>public void unlock：释放锁，解锁</li></ul><p><strong>注意：创建锁的对象的时候必须在run方法外，这样才能保证左右线程都是用的同一把锁</strong></p><p>代码实例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ticket03</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> ticket = <span class="number">10</span>;<span class="comment">//电影票的数量</span></span><br><span class="line">    <span class="keyword">private</span> Lock lock = <span class="keyword">new</span> ReentrantLock();<span class="comment">//创建锁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">            lock.lock();<span class="comment">//加锁</span></span><br><span class="line">                <span class="keyword">if</span> (ticket&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    String name = Thread.currentThread().getName();<span class="comment">//获取运行线程的名称</span></span><br><span class="line">                    System.out.println(name+<span class="string">"-&gt;"</span>+(ticket--));</span><br><span class="line">                &#125;</span><br><span class="line">            lock.unlock();<span class="comment">//释放锁</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"hello"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Ticket03 ticket = <span class="keyword">new</span> Ticket03();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口1"</span>);</span><br><span class="line">        Thread thread2 = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口2"</span>);</span><br><span class="line">        Thread thread3 = <span class="keyword">new</span> Thread(ticket,<span class="string">"窗口3"</span>);</span><br><span class="line">        thread.start();<span class="comment">//窗口一开始售票</span></span><br><span class="line">        thread2.start();<span class="comment">//窗口2开始售票</span></span><br><span class="line">        thread3.start();<span class="comment">//窗口2开始售票</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * StringBuffer 线程安全</span></span><br><span class="line"><span class="comment">         * StringBilder 线程不安全 效率高</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * HashMap  线程不安全</span></span><br><span class="line"><span class="comment">         *HasTable  线程安全</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * ArrayList 线程不安全</span></span><br><span class="line"><span class="comment">         * Victor  线程安全</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="等待唤醒机制"><a href="#等待唤醒机制" class="headerlink" title="等待唤醒机制"></a>等待唤醒机制</h1><h2 id="线程之间的通信"><a href="#线程之间的通信" class="headerlink" title="线程之间的通信"></a>线程之间的通信</h2><p>多线程在处理同一个资源，但是处理的动作（线程任务）却不同</p><p>比如，线程a是生产订单，线程b对订单付款，都是操作的同一个订单，线程a和线程b的动作是不同的，这里的线程a和线程b之间就存在线程通信</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GpWufs.png"  alt="GpWufs.png"></p><blockquote><p>多线程并发执行，在默认情况下cpu是随机切换线程的，当我们需要多个线程来共同完成一件任务，并且我们需要他们有规律的执行，则多线程之间就需要一些协调通信</p></blockquote><h2 id="等待唤醒机制-1"><a href="#等待唤醒机制-1" class="headerlink" title="等待唤醒机制"></a>等待唤醒机制</h2><p>等待唤醒机制的方法</p><ul><li>wait():等待，将正在执行的线程释放他的执行资格和执行权，并存储到线程池中</li><li>notify():唤醒 ，唤醒线程池中被wait()的线程，一次唤醒一个，而且是随机的</li><li>notifyAll():唤醒全部，可以将线程池中的所有wait()线程都唤醒</li></ul><p>调用wait和notify方法需要注意的细节</p><ul><li>wait()方法和notify()方<strong>法必须要同一个锁对象调用</strong>，因为：对应的锁对象可以通过notify唤醒用同一个锁对象调用的wait方法后的线程</li><li>wait()方法和notify()方法是属于object类的方法，因为：锁对象是任意对象，而任意对象所属类都是继承object类</li></ul><blockquote><p>我们可以使用任意对象作为锁对象</p></blockquote><p>wait()和notify()方法必须要在同步代码块或者是同步函数中使用，因为：必须通过锁对象调用这两个方法</p><h2 id="生产者和消费者问题（等待唤醒的实例）"><a href="#生产者和消费者问题（等待唤醒的实例）" class="headerlink" title="生产者和消费者问题（等待唤醒的实例）"></a>生产者和消费者问题（等待唤醒的实例）</h2><p>创建测试类OrderApp</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建存储订单编号的集合</span></span><br><span class="line">        LinkedList&lt;Integer&gt; list = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="comment">//创建订单的线程对象</span></span><br><span class="line">        PlaceOrder r1 = <span class="keyword">new</span> PlaceOrder(list);</span><br><span class="line">        <span class="comment">//创建付款的线程对象</span></span><br><span class="line">        PayOrder r2 = <span class="keyword">new</span> PayOrder(list);</span><br><span class="line">        <span class="comment">//启动下单和付款单 线程</span></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(r1,<span class="string">"创建订单的线程"</span>);</span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(r2,<span class="string">"支付线程"</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建生产订单类 placeOrder</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户下单类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlaceOrder</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Integer&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Integer num = <span class="number">1000</span>;<span class="comment">//订单编号的初始值</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlaceOrder</span><span class="params">(LinkedList&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">if</span> (list.isEmpty()) &#123;</span><br><span class="line">                    <span class="comment">//生成订单编号</span></span><br><span class="line">                    System.out.println(<span class="string">"用户下单订单编号："</span> + ++num);</span><br><span class="line">                    <span class="comment">//将订单编号，存入集合的尾部</span></span><br><span class="line">                    list.addLast(num);</span><br><span class="line">                    <span class="keyword">synchronized</span> (list) &#123;</span><br><span class="line">                        list.notify();       <span class="comment">//下单成功，通知付款的线程付款</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">synchronized</span> (list) &#123;</span><br><span class="line">                        <span class="comment">//当前线程进入等待</span></span><br><span class="line">                        list.wait();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建订单支付类playorder</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对订单付款的线程类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayOrder</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    LinkedList&lt;Integer&gt; list;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PayOrder</span><span class="params">(LinkedList&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!list.isEmpty())&#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    <span class="comment">//从集合头部移除一个订单</span></span><br><span class="line">                    Integer getorder =  list.removeFirst();</span><br><span class="line">                    System.out.println(<span class="string">"付款成功"</span>+getorder);</span><br><span class="line">                    <span class="comment">//如果付款成功，等待下个订单再次产生订单</span></span><br><span class="line">                    <span class="keyword">synchronized</span> (list)&#123;</span><br><span class="line">                        list.notify();<span class="comment">//如果集合是空，通知订单产</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">synchronized</span> (list)&#123;</span><br><span class="line">                        list.wait(); <span class="comment">//自己进入等待状态</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如图所示：</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/Gp4HAO.png"  alt="Gp4HAO.png"></p><h1 id="线程的生命周期"><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h1><p>线程的生命周期是要经过<strong>新建，就绪，运行，阻塞，死亡</strong>五中状态。在线程启动后，他不能一直霸占到cpu独自运行，所以cpu需要在多条线程之间切花，于是线程状态会在<strong>运行、阻塞、等待</strong>之间频繁切换。</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/26/GpbVv4.png"  alt="GpbVv4.png"></p><h2 id="新建和就绪状态"><a href="#新建和就绪状态" class="headerlink" title="新建和就绪状态"></a>新建和就绪状态</h2><p><strong>当程序使用new关键字创建一个线程后，该线程就处于新建状态</strong>。他这时候和其他java对象一样，仅仅由java虚拟机为其分配了内存，并初始化了其成员变量值。此时的线程对象没有表现出任何线程的动态特征，程序也不会执行该线程执行体</p><p><strong>当线程对象调用start()方法后，该线程就进入了就绪状态</strong>，该线程还没有真正的运行，在就绪状态的线程表示可以运行了，至于何时运行，取决jvm里线程调度器的调度</p><h2 id="运行和阻塞状态"><a href="#运行和阻塞状态" class="headerlink" title="运行和阻塞状态"></a>运行和阻塞状态</h2><p><strong>当就绪状态的线程如果抢占到了cpu资源，才会到达运行状态。</strong></p><p>当发生如下情况，线程将会进入<strong>阻塞状态</strong></p><ol><li>当执行了线程对象的slee()等阻塞类型的方法，该线程就会被放在一个阻塞集合里，知道阻塞时间结束，才会又进入到就绪状态</li><li>当多个线程试图进入某个同步区域时，没能进入该同步区域的线程就会被放入锁定集，知道获得该同步区域的锁，进入就绪状态</li><li>当线程执行了wait()方法，线程会置入该对象的等待集中，知道执行了该对象的notify()方法，进入就绪状态</li><li>wait()和notify()方法的执行要求线程首先获得该对象的锁</li><li>程序调用了suspend()方法将该线程挂起，处于挂起状态，该状态被调用了resume()恢复方法，进入就绪状态（此方法容易导致死锁，应该避免使用该方法）</li></ol><h2 id="死亡状态"><a href="#死亡状态" class="headerlink" title="死亡状态"></a>死亡状态</h2><p>run()方法执行完毕，程序正常结束</p><p>线程抛出一个为捕获的异常，中断线程</p><p>使用stop()方法强制中断线程（不推荐使用，应为stop()和suppend()、resume()一样，可能会发生不可预料的结果）</p>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中的反射、Class类</title>
      <link href="/archives/2447437047.html"/>
      <url>/archives/2447437047.html</url>
      
        <content type="html"><![CDATA[<h1 id="java中的反射"><a href="#java中的反射" class="headerlink" title="java中的反射"></a>java中的反射</h1><h2 id="用反射的时候"><a href="#用反射的时候" class="headerlink" title="用反射的时候"></a>用反射的时候</h2><p>需要在运行时在得知并编译完全未知的类，创建它的对象，改变其属性，调用其方法的时候</p><h2 id="反射的简介"><a href="#反射的简介" class="headerlink" title="反射的简介"></a>反射的简介</h2><p>允许程序在运行时，借助Reflection Api取得任何类的内部信息，并直接操作其属性和方法。</p><h1 id="类的加载过程"><a href="#类的加载过程" class="headerlink" title="类的加载过程"></a>类的加载过程</h1><ul><li>类的加载：将class文件读入到内存，并为class文件创建一个class类的对象。由类的加载器完成</li><li>类的创建：将类的二进制文件合并在JRE中</li><li>类的初始化：由JVM进行类的初始化</li></ul><h1 id="Class类"><a href="#Class类" class="headerlink" title="Class类"></a>Class类</h1><h2 id="Class类简介"><a href="#Class类简介" class="headerlink" title="Class类简介"></a>Class类简介</h2><p>在java里，一切皆对象。严格划分，java有两种对象：</p><ol><li>普通类创建的    <strong>实例对象</strong></li><li>Class类创建的    <strong>对象Class</strong></li></ol><p>实例对象就是平常定义的一个类的实例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后使用new关键字创建对象</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Order o = <span class="keyword">new</span> Order()</span><br></pre></td></tr></table></figure><p>Class对象是不能用new关键字来得到的，因为是<strong>JVM生成用来保存对应类的信息的</strong>。当我们定义好一个类文件（普通类）并编译成class字节码后，<strong>编译器同时为我们创建了一个Class类对象将他保存在.class文件中</strong>，同时在<strong>jvm内部有个类加载机制</strong>。在需要的时候将.class文件和对应的Class类的对象加载到内存中。<strong>所以我们在加载普通类的.class文件的时候同时也会产生一个Class类对象，这个Class类是JVM自动生成的</strong>。该Class类的对象中描述了我们编译的普通类的相关信息（成员变量属性、成员变量方法、方法类型等等所有的信息）</p><h2 id="获取Class对象"><a href="#获取Class对象" class="headerlink" title="获取Class对象"></a>获取Class对象</h2><p>不能有New关键字来获取Class对象，因为Class对象是在加载.class文件的时候JVM 创建的</p><h3 id="有四种方式"><a href="#有四种方式" class="headerlink" title="有四种方式"></a>有四种方式</h3><ol><li><p>通过类的class属性获取</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class &lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>通过对象的getClass()方法【所有的对象都有getClass()方法】</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;User&gt; cls2 = (Class&lt;User&gt;) user.getClass();</span><br></pre></td></tr></table></figure></li><li><p>通过Class类的forName(‘类的全限定名’)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//抛出ClassNotFoundException</span></span><br><span class="line">Class&lt;?&gt; cls3  = Class.forName(<span class="string">"com.yq.User"</span>);<span class="comment">//在遇到需要Class对象的时候加载User这个类的.class文件到JVM虚拟机</span></span><br></pre></td></tr></table></figure></li><li><p>通过类加载器获取</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ClassLoader classLoader =  User<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span>;<span class="comment">//获取到了类的加载器</span></span><br><span class="line">        classLoader.loadClass(<span class="string">"com.yq.User"</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h3><ul><li><p>public String getName()：以String的形式返回此Class对象的实体（类、接口、数组类、基本类型或void）名称，<strong>全限定名</strong></p></li><li><p>public String getSimpleName()：返回源代码中给出的底层类的建成、如果底层类是匿名的规则返回一个空字符串，<strong>直接名称</strong></p></li></ul><p>运行结果：</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e830548504f4bcb0410fa6c.png"  alt=""></p><h1 id="使用反射创建对象"><a href="#使用反射创建对象" class="headerlink" title="使用反射创建对象"></a>使用反射创建对象</h1><h2 id="新建User类"><a href="#新建User类" class="headerlink" title="新建User类"></a>新建User类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  String name;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"这里是无参构造"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">User</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"这里是有参构造方法name:"</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">User</span><span class="params">(String name,<span class="keyword">int</span> age)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"这里是有参构造方法name:"</span>+name+<span class="string">"\tage"</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="newInstance"><a href="#newInstance" class="headerlink" title="newInstance()"></a>newInstance()</h2><ul><li><p>public T newInstance：创建此Class对象所表示的类的一个新实例，调用类的无参构造方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用反射创建对象</span></span><br><span class="line"><span class="comment">//1.获取User类对应的Class类的对象</span></span><br><span class="line">Class&lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"><span class="comment">//2.创建User类的对象</span></span><br><span class="line">User user = cls.newInstance();<span class="comment">//使用类的无参构造方法创建对象</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="getConstructor"><a href="#getConstructor" class="headerlink" title="getConstructor()"></a>getConstructor()</h2><ul><li><p>public Constructor<T> getConstructor(Class&lt;?&gt;… parameterTypes)：通过有参构造方法来创建对象</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.获取User类对应的Class类的对象</span></span><br><span class="line">Class&lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">Constructor&lt;User&gt; clsConstructor  =  cls.getConstructor(String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//        3.2 调用Constructor对象的NewInstance()方法，实例化User对象</span></span><br><span class="line">  User user = clsConstructor.newInstance(<span class="string">"飞龙"</span>);</span><br><span class="line"><span class="comment">/*调用多个参数的构造方法</span></span><br><span class="line"><span class="comment">        Constructor&lt;User&gt; constructor = cls.getConstructor(String.class,int.class);</span></span><br><span class="line"><span class="comment">        User user1 = constructor.newInstance("张三",11);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="使用反射访问成员变量"><a href="#使用反射访问成员变量" class="headerlink" title="使用反射访问成员变量"></a>使用反射访问成员变量</h1><h2 id="getField"><a href="#getField" class="headerlink" title="getField()"></a>getField()</h2><p>getField只能访问public修饰的成员变量</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过类获取Class对象</span></span><br><span class="line">Class &lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"><span class="comment">//Field field = cls.getField("name");</span></span><br><span class="line">Field field = cls.getField(<span class="string">"age"</span>);</span><br><span class="line">System.out.println(field.getName());<span class="comment">//获取成员的名称</span></span><br></pre></td></tr></table></figure><h2 id="getDeclaredField"><a href="#getDeclaredField" class="headerlink" title="getDeclaredField"></a>getDeclaredField</h2><p>可以访问private修饰的成员变量</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过类获取Class对象</span></span><br><span class="line">Class &lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.age=<span class="number">15</span>;</span><br><span class="line">user.setName(<span class="string">"小飞龙"</span>);</span><br><span class="line">Field field = cls.getDeclaredField(<span class="string">"name"</span>);</span><br><span class="line">System.out.println(field.getName());<span class="comment">//获取成员的名称</span></span><br><span class="line">field.setAccessible(<span class="keyword">true</span>);<span class="comment">//设置私有成员变量可以被访问</span></span><br><span class="line">System.out.println(field.get(user));<span class="comment">//获取成员变量的内容</span></span><br></pre></td></tr></table></figure><h2 id="获取类的所有字段"><a href="#获取类的所有字段" class="headerlink" title="获取类的所有字段"></a>获取类的所有字段</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="comment">//通过类获取Class对象</span></span><br><span class="line">        Class &lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//        获取类的所有字段</span></span><br><span class="line"><span class="comment">//        Field[] field = cls.getFields();</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">"李四"</span>);</span><br><span class="line">        user.age=<span class="number">22</span>;</span><br><span class="line">        Field[] field = cls.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field1 :field)&#123;</span><br><span class="line">            field1.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//判断字段是那种数据类型</span></span><br><span class="line">            String filetype = field1.getType().getName();</span><br><span class="line">            <span class="keyword">if</span> (filetype.equals(String<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()))</span></span><br><span class="line"><span class="class">            </span>&#123;</span><br><span class="line">                System.out.println(field1.getName()+<span class="string">":"</span>+field1.get(user));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="使用反射访问成员方法"><a href="#使用反射访问成员方法" class="headerlink" title="使用反射访问成员方法"></a>使用反射访问成员方法</h1><h2 id="访问成员方法"><a href="#访问成员方法" class="headerlink" title="访问成员方法"></a>访问成员方法</h2><p>这里<strong>通过Class对象调用getMehods方法来访问获取目标类中的所有public修饰的成员方法返回一个Method类型的数组</strong></p><p>使用getMethod方法则可以访问固定的目标方法</p><h2 id="调用成员方法"><a href="#调用成员方法" class="headerlink" title="调用成员方法"></a>调用成员方法</h2><p>在调用访问到的成员方法的时候用Method对象调用invoke(目标类的对象);</p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="comment">//通过类获取Class对象</span></span><br><span class="line">  Class &lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取子类和它父类所有的方法只能访问public修饰的方法</span></span><br><span class="line">  <span class="comment">//Method [] methods = cls.getMethods();</span></span><br><span class="line">  <span class="comment">//拿到子类中的所有public方法 非构造方法</span></span><br><span class="line">  Method [] methods = cls.getDeclaredMethods();</span><br><span class="line">  <span class="keyword">for</span> (Method method : methods)&#123;</span><br><span class="line">      System.out.println(<span class="string">"子类中所有的方法："</span>+method.getName());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  Method method = cls.getMethod("introduce");</span></span><br><span class="line">  Method method = cls.getDeclaredMethod(<span class="string">"introduce"</span>);</span><br><span class="line">  System.out.println(method.getName());</span><br><span class="line">  method.setAccessible(<span class="keyword">true</span>);<span class="comment">//让私有方法可以被调用</span></span><br><span class="line">  <span class="comment">//调用方法 User类的对象</span></span><br><span class="line">  method.invoke(<span class="keyword">new</span> User());</span><br></pre></td></tr></table></figure><h1 id="使用反射访问构造方法"><a href="#使用反射访问构造方法" class="headerlink" title="使用反射访问构造方法"></a>使用反射访问构造方法</h1><h2 id="访问构造方法"><a href="#访问构造方法" class="headerlink" title="访问构造方法"></a>访问构造方法</h2><p>Constructor<T> getConstructor(Class&lt;?&gt;… parameterTypes)：获取需要访问的构造方法</p><h2 id="通过反射调用构造方法"><a href="#通过反射调用构造方法" class="headerlink" title="通过反射调用构造方法"></a>通过反射调用构造方法</h2><p>constructor.newInstance(“飞龙”, 22);：使用Constructor对象调用newInstance方法来调用该构造方法</p><h2 id="代码示例-1"><a href="#代码示例-1" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//通过反射的机制给变量赋值</span></span><br><span class="line"> Class&lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"> <span class="comment">//通过反射获取构造方法</span></span><br><span class="line"> Constructor&lt;User&gt; constructor = cls.getConstructor(String<span class="class">.<span class="keyword">class</span>, <span class="title">int</span>.<span class="title">class</span>)</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//通过反射调用构造方法</span></span><br><span class="line">User user =  constructor.newInstance(<span class="string">"飞龙"</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//通过反射访问成员变量</span></span><br><span class="line"> Field[] fields = cls.getDeclaredFields();</span><br><span class="line"> <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">     field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">     System.out.println(<span class="string">"所有的变量名："</span>+field.getName());</span><br><span class="line">     <span class="keyword">if</span> (<span class="string">"age"</span>.equals(field.getName())) &#123;</span><br><span class="line">         field.set(user, <span class="number">29</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (<span class="string">"name"</span>.equals(field.getName())) &#123;</span><br><span class="line">         field.set(user, <span class="string">"张三"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> System.out.println(user.getName());</span><br><span class="line"> System.out.println(user.age);</span><br></pre></td></tr></table></figure><h1 id="通过反射调用方法代码总汇"><a href="#通过反射调用方法代码总汇" class="headerlink" title="通过反射调用方法代码总汇"></a>通过反射调用方法代码总汇</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RdflectionDemo05</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射的机制给变量赋值</span></span><br><span class="line">        Class&lt;User&gt; cls = User<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        <span class="comment">//通过反射获取构造方法</span></span><br><span class="line">        Constructor&lt;User&gt; constructor = cls.getConstructor(String<span class="class">.<span class="keyword">class</span>, <span class="title">int</span>.<span class="title">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射调用构造方法</span></span><br><span class="line">       User user =  constructor.newInstance(<span class="string">"飞龙"</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Method method =  cls.getDeclaredMethod(<span class="string">"setName"</span>,String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">      method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">      method.invoke(user,<span class="string">"王五"</span>);</span><br><span class="line"></span><br><span class="line">      Method method1 =cls.getDeclaredMethod(<span class="string">"getName"</span>);</span><br><span class="line">      method1.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">     Object object = method1.invoke(user);</span><br><span class="line">        System.out.println(object);</span><br><span class="line">        <span class="comment">//通过反射访问成员变量</span></span><br><span class="line"><span class="comment">//        Field[] fields = cls.getDeclaredFields();</span></span><br><span class="line"><span class="comment">//        for (Field field : fields) &#123;</span></span><br><span class="line"><span class="comment">//            field.setAccessible(true);</span></span><br><span class="line"><span class="comment">//            System.out.println("所有的变量名："+field.getName());</span></span><br><span class="line"><span class="comment">//            if ("age".equals(field.getName())) &#123;</span></span><br><span class="line"><span class="comment">//                field.set(user, 29);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            if ("name".equals(field.getName())) &#123;</span></span><br><span class="line"><span class="comment">//                field.set(user, "张三");</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        System.out.println(user.getName());</span><br><span class="line">        System.out.println(user.age);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
            <tag> 反射 </tag>
            
            <tag> Class类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题基本设置</title>
      <link href="/archives/4167823285.html"/>
      <url>/archives/4167823285.html</url>
      
        <content type="html"><![CDATA[<p>用过很多主题，还是觉得这款很有意思，作者也再持续更新中，这里做个配置记录，避免以后部署的时候忘记</p><h1 id="主题安装和升级"><a href="#主题安装和升级" class="headerlink" title="主题安装和升级"></a>主题安装和升级</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>新建一个文件夹git bash打开，或者在bolg的根目录里</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;Butterfly</span><br></pre></td></tr></table></figure><p>比较新的分支</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b dev https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;Butterfly</span><br></pre></td></tr></table></figure><h2 id="主题环境配置"><a href="#主题环境配置" class="headerlink" title="主题环境配置"></a>主题环境配置</h2><p>如果没有 cheerio </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install cheerio@0.22.0 --save</span><br></pre></td></tr></table></figure><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save or yarn add hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><h2 id="平滑升级"><a href="#平滑升级" class="headerlink" title="平滑升级"></a>平滑升级</h2><p>推荐把主题默认的配置文件_config.yml 复製到 Hexo 工作目录下的 source/_data/butterfly.yml，如果 source/_data 的目录不存在那就创建一个。</p><blockquote><p>注意，如果你创建了 butterfly.yml, 它将会替换主题默认配置文件_config.yml 里的配置项 (不是合併而是替换), 之后你就只需要通过 git pull 的方式就可以平滑地升级 theme-butterfly 了。</p></blockquote><h1 id="主题页面设置"><a href="#主题页面设置" class="headerlink" title="主题页面设置"></a>主题页面设置</h1><h2 id="Page-Front-matter（页面）"><a href="#Page-Front-matter（页面）" class="headerlink" title="Page Front-matter（页面）"></a><strong>Page Front-matter</strong>（页面）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: （tags,link,categories这三个页面需要配置）</span><br><span class="line">comments: (是否需要显示评论，默认true)</span><br><span class="line">description:</span><br><span class="line">top_img: (设置顶部图)</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="Post-Front-matter（博客）"><a href="#Post-Front-matter（博客）" class="headerlink" title="Post Front-matter（博客）"></a><strong>Post Front-matter</strong>（博客）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: （除非特定需要，可以不写）</span><br><span class="line">comments  是否显示评论（除非设置false,可以不写）</span><br><span class="line">cover:  缩略图</span><br><span class="line">toc:  是否显示toc （除非特定文章设置，可以不写）</span><br><span class="line">toc_number: 是否显示toc数字 （除非特定文章设置，可以不写）</span><br><span class="line">copyright: 是否显示版权 （除非特定文章设置，可以不写）</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">hide:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a><strong>标签页</strong></h2><ol><li>在博客目录使用git bash打开</li><li>输入 <code>hexo new page tags</code></li><li>你会找到 博客根目录<code>source/tags/index.md</code> 这个文件</li><li>修改这个文件：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-02-02 10:00:00</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h2><p>和标签页同样操作，</p><p>输入hexo new page categories</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-02-02 10:00:00</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="友链页面"><a href="#友链页面" class="headerlink" title="友链页面"></a>友链页面</h2><ol><li><p>在博客目录使用git bash打开</p></li><li><p>输入 `hexo new page  link</p></li><li><p>你会找到 博客根目录source/link/index.md 这个文件</p></li><li><p>修改这个文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-02-02 10:00:00</span><br><span class="line">type: &quot;link&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>添加友链</p><p>在 Hexo 博客目录中的 <code>source/_data</code>，创建一个文件 <code>link.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class:</span><br><span class="line">     class_name: 友情链接</span><br><span class="line">     link_list:</span><br><span class="line">       1:</span><br><span class="line">         name: Lorem Picsum</span><br><span class="line">         link: https:&#x2F;&#x2F;picsum.photos&#x2F;</span><br><span class="line">         avatar: https:&#x2F;&#x2F;i.picsum.photos&#x2F;id&#x2F;314&#x2F;200&#x2F;300.jpg</span><br><span class="line">         descr: 就是个用来做随机图片的网站，访问有点小慢</span><br><span class="line">   </span><br><span class="line">       2:</span><br><span class="line">         name: 24小时临时邮箱</span><br><span class="line">         link: http:&#x2F;&#x2F;24mail.chacuo.net&#x2F;</span><br><span class="line">         avatar: https:&#x2F;&#x2F;i.picsum.photos&#x2F;id&#x2F;315&#x2F;200&#x2F;300.jpg</span><br><span class="line">         descr: 邮箱持续24小时，比十分钟邮箱（10分钟)保持时间更长，可以任意设置邮箱名，随时更换邮箱。    </span><br><span class="line">   </span><br><span class="line">       3:</span><br><span class="line">         name: MD5在线加密解密</span><br><span class="line">         link: https:&#x2F;&#x2F;www.cmd5.com&#x2F;</span><br><span class="line">         avatar: https:&#x2F;&#x2F;i.picsum.photos&#x2F;id&#x2F;316&#x2F;200&#x2F;300.jpg</span><br><span class="line">         descr: md5神奇宝贝</span><br><span class="line">             </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">class2:</span><br><span class="line">      class_name: 无效链接</span><br><span class="line">      link_list:</span><br><span class="line">        1:</span><br><span class="line">          name: 梦xxx</span><br><span class="line">          link: https:&#x2F;&#x2F;blog.xxx.com</span><br><span class="line">          avatar: https:&#x2F;&#x2F;xxxx&#x2F;avatar.png</span><br><span class="line">          descr: xxxx</span><br></pre></td></tr></table></figure></li></ol><h2 id="音乐界面"><a href="#音乐界面" class="headerlink" title="音乐界面"></a><strong>音乐界面</strong></h2><p>音乐界面参考 <a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</a></p><h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a><strong>电影</strong></h2><p>电影界面参考 <a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">https://github.com/mythsman/hexo-douban</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><p>将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(博客根目录).</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">douban:</span><br><span class="line">  user: mythsman</span><br><span class="line">  builtin: false</span><br><span class="line">  book:</span><br><span class="line">    title: &#39;This is my book title&#39;</span><br><span class="line">    quote: &#39;This is my book quote&#39;</span><br><span class="line">  movie:</span><br><span class="line">    title: &#39;This is my movie title&#39;</span><br><span class="line">    quote: &#39;This is my movie quote&#39;</span><br><span class="line">  game:</span><br><span class="line">    title: &#39;This is my game title&#39;</span><br><span class="line">    quote: &#39;This is my game quote&#39;</span><br><span class="line">  timeout: 10000</span><br></pre></td></tr></table></figure><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://www.douban.com/people/xxxxxx/&quot;" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/&quot;</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入<code>hexo s</code>和<code>hexo g</code>中，默认是<code>false</code>,另一可选项为<code>true</code>(1.x.x版本新增配置项)。</li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><h1 id="站点-amp-amp-主题配置"><a href="#站点-amp-amp-主题配置" class="headerlink" title="站点&amp;&amp;主题配置"></a>站点&amp;&amp;主题配置</h1><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a><strong>语言</strong></h2><p>修改博客根目录配置文件 <code>_config.yml</code>下的language:属性</p><p>默认语言是 <code>en</code></p><p>主题支持三种语言</p><ul><li>default(en)</li><li>zh-CN (简体中文)</li><li>zh-TW (繁体中文)</li></ul><h2 id="网站资料"><a href="#网站资料" class="headerlink" title="网站资料"></a><strong>网站资料</strong></h2><p>请修改博客根目录的<code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 馀小少</span><br><span class="line">subtitle: &#39;个人技术博客&#39;</span><br><span class="line">description: &#39;热衷于跳坑无法自拔&#39;</span><br><span class="line">keywords: &#39;&#39;</span><br><span class="line">author: 馀小少</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a><strong>导航菜单</strong></h2><p>请修改博客根目录的\source_data_\butterfly.yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: &#x2F; || fa fa-home</span><br><span class="line">  归档: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  标签: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  分类: &#x2F;categories&#x2F; || fa fa-folder-open</span><br><span class="line">  随笔: &#x2F;tags&#x2F;随笔&#x2F; || fa fa-tags</span><br><span class="line">  友链: &#x2F;link&#x2F; || fa fa-link</span><br><span class="line"> # About: &#x2F;about&#x2F; || fa fa-heart</span><br><span class="line">  我的简历: http:&#x2F;&#x2F;yz-yq.gitee.io&#x2F;anires&#x2F; || fa fa-address-card</span><br><span class="line">  列表||fa fa-list:</span><br><span class="line">   - Music || &#x2F;music&#x2F; || fa fa-music</span><br><span class="line">   - Movie || &#x2F;movies&#x2F; || fa fa-film</span><br></pre></td></tr></table></figure><h2 id="代码设置"><a href="#代码设置" class="headerlink" title="代码设置"></a><strong>代码设置</strong></h2><p>Butterfly 支持了 Material Theme 全部 5 种代码高亮样式：</p><ul><li>default</li><li>darker</li><li>pale night</li><li>light</li><li>ocean</li></ul><p>配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight_theme: light #代码高亮主题</span><br><span class="line">highlight_copy: true #代码是否启用复制功能</span><br><span class="line">highlight_shrink: true #true代码框不展开，需点击 &#39;&gt;&#39; 打开 false展开 none不显示&#39;&gt;&#39;按钮，代码块展开</span><br></pre></td></tr></table></figure><h2 id="自动换行"><a href="#自动换行" class="headerlink" title="自动换行"></a><strong>自动换行</strong></h2><p>配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code_word_wrap: true #代码自动换行</span><br></pre></td></tr></table></figure><p>然后找到你站点的 Hexo 配置文件<code>_config.yml</code>，将 <code>line_number</code> 改成 <code>false</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: false</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure><h2 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a><strong>社交图标</strong></h2><p>Butterfly 支持 <a href="https://fontawesome.com/v4.7.0/" target="_blank" rel="noopener">font-awesome v4</a> 和 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">font-awesome v5</a>. 如需开启 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">font-awesome v5</a>, 需要在 <code>Butterfly.yml</code> 上开启</p><p>CDN_USE:<br>  css:<br>    - <a href="https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css" target="_blank" rel="noopener">https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css</a><br>    - <a href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" target="_blank" rel="noopener">https://use.fontawesome.com/releases/v5.8.1/css/all.css</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># fontawesome图标# 默认使用的是 fontawesome v4版本的图标fontawesome_v5:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><p>无论 V4 还是 V5, 书写格式都是一样的<code>图标名：url</code> || 描述性文字</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  fa fa-qq: tencent:&#x2F;&#x2F;AddContact&#x2F;?fromId&#x3D;50&amp;fromSubId&#x3D;1&amp;subcmd&#x3D;all&amp;uin&#x3D;535668586</span><br><span class="line">  fa fa-envelope: mailto:sviptzk@163.com</span><br><span class="line">  fa fa-rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure><h2 id="主页封面文字截取"><a href="#主页封面文字截取" class="headerlink" title="主页封面文字截取"></a><strong>主页封面文字截取</strong></h2><p>主页文章节选只支持自动节选和文章页 description。优先选择自动节选。</p><p>在 <code>butterfly.yml</code> 里可以开启 <code>auto_excerpt</code> 的选项，你的文章将会在自动截取部分显示在主页。（默认显示 150 个字）。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>如果没有开启<code>自动节选</code>，则会显示文章页 front-matter 里面设置的 <code>description</code>。</p><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a><strong>顶部图</strong></h2><p>顶部图有 2 种配置：具体 url 和（留空，true 和 false，三个效果一样）</p><h3 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h3><p>当具体 <strong>url</strong> 时<br> 主页的顶部图可以在 <code>Butterfly.yml</code> 设置 <code>index_img</code></p><p>archives 页的顶部图可以在 <code>Butterfly.yml</code> 设置 <code>archive_img</code></p><p>其他 <code>page</code> 页的顶部图可以在各自的 md 页面设置 <code>front-matter</code> 中的 <code>top_img</code></p><h3 id="帖子（博客）"><a href="#帖子（博客）" class="headerlink" title="帖子（博客）"></a>帖子（博客）</h3><p><code>post</code> 页的顶部图会优先显示各自 <code>front-matter</code> 中的 <code>top_img</code>, 如果没有设置，则会缩略图（即各自 <code>front-matter</code> 中的 <code>cover</code>)，如果没有则会显示显示 <code>default_top_img</code> 图片</p><h2 id="文章相关项"><a href="#文章相关项" class="headerlink" title="文章相关项"></a><strong>文章相关项</strong></h2><p>这个选项是用来显示文章的相关信息的。配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  date_type: both #可设置文章日期显示创建日期(created)或者更新日期(updated)或者两种都显示(both)</span><br><span class="line">  categories: true # or false 是否显示分类</span><br><span class="line">  tags: true # or false 是否显示标签</span><br></pre></td></tr></table></figure><h2 id="文章版权"><a href="#文章版权" class="headerlink" title="文章版权"></a><strong>文章版权</strong></h2><p>为你的博客文章展示文章版权和许可协议。配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: true</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;</span><br></pre></td></tr></table></figure><blockquote><p>由于 Hexo 4.1 开始，默认对网址进行解码，以至于如果是中文网址，会被解码，可设置 decode: true 来显示中文网址。</p></blockquote><p>如果有文章（例如：转载文章）不需要显示版权，可以在文章 Front-matter 单独设置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copyright: false</span><br></pre></td></tr></table></figure><p><strong>文章打赏</strong></p><p>在你每篇文章的结尾，可以添加打赏按钮。相关二维码可以自行配置 配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reward:</span><br><span class="line">  enable: true</span><br><span class="line">  QR_code:</span><br><span class="line">    - itemlist:</span><br><span class="line">        img: &#x2F;img&#x2F;wechat.jpg</span><br><span class="line">        text: 微信</span><br><span class="line">    - itemlist:</span><br><span class="line">        img: &#x2F;img&#x2F;alipay.jpg</span><br><span class="line">        text: 支付宝</span><br></pre></td></tr></table></figure><h2 id="文章隐藏"><a href="#文章隐藏" class="headerlink" title="文章隐藏"></a><strong>文章隐藏</strong></h2><p>参考 <a href="https://github.com/printempw/hexo-hide-posts/blob/master/README_ZH.md" target="_blank" rel="noopener">https://github.com/printempw/hexo-hide-posts/blob/master/README_ZH.md</a></p><p>在文章的 Front-matter 添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hide: true</span><br></pre></td></tr></table></figure><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a><strong>头像</strong></h2><p>配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar: https:&#x2F;&#x2F;img.antmoe.com&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure><h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a><strong>TOC</strong></h2><p>在文章页，会有一个目录，用于显示 TOC。 手机端默认显示按钮。</p><p>配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  number: true   #显示章节数字</span><br></pre></td></tr></table></figure><h3 id="自动打开-TOC"><a href="#自动打开-TOC" class="headerlink" title="自动打开 TOC"></a><strong>自动打开 TOC</strong></h3><p>可选择进入文章页面时，是否自动打开 <code>sidebar</code> 显示 TOC</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auto_open_sidebar:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a><strong>相关文章</strong></h2><p>相关文章推荐的原理是根据文章 tags 的比重来推荐</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">related_post:</span><br><span class="line">  enable: true</span><br><span class="line">  limit: 6 # 显示推荐文章数目</span><br><span class="line">  date_type: created # or created or updated 文章日期显示创建日或者更新日</span><br></pre></td></tr></table></figure><h2 id="Footer-设置"><a href="#Footer-设置" class="headerlink" title="Footer 设置"></a><strong>Footer 设置</strong></h2><h3 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a><strong>博客年份</strong></h3><p>since 是一个来展示你站点起始时间的选项。它位于页面的最底部。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">since: 2020</span><br></pre></td></tr></table></figure><h3 id="页脚自定义文字"><a href="#页脚自定义文字" class="headerlink" title="页脚自定义文字"></a><strong>页脚自定义文字</strong></h3><p><code>footer_custom_text</code> 是一个给你用来在页脚自定义文本的选项。通常你可以在这里写声明文本等。支持 HTML。</p><h3 id="ICP"><a href="#ICP" class="headerlink" title="ICP"></a><strong>ICP</strong></h3><p>对于部分有备案的域名，可以在 ICP 配置显示。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ICP:</span><br><span class="line">  enable: true</span><br><span class="line">  url: http:&#x2F;&#x2F;www.beian.miit.gov.cn&#x2F;</span><br><span class="line">  text: 粤ICP备xxxx</span><br><span class="line">  icon: &#x2F;img&#x2F;icp.png</span><br></pre></td></tr></table></figure><h2 id="右下角按钮"><a href="#右下角按钮" class="headerlink" title="右下角按钮"></a><strong>右下角按钮</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">translate:</span><br><span class="line">  enable: true</span><br><span class="line">  # 默认按钮显示文字(网站是简体，应设置为&#39;default: 繁&#39;)</span><br><span class="line">  default: 简</span><br><span class="line">  #网站默认语言，1: 繁体中文, 2: 简体中文</span><br><span class="line">  defaultEncoding: 1</span><br><span class="line">  #延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span><br><span class="line">  translateDelay: 0</span><br><span class="line">  #博客网址</span><br><span class="line">  cookieDomain: &quot;https:&#x2F;&#x2F;jerryc.me&#x2F;&quot;</span><br><span class="line">  #当文字是简体时，按钮显示的文字</span><br><span class="line">  msgToTraditionalChinese: &quot;繁&quot;</span><br><span class="line">  #当文字是繁体时，按钮显示的文字</span><br><span class="line">  msgToSimplifiedChinese: &quot;简&quot;</span><br></pre></td></tr></table></figure><h2 id="夜间模式"><a href="#夜间模式" class="headerlink" title="夜间模式"></a><strong>夜间模式</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 夜间模式</span><br><span class="line">darkmode:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><blockquote><p>V2.0.0 开始增加一个选项，可开啓自动切换 light mode 和 dark mode</p><p>autoChangeMode: 1 跟随系统而变化，不支持的浏览器 / 系统将按照时间晚上 6 点到早上 6 点之间切换为 dark mode</p><p>autoChangeMode: 2 只按照时间 晚上 6 点到早上 6 点之间切换为 dark mode, 其余时间为 light mode</p><p>autoChangeMode: false 取消自动切换</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 自动切换 dark mode和 light mode</span><br><span class="line">autoChangeMode: false</span><br></pre></td></tr></table></figure><h3 id="阅读模式"><a href="#阅读模式" class="headerlink" title="阅读模式"></a><strong>阅读模式</strong></h3><p>閲读模式下会去掉除文章外的内容，避免干扰閲读。</p><p>只会出现在文章页面，右下角会有閲读模式按钮。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">readmode:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="侧边设置"><a href="#侧边设置" class="headerlink" title="侧边设置"></a><strong>侧边设置</strong></h2><p>可自行决定哪个项目需要显示，可决定位置。（至少需要显示一个）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aside:</span><br><span class="line">  position: right # left or right</span><br><span class="line">  card_author: true #作者卡片</span><br><span class="line">  card_announcement: true #公告卡片</span><br><span class="line">  card_recent_post: false #最新文章卡片</span><br><span class="line">  card_categories: false #分类卡片</span><br><span class="line">  card_tags: true #标签卡片</span><br><span class="line">  card_archives: false #归档卡片</span><br><span class="line">  card_webinfo: true #网站信息卡片</span><br></pre></td></tr></table></figure><h2 id="访问人数"><a href="#访问人数" class="headerlink" title="访问人数"></a><strong>访问人数</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi:</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_pv: true</span><br><span class="line">  page_pv: true</span><br></pre></td></tr></table></figure><h2 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a><strong>运行时间</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">runtimeshow:</span><br><span class="line">  enable: true</span><br><span class="line">  start_date: 2020&#x2F;4&#x2F;4 10:00:00  </span><br><span class="line">  ##网页开通时间</span><br><span class="line">  #格式: 月&#x2F;日&#x2F;年 时间</span><br><span class="line">  #也可以写成 年&#x2F;月&#x2F;日 时间</span><br></pre></td></tr></table></figure><h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a><strong>标签外挂</strong></h2><blockquote><p>标籤外挂是 Hexo 独有的功能，并不是标準的 Markdown 格式。以下的写法，只适用于 Butterfly 主题，用在其它主题上不会有效果，甚至可能会报错。使用前请留意</p></blockquote><p>配置 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: true</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">[class]   : default | primary | success | info | warning | danger.[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">anger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>style: simple,modern,flat,disable</p></blockquote><h3 id="Gallery-相册"><a href="#Gallery-相册" class="headerlink" title="Gallery 相册**"></a>Gallery 相册**</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https:&#x2F;&#x2F;gratisography.com&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;10&#x2F;gratisography-scary-pumpkin-hand-900x600.jpg)</span><br><span class="line">![](https:&#x2F;&#x2F;gratisography.com&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;10&#x2F;gratisography-fresh-fish-dinner-900x600.jpg)</span><br><span class="line">![](https:&#x2F;&#x2F;gratisography.com&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;10&#x2F;gratisography-mountain-cloud-landscape-900x600.jpg)</span><br><span class="line">![](https:&#x2F;&#x2F;picjumbo.com&#x2F;wp-content&#x2F;uploads&#x2F;iphone-free-stock-photos-2210x3315.jpg)</span><br><span class="line">![](https:&#x2F;&#x2F;picjumbo.com&#x2F;wp-content&#x2F;uploads&#x2F;young-millennial-girl-drinking-lemonade-and-overlooking-the-city-2210x1473.jpg)</span><br><span class="line">![](https:&#x2F;&#x2F;picjumbo.com&#x2F;wp-content&#x2F;uploads&#x2F;modern-graphic-designer-essentials_free_stock_photos_picjumbo_HNCK4919-2210x1474.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a><strong>评论</strong></h2><p>我使用的来必力和valine</p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a><strong>分享</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sharejs:</span><br><span class="line">  enable: true</span><br><span class="line">  sites: facebook,twitter,wechat,weibo,qq</span><br></pre></td></tr></table></figure><h2 id="搜索系统"><a href="#搜索系统" class="headerlink" title="搜索系统"></a><strong>搜索系统</strong></h2><h3 id="Algolia"><a href="#Algolia" class="headerlink" title="Algolia"></a><strong>Algolia</strong></h3><p>你需要安装 <a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">hexo-algolia</a> 或 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch" target="_blank" rel="noopener">hexo-algoliasearch</a>. 根据它们的説明文档去做相应的配置。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">algolia_search:</span><br><span class="line">  enable: true</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 6</span><br><span class="line"></span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#39;t find any results for the search: $&#123;query&#125;&quot; # if there are no result</span><br><span class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span><br></pre></td></tr></table></figure><h3 id="本地搜索系统"><a href="#本地搜索系统" class="headerlink" title="本地搜索系统"></a><strong>本地搜索系统</strong></h3><p>你需要安装 <a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>. 根据它的文档去做相应配置。注意格式只支持 xml。</p><ol><li><p>npm install hexo-generator-search –save</p></li><li><p>您可以在博客根中配置此插件。<code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure><ul><li>path- 文件路径。默认情况下是 。如果文件扩展名为 ，则输出格式将为 JSON。否则将导出 XML 格式文件。<code>search.xml``.json</code></li><li>field- 要搜索的搜索范围，您可以选择： <ul><li><strong>帖子</strong>（默认） - 将只涵盖您的博客的所有帖子。</li><li><strong>页面</strong>- 将只覆盖您的博客的所有页面。</li><li><strong>所有</strong>- 将涵盖您的博客的所有帖子和页面。</li></ul></li><li>content- 是否包含每篇文章的全部内容。如果 生成的结果仅涵盖标题和其他没有正文的元信息。默认情况下是 。<code>false``true</code></li></ul></li></ol><p>配置主题配置文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#39;t find any results for the search: $&#123;query&#125;&quot; # if there are no result</span><br></pre></td></tr></table></figure><h4 id="排除搜索"><a href="#排除搜索" class="headerlink" title="排除搜索"></a>排除搜索</h4><p>若要排除某个帖子或页面的索引，只需在其前一物质的顶部插入设置，<em>例如</em>：<code>indexing: false</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;Code Highlight&quot;</span><br><span class="line">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class="line">tags: highlight</span><br><span class="line">categories: Demo</span><br><span class="line">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class="line">toc: true</span><br><span class="line">indexing: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="网页验证"><a href="#网页验证" class="headerlink" title="网页验证"></a><strong>网页验证</strong></h2><p>如果需要搜索引擎收录网站，可能需要登录对应搜索引擎的管理平台进行提交。<br> 各自的验证码可从各自管理平台拿到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Google Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;www.google.com&#x2F;webmasters&#x2F;</span><br><span class="line">google_site_verification:</span><br><span class="line"></span><br><span class="line"># Bing Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;www.bing.com&#x2F;webmaster&#x2F;</span><br><span class="line">bing_site_verification:</span><br><span class="line"></span><br><span class="line"># Yandex Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;webmaster.yandex.ru&#x2F;</span><br><span class="line">yandex_site_verification:</span><br><span class="line"></span><br><span class="line"># Baidu Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;ziyuan.baidu.com&#x2F;site&#x2F;</span><br><span class="line">baidu_site_verification:</span><br><span class="line"></span><br><span class="line"># 360 Webmaster tools verification setting</span><br><span class="line"># see http:&#x2F;&#x2F;zhanzhang.so.com&#x2F;</span><br><span class="line">qihu_site_verification:</span><br></pre></td></tr></table></figure><h2 id="分析统计"><a href="#分析统计" class="headerlink" title="分析统计"></a><strong>分析统计</strong></h2><p>统计找到各个平台找到代码即可</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">baidu_analytics: #百度统计</span><br><span class="line">google_analytics: # 谷歌分析通常以&#96;UA-&#96;打头</span><br><span class="line">tencent_analytics: #腾讯分析</span><br></pre></td></tr></table></figure><h2 id="广告"><a href="#广告" class="headerlink" title="广告"></a><strong>广告</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">google_adsense:</span><br><span class="line">  enable: true</span><br><span class="line">  js: https:&#x2F;&#x2F;pagead2.googlesyndication.com&#x2F;pagead&#x2F;js&#x2F;adsbygoogle.js</span><br><span class="line">  client: # 填入个人识别码</span><br><span class="line">  enable_page_level_ads: true</span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a><strong>公式</strong></h2><h3 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a><strong>MathJax</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  # true 表示每一页都加载mathjax.js</span><br><span class="line">  # false 需要时加载，须在使用的Markdown Front-matter 加上 mathjax: true</span><br><span class="line">  per_page: false</span><br></pre></td></tr></table></figure><p>然后你需要修改一下默认的 markdown 渲染引擎来实现 MathJax 的效果。</p><p>查看 <a href="https://www.npmjs.com/package/hexo-renderer-kramed" target="_blank" rel="noopener">https://www.npmjs.com/package/hexo-renderer-kramed</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kramed:</span><br><span class="line">  gfm: true</span><br><span class="line">  pedantic: false</span><br><span class="line">  sanitize: false</span><br><span class="line">  tables: true</span><br><span class="line">  breaks: true</span><br><span class="line">  smartLists: true</span><br><span class="line">  smartypants: true</span><br></pre></td></tr></table></figure><h3 id="KaTeX-推荐"><a href="#KaTeX-推荐" class="headerlink" title="KaTeX (推荐)"></a><strong>KaTeX (推荐)</strong></h3><p>首先禁用 <code>MathJax</code>（如果你配置过 MathJax 的话），然后修改你的 <code>butterfly.yml</code> 以便加载 <code>katex.min.css</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">katex:</span><br><span class="line">  enable: true</span><br><span class="line">  # true 表示每一页都加载katex.js</span><br><span class="line">  # false 需要时加载，须在使用的Markdown Front-matter 加上 katex: true</span><br><span class="line">  per_page: false</span><br><span class="line">  hide_scrollbar: true</span><br></pre></td></tr></table></figure><p>你不需要添加 <code>katex.min.js</code> 来渲染数学方程。相应的你需要卸载你之前的 hexo 的 <code>markdown</code> 渲染器以及 <code>hexo-math</code>，然后安装新的 <code>hexo-renderer-markdown-it-plus</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 替换 &#96;hexo-renderer-kramed&#96; 或者 &#96;hexo-renderer-marked&#96; 等hexo的markdown渲染器</span><br><span class="line"># 你可以在你的package.json里找到hexo的markdwon渲染器，并将其卸载</span><br><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line"></span><br><span class="line"># or</span><br><span class="line"></span><br><span class="line">npm un hexo-renderer-kramed --save</span><br><span class="line"></span><br><span class="line"># 卸载 &#96;hexo-math&#96;</span><br><span class="line">npm un hexo-math --save</span><br><span class="line"></span><br><span class="line"># 然后安装 &#96;hexo-renderer-markdown-it-plus&#96;</span><br><span class="line">npm i @upupming&#x2F;hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><p>注意到 <code>hexo-renderer-markdown-it-plus</code> 已经无人持续维护，所以我们使用 <code>@upupming/hexo-renderer-markdown-it-plus</code>。 这份 fork 的代码使用了 <code>@neilsustc/markdown-it-katex</code> 同时它也是 VSCode 的插件 <code>Markdown All in One</code> 所使用的，所以我们可以获得最新的 <code>KaTex</code> 功能例如 <code>\tag{}</code>。</p><p>你还可以通过 <code>@neilsustc/markdown-it-katex</code> 控制 KaTeX 的设置，所有可配置的选项参见 <a href="https://www.antmoe.com/posts/75a6347a/[https://katex.org/docs/options.html。](https://katex.org/docs/options.html。)" target="_blank" rel="noopener">https://katex.org/docs/options.html</a>。 比如你想要禁用掉 KaTeX 在命令行上输出的宂长的警告信息，你可以在根目录的 <code>_config.yml</code> 中使用下面的配置将 <code>strict</code> 设置为 false:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">markdown_it_plus:</span><br><span class="line">  plugins:</span><br><span class="line">    - plugin:</span><br><span class="line">      name: &#39;@neilsustc&#x2F;markdown-it-katex&#39;</span><br><span class="line">      enable: true</span><br><span class="line">      options:</span><br><span class="line">        strict: false</span><br></pre></td></tr></table></figure><h2 id="美化-特效"><a href="#美化-特效" class="headerlink" title="美化 / 特效"></a><strong>美化 / 特效</strong></h2><blockquote><p>颜色值必须被双引号包裹，就像 “#000” 而不是 #000。否则将会在构建的时候报错！</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme_color:</span><br><span class="line">  enable: true</span><br><span class="line">  main: &quot;#49B1F5&quot;</span><br><span class="line">  paginator: &quot;#00c4b6&quot;</span><br><span class="line">  button_hover: &quot;#FF7242&quot;</span><br><span class="line">  text_selection: &quot;#00c4b6&quot;</span><br><span class="line">  link_color: &quot;#99a9bf&quot;</span><br><span class="line">  meta_color: &quot;#858585&quot;</span><br><span class="line">  hr_color: &quot;#A4D8FA&quot;</span><br><span class="line">  code_foreground: &quot;#F47466&quot;</span><br><span class="line">  code_background: &quot;rgba(27, 31, 35, .05)&quot;</span><br><span class="line">  toc_color: &quot;#00c4b6&quot;</span><br><span class="line">  blockquote_padding_color: &quot;#49b1f5&quot;</span><br><span class="line">  blockquote_background_color: &quot;#49b1f5&quot;</span><br></pre></td></tr></table></figure><h3 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a><strong>网站背景</strong></h3><p>默认显示白色，可设置图片或者顔色</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 图片格式 background: url(http:&#x2F;&#x2F;xxxxxx.com&#x2F;xxx.jpg)</span><br><span class="line"># 顔色 background: &#39;#49B202&#39;</span><br><span class="line"># 留空 显示白色</span><br><span class="line">background: &quot;#efefef&quot;</span><br><span class="line"># background: url(https:&#x2F;&#x2F;i.loli.net&#x2F;2019&#x2F;09&#x2F;09&#x2F;5oDRkWVKctx2b6A.png)</span><br></pre></td></tr></table></figure><h3 id="footer-背景"><a href="#footer-背景" class="headerlink" title="footer 背景"></a><strong>footer 背景</strong></h3><p>footer 的背景会与 <code>top_img</code> 的一致，当设置 false 时，将与主题色一致。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># footer是否显示图片背景(与top_img一致)</span><br><span class="line">footer_bg: true</span><br></pre></td></tr></table></figure><h3 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a><strong>打字效果</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 打字效果</span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: true</span><br><span class="line">  colorful: true # 冒光特效</span><br><span class="line">  shake: false # 抖动特效</span><br></pre></td></tr></table></figure><h3 id="彩带"><a href="#彩带" class="headerlink" title="彩带"></a><strong>彩带</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: false  #设置是否每次点击都更换綵带</span><br><span class="line">  mobile: false # false 手机端不显示 true 手机端显示</span><br></pre></td></tr></table></figure><h3 id="canvas-nest"><a href="#canvas-nest" class="headerlink" title="canvas-nest"></a>canvas-nest</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  color: &#39;0,0,255&#39; #color of lines, default: &#39;0,0,0&#39;; RGB values: (R,G,B).(note: use &#39;,&#39; to separate.)</span><br><span class="line">  opacity: 0.7 # the opacity of line (0~1), default: 0.5.</span><br><span class="line">  zIndex: -1 # z-index property of the background, default: -1.</span><br><span class="line">  count: 99 # the number of lines, default: 99.</span><br><span class="line">  mobile: false # false 手机端不显示 true 手机端显示</span><br></pre></td></tr></table></figure><h3 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a><strong>鼠标点击效果</strong></h3><h4 id="烟花"><a href="#烟花" class="headerlink" title="烟花"></a>烟花</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fireworks:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h4 id="爱心"><a href="#爱心" class="headerlink" title="爱心"></a>爱心</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">click_heart:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h4 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ClickShowText:</span><br><span class="line">  enable: false</span><br><span class="line">  text: </span><br><span class="line">    - 富强</span><br><span class="line">    - 民主</span><br><span class="line">    - 文明</span><br><span class="line">    - 和谐</span><br><span class="line">    - 自由</span><br><span class="line">    - 平等</span><br><span class="line">    - 公正</span><br><span class="line">    - 法治</span><br><span class="line">    - 爱国</span><br><span class="line">    - 敬业</span><br><span class="line">    - 诚信</span><br><span class="line">    - 友善</span><br><span class="line">  fontSize: 15px</span><br></pre></td></tr></table></figure><h3 id="文章页美化"><a href="#文章页美化" class="headerlink" title="文章页美化"></a><strong>文章页美化</strong></h3><p>会改变 ol、ul、h1-h5 的样式</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">beautify:</span><br><span class="line">  enable: true</span><br><span class="line">  title-prefix-icon: &#39;\f0c1&#39;</span><br><span class="line">  title-prefix-icon-color: &quot;#F47466&quot;</span><br></pre></td></tr></table></figure><p><code>title-prefix-icon</code> 填写的是 fontawesome 的 icon 的 Unicode 数</p><h3 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a><strong>自定义字体</strong></h3><p>可自行设置字体的 <code>font-family</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line">  font-family: Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,&quot;Microsoft JhengHei&quot;, &quot;MicrMicrosoft YaHei&quot;, Helvetica Neue, Helvetica, Arial, sans-serif</span><br><span class="line">  code-font: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft JhengHei&quot;,&quot;Microsoft YaHei&quot;, monospace, Helvetica Neue For Number</span><br></pre></td></tr></table></figure><h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a><strong>网站副标题</strong></h2><blockquote><p>适用于 版本号 &gt;= V1.2.0</p><p>V2.0.0 开始增加一些第三方 api 调用</p></blockquote><p><strong>网站副标题</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 主页subtitle</span><br><span class="line"># 打字效果</span><br><span class="line">subtitle: </span><br><span class="line">  enable: true</span><br><span class="line">  # source调用第三方服务</span><br><span class="line">  # source: false 关闭调用 </span><br><span class="line">  # source: 1  调用金山词霸的每日一句（简体）</span><br><span class="line">  # source: 2  调用一言网的一句话（简体） #https:&#x2F;&#x2F;hitokoto.cn&#x2F;</span><br><span class="line">  # source: 3  调用一句网（简体） http:&#x2F;&#x2F;yijuzhan.com&#x2F;</span><br><span class="line">  # source: 4  调用今日诗词（简体） https:&#x2F;&#x2F;www.jinrishici.com&#x2F;</span><br><span class="line">  # subtitle 会先显示 source , 再显示 sub 的内容</span><br><span class="line">  source: false</span><br><span class="line">  # (如果有英文逗号&#39; , &#39;，请使用转义字符 &amp;#44;)</span><br><span class="line">  sub:</span><br><span class="line">    - 今日事&amp;#44;今日毕</span><br><span class="line">    - Never put off till tomorrow what you can do today</span><br></pre></td></tr></table></figure><h3 id="主页文章-cover-位置"><a href="#主页文章-cover-位置" class="headerlink" title="主页文章 cover 位置"></a><strong>主页文章 cover 位置</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 主页文章COVER显示位置</span><br><span class="line"># 三个值可配置 left , right , both</span><br><span class="line"># left(全部图片显示在左边)，right(全部图片显示在右边)，both(左右左右顺序显示)</span><br><span class="line">index_post_cover: left</span><br></pre></td></tr></table></figure><h3 id="主页-top-img-显示大小"><a href="#主页-top-img-显示大小" class="headerlink" title="主页 top_img 显示大小"></a>主页 top_img 显示大小</h3><p>默认的显示为全屏。site-info 的区域会居中显示</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 主页设置</span><br><span class="line"># 默认top_img全屏，site_info在中间</span><br><span class="line"># 使用默认, 都无需填写（建议默认）</span><br><span class="line">index_top_img_height:  #主页top_img高度 例如 300px&#x2F;300em&#x2F;300rem  不能使用百分比</span><br></pre></td></tr></table></figure><blockquote><p>注意：index_top_img_height 的值不能使用百分比。<br> 2 个都不填的话，会使用默认值</p></blockquote><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h2><ol><li><p>打开 hexo 工作目录</p></li><li><p>npm install hexo-offline –save 或者 yarn add hexo-offline</p></li><li><p>修改_config.yml 在站点_config.yml 中增加以下内容。</p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> offline config passed to sw-precache.</span><br><span class="line">offline:</span><br><span class="line">  maximumFileSizeToCacheInBytes: 10485760 # 缓存的最大文件大小，以字节为单位</span><br><span class="line">  staticFileGlobs:</span><br><span class="line">    - public&#x2F;**&#x2F;*.&#123;js,html,css,png,jpg,gif,svg,webp,eot,ttf,woff,woff2&#125;</span><br><span class="line">  # 静态文件合集，如果你的站点使用了例如webp格式的文件，请将文件类型添加进去。</span><br><span class="line">  stripPrefix: public</span><br><span class="line">  verbose: true</span><br><span class="line">  runtimeCaching:</span><br><span class="line">    # CDNs - should be cacheFirst, since they should be used specific versions so should not change</span><br><span class="line">    - urlPattern: &#x2F;* # 如果你需要加载CDN资源，请配置该选项，如果没有，可以不配置。</span><br><span class="line">      handler: cacheFirst</span><br><span class="line">      options:</span><br><span class="line">        origin: your_websie_url # 可替换成你的 url</span><br></pre></td></tr></table></figure><p>在 butterfly.yml 中开启 pwa 选项。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pwa:</span><br><span class="line">  enable: true</span><br><span class="line">  manifest: &#x2F;img&#x2F;pwa&#x2F;manifest.json</span><br><span class="line">  theme_color: &quot;#fff&quot;</span><br><span class="line">  apple_touch_icon: &#x2F;img&#x2F;pwa&#x2F;apple-touch-icon.png</span><br><span class="line">  favicon_32_32: &#x2F;img&#x2F;pwa&#x2F;32.png</span><br><span class="line">  favicon_16_16: &#x2F;img&#x2F;pwa&#x2F;16.png</span><br><span class="line">  mask_icon: &#x2F;img&#x2F;pwa&#x2F;safari-pinned-tab.svg</span><br></pre></td></tr></table></figure><p>在创建 source/ 目录中创建 manifest.json 文件。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;string&quot;, &#x2F;&#x2F;应用全称</span><br><span class="line">    &quot;short_name&quot;: &quot;Junzhou&quot;, &#x2F;&#x2F;应用简称</span><br><span class="line">    &quot;theme_color&quot;: &quot;#49b1f5&quot;, &#x2F;&#x2F;匹配浏览器的地址栏颜色</span><br><span class="line">    &quot;background_color&quot;: &quot;#49b1f5&quot;,&#x2F;&#x2F;加载应用时的背景色</span><br><span class="line">    &quot;display&quot;: &quot;standalone&quot;,&#x2F;&#x2F;首选显示模式 其他选项有：fullscreen,minimal-ui,browser</span><br><span class="line">    &quot;scope&quot;: &quot;&#x2F;&quot;,</span><br><span class="line">    &quot;start_url&quot;: &quot;&#x2F;&quot;,</span><br><span class="line">    &quot;icons&quot;: [ &#x2F;&#x2F;该数组指定icons图标参数，用来时适配不同设备（需为png，至少包含一个192px*192px的图标）</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;36.png&quot;, &#x2F;&#x2F;图标文件的目录，需在source&#x2F;目录下自行创建。</span><br><span class="line">          &quot;sizes&quot;: &quot;36x36&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;48.png&quot;,</span><br><span class="line">          &quot;sizes&quot;: &quot;48x48&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;72.png&quot;,</span><br><span class="line">          &quot;sizes&quot;: &quot;72x72&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;96.png&quot;,</span><br><span class="line">          &quot;sizes&quot;: &quot;96x96&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;144.png&quot;,</span><br><span class="line">          &quot;sizes&quot;: &quot;144x144&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;192.png&quot;,</span><br><span class="line">          &quot;sizes&quot;: &quot;192x192&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;src&quot;: &quot;images&#x2F;pwaicons&#x2F;512.png&quot;,</span><br><span class="line">            &quot;sizes&quot;: &quot;512x512&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;image&#x2F;png&quot;</span><br><span class="line">          &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;splash_pages&quot;: null &#x2F;&#x2F;配置自定义启动动画。</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>你也可以通过 Web App Manifest 快速创建 manifest.json。（Web App Manifest 要求至少包含一个 512*512 像素的图标）</p><p>可以通过 Chrome 插件 Lighthouse 检查 PWA 配置是否生效以及配置是否正确。</p><p>打开博客页面<br>启动 Lighthouse 插件 (Lighthouse 插件要求至少包含一个 512*512 像素的图标)<br>关于 PWA（渐进式增强 Web 应用）的更多内容请参閲 Google Tools for Web Developers</p><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a><strong>字数统计</strong></h2><p>要为 Butterfly 配上字数统计特性，你需要如下几个步骤:</p><ol><li>打开 hexo 工作目录</li><li><code>npm install hexo-wordcount --save</code> or <code>yarn add hexo-wordcount</code></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a><strong>文章置顶</strong></h2><p>要为你一些文章置顶，你需要如下步骤:</p><ol><li>打开 hexo 工作目录</li><li><code>npm uninstall hexo-generator-index --save</code> 然后 <code>npm install hexo-generator-index-pin-top --save</code></li><li>你要在文章的 <code>front-matter</code> 区域里添加 <code>top: True</code> 属性来把这篇文章置顶。</li><li>你可以参考 <a href="https://github.com/netcan/hexo-generator-index-pin-top" target="_blank" rel="noopener">hexo-generator-index-pin-top</a> 这个仓库来了解更多细节。</li></ol><h2 id="图片放大查看模式"><a href="#图片放大查看模式" class="headerlink" title="图片放大查看模式"></a><strong>图片放大查看模式</strong></h2><h3 id="fancybox"><a href="#fancybox" class="headerlink" title="fancybox"></a><strong>fancybox</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># fancybox http:&#x2F;&#x2F;fancyapps.com&#x2F;fancybox&#x2F;3&#x2F;</span><br><span class="line">fancybox:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="medium-zoom"><a href="#medium-zoom" class="headerlink" title="medium_zoom"></a><strong>medium_zoom</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">medium_zoom:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="nackbar-弹窗"><a href="#nackbar-弹窗" class="headerlink" title="nackbar 弹窗"></a><strong>nackbar 弹窗</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Snackbar 弹窗</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;polonel&#x2F;SnackBar</span><br><span class="line"># position 弹窗位置</span><br><span class="line"># 可选 top-left &#x2F; top-center &#x2F; top-right &#x2F; bottom-left &#x2F; bottom-center &#x2F; bottom-right</span><br><span class="line">snackbar:</span><br><span class="line">  enable: true</span><br><span class="line">  position: bottom-left</span><br><span class="line">  bg_light: &#39;#49b1f5&#39; #light mode时弹窗背景</span><br><span class="line">  bg_dark: &#39;#2d3035&#39; #dark mode时弹窗背景</span><br></pre></td></tr></table></figure><h2 id="豆瓣插件页面img设置"><a href="#豆瓣插件页面img设置" class="headerlink" title="豆瓣插件页面img设置"></a>豆瓣插件页面img设置</h2><p>很多人使用 hexo-douban 这款插件。但是该插件是直接生成相应的网页，而不会去读取对应的 markdown 文件。因此，可在设置里进行相应的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 如果你有使用hexo-douban，可配置这个</span><br><span class="line">douban:  </span><br><span class="line">    meta: true </span><br><span class="line">    movies_img: </span><br><span class="line">    books_img:  </span><br><span class="line">    games_img:</span><br></pre></td></tr></table></figure><p>由于豆瓣开启了反盗链，因此，一些浏览器（safari）会无法显示图片，可把 meta 设为 true。但此操作会导致一些插件失效（例如：不蒜子）。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署coding并配置自己的域名</title>
      <link href="/archives/3292414775.html"/>
      <url>/archives/3292414775.html</url>
      
        <content type="html"><![CDATA[<p>注册都不说了哈，这个简单，不会自己百度</p><p>我也是第一次用coding，以前都是用的码云和GitHub，又因为coding最近都成为团队版，网上很多资料都不能用了，然后弄了半天部署号，实属有点菜，好滴，话不多说，开始干。我这里是部署的静态资源哈，源码我还是放在码云上，毕竟coding不是很熟悉</p><a id="more"></a><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>这里可以使用第一个也可以使用第三个，使用第一个需要打开部署功能，第三个已经打卡了。这里我还是使用第一个把</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f273c2a9a83be5b91584.png"  alt=""></p><p>在设置仓库名的时候，随意吧，但还是要有象征意义</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f313c2a9a83be5b993b2.png"  alt=""></p><h2 id="功能开关"><a href="#功能开关" class="headerlink" title="功能开关"></a>功能开关</h2><p>左下角团队管理，然后选中项目与成员-&gt;功能开关，这里直接把网页缩小，滚动鼠标。然后添加集成和部署</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f3acc2a9a83be5ba0aaf.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f3b3c2a9a83be5ba10a3.png"  alt=""></p><h1 id="ssh公钥配置"><a href="#ssh公钥配置" class="headerlink" title="ssh公钥配置"></a>ssh公钥配置</h1><p>点击头像，选中个人设置，点击ssh公钥，选择添加，这里复制本地公钥，详情查看我本地ssh生成的博客</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f451c2a9a83be5ba84ce.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f45ac2a9a83be5ba89f4.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f463c2a9a83be5ba903b.png"  alt=""></p><h1 id="博客配置"><a href="#博客配置" class="headerlink" title="博客配置"></a>博客配置</h1><p>复制博客的地址，这里因为配置了ssh公钥，就直接使用ssh连接。</p><p>打开项目，代码仓库，右上角克隆，复制ssh连接，把该链接粘贴在如下代码处</p><p>打开博客更目录的_config.yml_设置deploy:如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repository:</span><br><span class="line">    coding: git@e.coding.net:ybb-888&#x2F;blog.git,master</span><br></pre></td></tr></table></figure><h1 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo deploy # 如果提示没有git 执行npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后刷新coding仓库，查看是否有文件，这里都是博客源码里的public里的静态文件</p><h1 id="部署coding的pages"><a href="#部署coding的pages" class="headerlink" title="部署coding的pages"></a>部署coding的pages</h1><p>点击左侧持续部署，静态网站，这里需要实名，实名后直接拆创建静态网页</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f6b2c2a9a83be5bc6514.png"  alt=""></p><p>根据提示设置，然后保存</p><p>部署</p><p>点击部署，在点击访问地址，就可以访问该静态网页了。到这里静态页面就部署结束了</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f72ac2a9a83be5bcbc8a.png"  alt=""></p><h1 id="coding使用域名"><a href="#coding使用域名" class="headerlink" title="coding使用域名"></a>coding使用域名</h1><h2 id="查询page的ip"><a href="#查询page的ip" class="headerlink" title="查询page的ip"></a>查询page的ip</h2><p>打开如下网址，复制刚才访问地址，然后解析ip</p><blockquote><p><a href="http://ip.tool.chinaz.com/" target="_blank" rel="noopener">http://ip.tool.chinaz.com/</a></p></blockquote><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f7d6c2a9a83be5bd50d1.png"  alt=""></p><p>这里已经得到了我的”服务器ip“了。</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>打开你购买域名的网站，我是在阿里购买的 。</p><p>添加解析记录：</p><ol><li>记录类型为A，主机记录为@，解析线路选择默认，记录值为生成Coding Pages的IP地址（刚才查询到的）</li><li>记录类型为CNAME，主机记录为www，解析线路选择<strong>默认</strong>，记录值为你 Hexo 项目所部署到 Coding Pages 的访问地址，我的是<a href="http://99p7s5.coding-pages.com/" target="_blank" rel="noopener">http://99p7s5.coding-pages.com</a></li></ol><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96f966c2a9a83be5be8a01.png"  alt=""></p><p>如果添加不来，就百度阿里域名解析操作。</p><h2 id="coding配置"><a href="#coding配置" class="headerlink" title="coding配置"></a>coding配置</h2><p>在静态网页页面，点击右上角设置</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96fa49c2a9a83be5bf451a.png"  alt=""></p><p>滚动到下面，添加你的域名，例如我先添加带有<a href="http://www.yuxiaoshao.cn" target="_blank" rel="noopener">www.yuxiaoshao.cn</a> 然后再添加 yuxiaoshao.cn这里换成你的域名就ok</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e96fa57c2a9a83be5bf4ef7.png"  alt=""></p><p>然后点击首先域名，选中没有www的，然后在上面表格里勾选带有www的（跳转至首先）</p><p>然后直接使用你的域名就可以访问该静态页面了</p><h1 id="以后的部署"><a href="#以后的部署" class="headerlink" title="以后的部署"></a>以后的部署</h1><ol><li>直接本地hexo cl </li><li>hexo g</li><li>hexo deploy</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>避免更换电脑博客数据丢失（把项目托管在码云）</title>
      <link href="/archives/3278015703.html"/>
      <url>/archives/3278015703.html</url>
      
        <content type="html"><![CDATA[<p>因为hexo博客都是生成的静态资源，为了以后更换电脑，直接从码云上下载源码就行，避免丢失数据。</p><h1 id="创建托管环境"><a href="#创建托管环境" class="headerlink" title="创建托管环境"></a>创建托管环境</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9272e2c2a9a83be5d74833.png"  alt=""></p><h2 id="桌面新建文件夹"><a href="#桌面新建文件夹" class="headerlink" title="桌面新建文件夹"></a>桌面新建文件夹</h2><ol><li>用git bash打开新建文件夹</li><li>在新建的仓库中复制地址</li></ol><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e927482c2a9a83be5d8e7c1.png"  alt=""></p><p>git面板使用复制:鼠标右键paste</p><p>在git 面板里使用以下命令然后回车</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone 复制的网址</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9274dcc2a9a83be5d94628.png"  alt=""></p><h2 id="复制git目录"><a href="#复制git目录" class="headerlink" title="复制git目录"></a>复制git目录</h2><p>打开新建文件夹，里面会有仓库的上传地址，然后复制.git文件目录</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e927528c2a9a83be5d9994b.png"  alt=""></p><p>把.git目录复制到本地博客目录下</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92785ac2a9a83be5dd08ce.png"  alt=""></p><ul><li>public: 静态文件目录</li><li>node_modules：hexo底层文件目录</li><li>scaffolds：我也不知道，没分析</li><li>source：源码目录，存放博客或者页面配置目录</li><li>.gitignore：git过滤文件</li><li>themes：主题文件</li><li>_config.yml：hexo的配置文件</li><li>下面几个json就不要深究了，没意义了，反正也不做改动的</li></ul><h2 id="编辑-gitignore"><a href="#编辑-gitignore" class="headerlink" title="编辑.gitignore"></a>编辑.gitignore</h2><p>使用文本工具打开该文件。</p><p>.gitignore存放的是过滤文件，在此文档中的文件，是不会被上传的，这里需要删除public,因为部署的时候需要将码云的page定位到上传的public目录</p><blockquote><p>public目录:存放的hexo生成的静态文件也就是hexo g命令生成的静态目录</p></blockquote><p>.gitignore配置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">*.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">.deploy*&#x2F;</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e927696c2a9a83be5db3048.png"  alt=""></p><h1 id="上传博客到码云仓库"><a href="#上传博客到码云仓库" class="headerlink" title="上传博客到码云仓库"></a>上传博客到码云仓库</h1><ol><li><p>使用git bash打开博客目录</p></li><li><p>使用hexo g 生成静态目录public</p></li><li><p>使用git add . 将blog要上传的文件提交到缓存。这里我理解的是暂时提交到计算机内存里，不知道这理解对不对 （add 和.有个空格的）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></li><li><p>使用git commit-m （提交解释） 例如如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit-m  部署博客</span><br></pre></td></tr></table></figure></li><li><p>使用git push提交文件，第一次提交如果文件较多或者较大或者网速不好，会比较慢。</p></li></ol><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9278eec2a9a83be5dd9c09.png"  alt=""></p><h1 id="使用码云page部署博客"><a href="#使用码云page部署博客" class="headerlink" title="使用码云page部署博客"></a>使用码云page部署博客</h1><p>打开码云仓库点击服务，然后选择pages</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92793fc2a9a83be5ddf87c.png"  alt=""></p><p>分支不变，这里还是只用了一个主分支master</p><p>部署目录选择/public</p><p>建议使用枪支https这样会降低网站报红</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9279a7c2a9a83be5de7461.png"  alt=""></p><p>然后点击生成的域名，就直接映射到静态网页了。</p><h1 id="以后部署博客"><a href="#以后部署博客" class="headerlink" title="以后部署博客"></a>以后部署博客</h1><ol><li>直接用git bash打开博客目录，</li><li>先hexo clean删除public静态文件以及缓存</li><li>然后使用hexo g生成public</li><li>使用git add .</li><li>使用git commit -m 说明（必须要有说明才能使用git push）</li><li>使用git push</li><li>打开码云 找到博客仓库，找到服务 pages 然后直接点击更新，等待1分钟就部署成功</li><li>如果更换了电脑，直接git clone仓库源码就可以了。也可以直接下载仓库zip</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据类型（基本数据类型）、类型转换（自动转换、强制转换）</title>
      <link href="/archives/4070222742.html"/>
      <url>/archives/4070222742.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>数据类型就是用来声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量存储在内存中占用的空间。</p><p> 数据类型分为<br>     <strong>基本数据类型/算数类型：数值类型（整数类型，浮点型），字符型char<br>     构造数据类型：数组、结构体、共用体、枚举<br>     指针类型<br>     void类型（空类型）void</strong></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200304153218957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p> 我们常用的数字有整数和小数。所以<strong>基本数据类型类型又分为了整数类型</strong>即整型（当然这里的整型不是韩国的整形）<strong>和浮点类型</strong>即浮点型；</p><p> <strong>注意，各种类型的存储大小与系统位数有关，但目前通用的以64位系统为主。</strong></p><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><table><thead><tr><th>数据类型</th><th>占用大小</th></tr></thead><tbody><tr><td>short 短整型</td><td>2 字节 取值范围:-32,768 到 32,767</td></tr><tr><td>int     整型  <strong>【常用】</strong></td><td>2或4个字节（一般都占用2个字节）     取值范围:-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647</td></tr><tr><td>long    长整型</td><td>4 字节 取值范围：-2,147,483,648 到 2,147,483,647</td></tr></tbody></table><p>其实char也是int类型，在计算机中，字符也是通过对照ACILL表的int数值转换的。<br>想知道ACILL表是啥自己百度</p><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><table><thead><tr><th>数据类型</th><th>占用大小</th></tr></thead><tbody><tr><td>char 字符型<strong>【常用】</strong></td><td>1字节 取值范围：（-128 到 127 或 0 到 255）</td></tr><tr><td>因为-128 到 127 或 0 到 255也在int【-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647 】的取值范围之内，所以在小于127大于-128的范围里的时候 int可以和char类型相互转换对应的字符</td><td></td></tr><tr><td>### 浮点类型</td><td></td></tr><tr><td>数据类型</td><td>占用大小</td></tr><tr><td>——————————</td><td>———————————————————</td></tr><tr><td>float  单精度浮点 <strong>【常用】</strong></td><td>4 字节 取值范围（1.2E-38 到 3.4E+38  ）<strong>6 位小数</strong></td></tr><tr><td>double 双精度浮点 <strong>【常用】</strong></td><td>8 字节 取值范围 （2.3E-308 到 1.7E+308 ）<strong>15 位小数</strong></td></tr><tr><td>long double</td><td>16 字节  取值范围（3.4E-4932 到 1.1E+4932 ）<strong>19 位小数</strong></td></tr></tbody></table><h3 id="计算某个变量在特定平台上的准确大小"><a href="#计算某个变量在特定平台上的准确大小" class="headerlink" title="计算某个变量在特定平台上的准确大小"></a>计算某个变量在特定平台上的准确大小</h3><p>使用sizefof运算符</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line">   </span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="comment">//表达式 sizeof(type) 得到对象或类型的存储字节大小。</span></span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"int 存储大小 : %lu \n"</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">     <span class="comment">//%lu 为 32 位无符号整数</span></span><br><span class="line">     </span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h1><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p>  C 语言中如果一个表达式中含有不同类型的常量和变量，在计算时，会将它们自动转换为同一种类型；</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">5.5</span>;</span><br><span class="line"><span class="comment">/*这里的5.5默认是double类型，</span></span><br><span class="line"><span class="comment">通过C的自动转换机制，会摄取掉小数部分，只保留整数部分*/</span></span><br></pre></td></tr></table></figure><p><strong>自动转换规则：</strong><br>  浮点数赋给整型，该浮点数小数被舍去；       例：int a = 1.2; //这里的.2会被舍去 只会保留整数部分<br>  整数赋给浮点型，数值不变，但是被存储到相应的浮点型变量中；  例  float b = 5; //这里的 5 会被转换成5.0 作为浮点型存储在内存里</p><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p>使用（），在括号里填写需要转换的类型<br>使用基本数据类型的时候注意，从大范围强制转换为小范围会存在内存溢出的现象</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">float</span> f,x=<span class="number">3.6</span>,y=<span class="number">5.2</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">4</span>,a,b;</span><br><span class="line">    a=x+y;</span><br><span class="line">    b=(<span class="keyword">int</span>)(x+y);<span class="comment">//（x+y）是浮点型 这里会强制转换为int型</span></span><br><span class="line">    f=<span class="number">10</span>/i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a=%d,b=%d,f=%f,x=%f\n"</span>,a,b,f,x);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C中的“布尔类型”"><a href="#C中的“布尔类型”" class="headerlink" title="C中的“布尔类型”"></a>C中的“布尔类型”</h1><p>在C语言里，是没有bool类型的，所以 <strong>C 语言判断真假时以 0 为假，非 0 为真（一般用1）</strong>。</p><p>C99 提供了 _Bool 型，所以布尔类型可以声明为 _Bool flag。<br> _Bool 依然仍是整数类型，但与一般整型不同的是，_Bool 变量只能赋值为 0 或 1，非 0 的值都会被存储为 1。<br> C99还提供了一个头文件 &lt;stdbool.h&gt; 定义了 bool 代表 _Bool，true 代表 1，false 代表 0。<br> <strong>只要导入 stdbool.h ，就能非常方便的操作布尔类型了</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> <span class="comment">//导入 stdbool.h 来使用布尔类型</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"> <span class="comment">//计算n!,n的值在main中定义</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">int</span> n = <span class="number">10</span>;    <span class="comment">//计算叠乘数</span></span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">1</span>; <span class="comment">//用来存放叠乘的结果</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">false</span>;    <span class="comment">//叠乘标记</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> num = n;    <span class="comment">//循环次数</span></span><br><span class="line">  <span class="keyword">while</span>( !flag )</span><br><span class="line">  &#123;</span><br><span class="line">   sum = sum * (num--);</span><br><span class="line">   <span class="comment">//当num=1时结束循环</span></span><br><span class="line">   <span class="keyword">if</span>( num == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">"%d的叠乘值为 %d \n"</span>, n, sum);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言基础 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插件</title>
      <link href="/archives/3740815078.html"/>
      <url>/archives/3740815078.html</url>
      
        <content type="html"><![CDATA[<h1 id="豆瓣插件"><a href="#豆瓣插件" class="headerlink" title="豆瓣插件"></a>豆瓣插件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><blockquote><p><strong>需要注意的是</strong>，通常大家都喜欢用<code>hexo d</code>来作为<code>hexo deploy</code>命令的简化，但是当安装了<code>hexo douban</code>之后，就不能用<code>hexo d</code>了，因为<code>hexo douban</code>跟<code>hexo deploy</code>的前缀都是<code>hexo d</code>。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>插件</title>
      <link href="/archives/3740815079.html"/>
      <url>/archives/3740815079.html</url>
      
        <content type="html"><![CDATA[<h1 id="豆瓣插件"><a href="#豆瓣插件" class="headerlink" title="豆瓣插件"></a>豆瓣插件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><blockquote><p><strong>需要注意的是</strong>，通常大家都喜欢用<code>hexo d</code>来作为<code>hexo deploy</code>命令的简化，但是当安装了<code>hexo douban</code>之后，就不能用<code>hexo d</code>了，因为<code>hexo douban</code>跟<code>hexo deploy</code>的前缀都是<code>hexo d</code>。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>插件</title>
      <link href="/archives/3740815080.html"/>
      <url>/archives/3740815080.html</url>
      
        <content type="html"><![CDATA[<h1 id="豆瓣插件"><a href="#豆瓣插件" class="headerlink" title="豆瓣插件"></a>豆瓣插件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><blockquote><p><strong>需要注意的是</strong>，通常大家都喜欢用<code>hexo d</code>来作为<code>hexo deploy</code>命令的简化，但是当安装了<code>hexo douban</code>之后，就不能用<code>hexo d</code>了，因为<code>hexo douban</code>跟<code>hexo deploy</code>的前缀都是<code>hexo d</code>。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>（二）本机生成ssh公钥</title>
      <link href="/archives/3139128020.html"/>
      <url>/archives/3139128020.html</url>
      
        <content type="html"><![CDATA[<h1 id="检查本机公钥"><a href="#检查本机公钥" class="headerlink" title="检查本机公钥"></a>检查本机公钥</h1><p><strong>本机前提要有git和node.js环境，不懂的可以参考我的本地搭建hexo的帖子</strong></p><p>桌面鼠标右键使用git bash打开git面板</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~&#x2F;.ssh</span><br></pre></td></tr></table></figure><ul><li>如果提示：No such file or directory 说明你是第一次使用git。</li><li>如果不是第一次使用，请执行下面的操作,清理原有ssh密钥。</li></ul><h2 id="清理公钥"><a href="#清理公钥" class="headerlink" title="清理公钥"></a>清理公钥</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir key_backup$ cp id_rsa* key_backup$ rm id_rsa*</span><br></pre></td></tr></table></figure><h1 id="生成新的密钥"><a href="#生成新的密钥" class="headerlink" title="生成新的密钥"></a>生成新的密钥</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;1763692346@qq.com&quot;</span><br></pre></td></tr></table></figure><p>在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。</p><p>直接一路回车就好</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e932528c2a9a83be5511821.png"  alt=""></p><h1 id="查看本机密匙"><a href="#查看本机密匙" class="headerlink" title="查看本机密匙"></a>查看本机密匙</h1><p>在C:\Users\高冷的男神.ssh下的id_rsa.pub里</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9325a4c2a9a83be55177a7.png"  alt=""></p><ul><li><code>d_rsa</code>是你这台电脑的私人秘钥</li><li><code>id_rsa.pub</code>是公共秘钥</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公钥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加2d基础看板娘</title>
      <link href="/archives/2669297123.html"/>
      <url>/archives/2669297123.html</url>
      
        <content type="html"><![CDATA[<p>这里我在记录一下2d看板娘的配置，记性不好，之能多搞搞博客</p><h1 id="安装npm包"><a href="#安装npm包" class="headerlink" title="安装npm包"></a>安装npm包</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h1 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h1><p>博客根目录的配置文件<code>_config.yml</code>中添加如下配置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw&#x2F;</span><br><span class="line">  pluginJsPath: lib&#x2F;</span><br><span class="line">  pluginModelPath: assets&#x2F;</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-hibiki</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 350</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure><p>这里的use: 后面填写你要的2的模型样子</p><p>模型样式参考：<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">这里</a></p><h1 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install live2d-widget-model-hibiki</span><br></pre></td></tr></table></figure><p>然后hexo三连发 hexo cl、 hexo g、 hexo s</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux启动（重启）防火墙systemctl unmask firewalld</title>
      <link href="/archives/3137458103.html"/>
      <url>/archives/3137458103.html</url>
      
        <content type="html"><![CDATA[<p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e86ebaa504f4bcb04afd5d3.png"  alt=""></p><p>输入一下代码，原因是进程被锁住了。我之前是卡了一下，然后强制重启了linux</p><blockquote><p>systemctl unmask firewalld</p></blockquote><p>然后 启动防火墙就可以了</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start firewalld#启动防火墙</span><br><span class="line"></span><br><span class="line">systemctl status firewalld#查看防火墙状态</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常见bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ssh连接无法访问外网，但是能访问内网，前提是已经设置了静态ip和使用ipv4连接网络</title>
      <link href="/archives/3116909338.html"/>
      <url>/archives/3116909338.html</url>
      
        <content type="html"><![CDATA[<p>就是ping <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 未知名称或服务</p><p>打开vm虚拟机找到编辑选项 ，选择虚拟网络编辑器。然后使用编辑静态IP网关，在本机电脑上设置vm的ivp4的ip不和编辑的静态ip网关一致就ok</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe395504f4bcb042d31ce.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe3b0504f4bcb042d419f.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe3b9504f4bcb042d47fa.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe3c3504f4bcb042d4e13.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe3d1504f4bcb042d579a.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe3e2504f4bcb042d61fa.png"  alt=""></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fe3fc504f4bcb042d7159.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 常见bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决tomcat日志乱码</title>
      <link href="/archives/3306406959.html"/>
      <url>/archives/3306406959.html</url>
      
        <content type="html"><![CDATA[<p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fdd9d504f4bcb04283ff8.png"  alt=""></p><p>在tomcat目录下的conf，打开logging.properties文件在底部添加以下语句</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.util.logging.ConsoleHandler.encoding &#x3D; GBK</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fde28504f4bcb0428c3e8.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 常见bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea汉化</title>
      <link href="/archives/648391965.html"/>
      <url>/archives/648391965.html</url>
      
        <content type="html"><![CDATA[<p><strong>下载汉化包</strong></p><p>这里使用TranslatorX 的汉化工具，直接放入lib目录下就可以了，不用替换任何我文件，<strong>建议重命名，以后不用汉化版本了直接就删除该jar包就行了。此版本汉化包亲测是最好用的一个版本。最靓点的是错误也是中文，哈哈哈</strong></p><blockquote><p><strong>链接: <a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></strong>s/1N5PoRVXikSFPNA5YlWi2NQ 提取码: td91</p></blockquote><p><strong>直接将该jar文件放入在idea的安装目录下的lib目录下，可以重命名该汉化包</strong></p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fea0f504f4bcb0432ddbe.png"  alt=""></p><p>然后重启idea就好了</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e8fea23504f4bcb0432f9c2.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汉化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yilia设置分类和标签、设置随笔、设置归档</title>
      <link href="/archives/657161319.html"/>
      <url>/archives/657161319.html</url>
      
        <content type="html"><![CDATA[<p>使用yilia主题的时候发现hexo没有内置分类和标签，这里给大家分享一下设置过程</p><h1 id="设置index-md"><a href="#设置index-md" class="headerlink" title="设置index.md"></a>设置index.md</h1><p>在git面板上输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>​    博客根目录\source\categories生成index.md文件，打开该文件，将文件开头设置如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: categories |分类 |归档</span><br><span class="line">date: 2020-03-20 16:39:03</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br><span class="line">comments: false #关闭评论</span><br></pre></td></tr></table></figure><p>​    博客根目录\source\tags生成index.md文件，打开该文件，将文件开头设置如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2020-03-20 16:50:04</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><h1 id="配置yilia-config-yml-添加-categories-tags-到-menu-以及设置随笔"><a href="#配置yilia-config-yml-添加-categories-tags-到-menu-以及设置随笔" class="headerlink" title="配置yilia/_config.yml 添加 categories | tags 到 menu 以及设置随笔"></a>配置yilia/_config.yml 添加 categories | tags 到 menu 以及设置随笔</h1><p>这里的随笔也就是把有随笔标签的文章做一个归类</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主页: &#x2F;</span><br><span class="line">随笔: &#x2F;tags&#x2F;随笔&#x2F;</span><br><span class="line">分类: &#x2F;categories</span><br><span class="line">个人简历: &#x2F;grjl&#x2F;ft5_94_profile&#x2F;index.html</span><br></pre></td></tr></table></figure><h1 id="配置layout-partial-article-ejs"><a href="#配置layout-partial-article-ejs" class="headerlink" title="配置layout/_partial/article.ejs"></a>配置layout/_partial/article.ejs</h1><p>找到 <div class="article-entry" itemprop="articleBody"> 这一行</p><p> div 里面的内容（原有的内容）全部替换(如果你之前在这个div里配置过其他的文件，新增的文件就得保留，以免破坏其他的布局)为：</p><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (page.type === <span class="string">"tags"</span>) &#123; %&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tag-cloud"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tag-cloud-title"</span>&gt;</span><br><span class="line">&lt;%- _p(<span class="string">'counter.tag_cloud'</span>, site.tags.length) %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tag-cloud-tags"</span>&gt;</span><br><span class="line">&lt;%- tagcloud(&#123;</span><br><span class="line">min_font: <span class="number">12</span>,</span><br><span class="line">max_font: <span class="number">30</span>,</span><br><span class="line">amount: <span class="number">200</span>,</span><br><span class="line">color: <span class="keyword">true</span>,</span><br><span class="line">start_color: <span class="string">'#ccc'</span>,</span><br><span class="line">end_color: <span class="string">'#111'</span></span><br><span class="line">&#125;) %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (page.type === <span class="string">'categories'</span>) &#123; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"category-all-page"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"category-all-title"</span>&gt;</span><br><span class="line">&lt;%- _p(<span class="string">'counter.categories'</span>, site.categories.length) %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"category-all"</span>&gt;</span><br><span class="line">&lt;%- list_categories() %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;% &#125; <span class="keyword">else</span> &#123; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;% <span class="keyword">if</span> (post.excerpt &amp;&amp; index)&#123; %&gt;&lt;%- post.excerpt %&gt;</span><br><span class="line">&lt;% &#125; <span class="keyword">else</span> &#123; %&gt;</span><br><span class="line">&lt;%- post.content %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h1 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h1><p>找到yilia\source-src\css\article.scss在该文件末尾添加</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*tag-cloud*/</span></span><br><span class="line"><span class="selector-class">.tag-cloud</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud-tags</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">  a &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span>;</span><br><span class="line">    <span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>;</span><br><span class="line">    <span class="selector-tag">font-weight</span>: <span class="selector-tag">normal</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">    <span class="selector-tag">line-height</span>: <span class="selector-tag">normal</span>;</span><br><span class="line">    <span class="selector-tag">padding</span>: 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 10<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line">    <span class="selector-tag">border-radius</span>: 0 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 0;</span><br><span class="line">    <span class="selector-tag">font-family</span>: <span class="selector-tag">Menlo</span>, <span class="selector-tag">Monaco</span>, "<span class="selector-tag">Andale</span> <span class="selector-tag">Mono</span>", "<span class="selector-tag">lucida</span> <span class="selector-tag">console</span>", "<span class="selector-tag">Courier</span> <span class="selector-tag">New</span>", <span class="selector-tag">monospace</span>;</span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: -<span class="number">18px</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">9px</span> solid transparent;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">4px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">4px</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">7px</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">2px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.color1</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#FF945C</span>;</span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">      <span class="selector-tag">border-right-color</span>: <span class="selector-id">#FF945C</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.color2</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#F5C7B7</span>;</span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">      <span class="selector-tag">border-right-color</span>: <span class="selector-id">#F5C7B7</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.color3</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#BA8F6C</span>;</span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">      <span class="selector-tag">border-right-color</span>: <span class="selector-id">#BA8F6C</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.color4</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#CFB7C4</span>;</span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">      <span class="selector-tag">border-right-color</span>: <span class="selector-id">#CFB7C4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.color5</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#7B5D5F</span>;</span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">      <span class="selector-tag">border-right-color</span>: <span class="selector-id">#7B5D5F</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*category-all-page*/</span></span><br><span class="line"><span class="selector-class">.category-all-page</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">  .category-all-title &#123;</span><br><span class="line">    <span class="selector-tag">font-weight</span>: 700;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 24<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-list-item</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-list-count</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-list-count</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'一共 '</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.category-list-count</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' 篇文章'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="给文章设置分类和标签（多标签，多级分类）"><a href="#给文章设置分类和标签（多标签，多级分类）" class="headerlink" title="给文章设置分类和标签（多标签，多级分类）"></a>给文章设置分类和标签（多标签，多级分类）</h1><p>在文章顶部输入—回车输入以下配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tags: [分类（categories）, 标签（tags）] </span><br><span class="line">categories: [yilia, 分类和标签、随笔]</span><br></pre></td></tr></table></figure><p>tags:设置标签，如果单个标签就直接一个就欧克，如果是多个，用[标签1 (空格),标签2]        </p><p><strong>注意:在冒号后面有一个空格</strong></p><p>分类同理；</p><h1 id="设置归档"><a href="#设置归档" class="headerlink" title="设置归档"></a>设置归档</h1><p>在yilia的<em>config配置文件里的mean菜单下添加</em></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">归档:  &#x2F;archives&#x2F;index.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> yilia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分类（categories） </tag>
            
            <tag> 标签（tags） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决端口冲突</title>
      <link href="/archives/643733303.html"/>
      <url>/archives/643733303.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决端口冲突"><a href="#解决端口冲突" class="headerlink" title="解决端口冲突"></a>解决端口冲突</h1><p>在某些时候，本地跑项目的总是被其他的程序莫名其妙的占用了需要用到端口，也可能是跑项目忘记了关。再次运行的时候就出错了。虽然网上有解决方法，这里我也写一下，为了方便。</p><h2 id="一、如果懒得操作，直接重启电脑即可"><a href="#一、如果懒得操作，直接重启电脑即可" class="headerlink" title="一、如果懒得操作，直接重启电脑即可"></a>一、如果懒得操作，直接重启电脑即可</h2><p>如果是笔记本，一点要点击重启电脑，而不是关机，在开机。现在的笔记本为了解决开关机快慢的问题，都是让电脑直接冷启动，类似电脑只是在休眠状态。</p><h2 id="二、在cmd中通过命令干掉进程"><a href="#二、在cmd中通过命令干掉进程" class="headerlink" title="二、在cmd中通过命令干掉进程"></a>二、在cmd中通过命令干掉进程</h2><p>打开cmd面板，有很多方法，这里就不演示了</p><p>在cmd面板中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -aon|findstr &quot;4000&quot;</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/8bMlsf" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/24/8bMlsf.md.png"  alt="8bMlsf.md.png"></a></p><p>在发现了有这些进程之后，通过输入以下代码来干掉进程，这里引号里的就是进程号</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tasklist|findstr &quot;17916&quot;</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/8bMvOf" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/24/8bMvOf.md.png"  alt="8bMvOf.md.png"></a></p><p>然后就解决了，其他端口关闭也可用通过这种方法，比如8080</p>]]></content>
      
      
      <categories>
          
          <category> 常见bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口冲突 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署在GitHub并设置自己的域名</title>
      <link href="/archives/9c040ea2.html"/>
      <url>/archives/9c040ea2.html</url>
      
        <content type="html"><![CDATA[<h1 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h1><p>创建一个和你用户名相同的仓库，<strong>后面加.github.io</strong>，只有这样，将来要部署到GitHub page的时候，才会被识别</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yq888.github.io</span><br></pre></td></tr></table></figure><blockquote><p>假如我没有用yq888.github.io<code>而是用了</code>mungo.github.io<code>，那么当我浏览器访问博客的时候会出现404错误。这里并不是没有部署成功，而是把它部署在了这里:</code><a href="http://yq888.github.io/mungo.github.io`。所以，如果想直接`yq888.github.io`访问，那么就需要和用户名保持一致。" target="_blank" rel="noopener">http://yq888.github.io/mungo.github.io`。所以，如果想直接`yq888.github.io`访问，那么就需要和用户名保持一致。</a></p></blockquote><p>yq888：我的github用户名</p><p>这里建议页面公开，才能使用pages服务，如果过不介意源码公开，可以采用多分支，介意就在创建一个私有仓库</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e93224ac2a9a83be54f4923.png"  alt=""></p><h1 id="设置公钥"><a href="#设置公钥" class="headerlink" title="设置公钥"></a>设置公钥</h1><p><strong>本机公钥生成详情参考我的本机公钥博客</strong></p><ol><li>在仓库里找到设置（settings）</li><li>然后点击部署密匙（Deploy keys）</li><li>点击添加密匙（add deploy keys）</li></ol><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e932714c2a9a83be5529436.png"  alt=""></p><p>标题随便写</p><p>内容就是在C:\Users\高冷的男神.ssh下的id_rsa.pub里的内容</p><h1 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a><strong>部署到GitHub</strong></h1><h2 id="配置-config文件"><a href="#配置-config文件" class="headerlink" title="配置_config文件"></a>配置_config文件</h2><p>这配置的是博客根目录的_config</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:YourgithubName&#x2F;YourgithubName.github.io.git,master</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p><strong>YourgithubName就是你的GitHub账户</strong></p><p>这个时候需要先安装deploy-git ，也就是部署（hexo deploy）的命令,这样你才能用命令将静态文件部署到GitHub。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate 也可以 hexo g</span><br><span class="line">hexo deploy  也可以hexo d</span><br></pre></td></tr></table></figure><ul><li>hexo clean 也可以 hexo cl:清理缓存</li><li>hexo generate 也可以 hexo g：生成静态资源</li><li>hexo deploy      也可以hexo d：部署</li></ul><p>过<strong>一会儿</strong>就可以在<code>http://yourname.github.io</code> 访问你的博客了</p><h1 id="多分支构建博客"><a href="#多分支构建博客" class="headerlink" title="多分支构建博客"></a>多分支构建博客</h1><p>为了解决更换电脑后资源丢失</p><h2 id="分支构建"><a href="#分支构建" class="headerlink" title="分支构建"></a>分支构建</h2><ol><li><p>在刚才的仓库里新建一个分支。分支创建直接找到仓库master（主分支那里）搜索一下分支名。点击该下拉框底部按钮就可创建。这里创建一个名字为source的分支<img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e97c2e6c2a9a83be52ab7dd.png"  alt=""></p></li><li><p>在仓库里找setting，也就是仓库设置，找到左边菜单栏分支选项（第二个branches点击mast<img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e97c31dc2a9a83be52ad279.png"  alt=""></p></li></ol><ol start="3"><li>把source设置为主分支<img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e97c391c2a9a83be52b0622.png"  alt=""></li></ol><h2 id="引入源码仓库地址"><a href="#引入源码仓库地址" class="headerlink" title="引入源码仓库地址"></a>引入源码仓库地址</h2><p>我这里使用简单粗暴的方式</p><p>左面新建一个文件夹。用git bash打开，直接输入git clone 仓库地址，也可以下载仓库文件</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e97c4ffc2a9a83be52bae2b.png"  alt=""></p><p>在gitbash里输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;YQ888&#x2F;yq888.github.io.git</span><br></pre></td></tr></table></figure><p>然后复制该文件夹里的.git文件，（记打开隐藏文件），将.git粘贴到博客根目录</p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#部署静态页面  #这里的静态页面还是会部署到master分支下</span><br><span class="line">hexo cl</span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line">#上传博客源码</span><br><span class="line">git add .</span><br><span class="line">git commit -m  说明</span><br><span class="line">git push #提交到主分支，这里的主分支是source了。之前改了的</span><br></pre></td></tr></table></figure><p>以后需要源码的时候直接git clone 仓库的链接，这里如果还是保持的source，下载就是源码</p><h1 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h1><h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><p>这里就不介绍了，详情百度，建议阿里云购买，腾讯云也可以</p><p>如果有域名了就不多说了。这里就直接去购买域名的地方去解析域名</p><h2 id="查询仓库ip"><a href="#查询仓库ip" class="headerlink" title="查询仓库ip"></a>查询仓库ip</h2><p>这里可以cmd本地ping一下你的.io域名</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping yq888.github.io</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9a9edbc2a9a83be5910571.png"  alt=""></p><p>也可以使用<a href="http://ip.tool.chinaz.com/" target="_blank" rel="noopener">ip查询</a>，复制你的.io域名进行查询</p><p>这里的ip都能用，解析的时候随便选取一个就行</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9a9fa9c2a9a83be591d4e7.png"  alt=""></p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>如果没有实名记得实名</p><p>打开购买域名的网址，这里我就使用腾讯云做演示</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9aa3f3c2a9a83be59606dd.png"  alt=""></p><p>这里添加两个</p><ol><li>第一个解析 主机记录@ 记录类型A 默认线路 记录填写你服务器的ip（刚才查询到的） ttl 600s</li><li>第一个解析 主机记录www 记录类型A 默认线路 记录填写你服务器的ip（刚才查询到的） ttl 600s</li></ol><h2 id="pages自定义"><a href="#pages自定义" class="headerlink" title="pages自定义"></a>pages自定义</h2><p>在仓库设置，找到pages 输入自己的域名</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9ae031c2a9a83be5c3296e.png"  alt=""></p><h2 id="测试公钥"><a href="#测试公钥" class="headerlink" title="测试公钥"></a>测试公钥</h2><p><strong>如果没有配公钥请往上翻</strong></p><p>测试我们添加的SSH是否成功，在终端输入：ssh -T <a href="mailto:git@github.com">git@github.com</a>。如果出现以下信息，则添加成功：</p><p><img src="/" class="lazyload" data-src="https://upload-images.jianshu.io/upload_images/6955515-c1f8f79a897bcb1a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1130"  alt="img"></p><h2 id="CNAME配置"><a href="#CNAME配置" class="headerlink" title="CNAME配置"></a>CNAME配置</h2><p>桌面新建CNAME文件，不要后缀</p><p>在该文件里写入你的域名。例如我的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yuxiaoshao.top</span><br></pre></td></tr></table></figure><p>把cname放入博客根目录的source文件夹下，然后hexo cl，hexo g,hexo deploy</p><p>之后就可以通过域名访问了</p><p>也欢迎各位访问我github的<a href="https://yuxiaoshao.top/" target="_blank" rel="noopener">博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署在码云</title>
      <link href="/archives/599829822.html"/>
      <url>/archives/599829822.html</url>
      
        <content type="html"><![CDATA[<p>在本地搭建好博客后我们需要把博客部署在服务器上，这里没有购买服务器的情况下，就暂时部署在码云或者github上也是可以滴。如果之前部署过github的童鞋应该很快就上手了，都差不多的。这里就没有配置本地公钥了。直接使用是http链接方式</p><a id="more"></a><ul><li><strong>github</strong> ：github的page服务也很方便，但是部署了之后会发现访问很慢（github国外网站的原因），并且github不接收百度的seo收录。</li><li><strong>码云</strong> ：国内的，所以访问会快一些，需要<strong>每次上传版本后手动部署</strong>（免费），如果<strong>自动部署或者是自定义域名需要一年99块钱</strong>。</li></ul><h1 id="码云静态部署博客"><a href="#码云静态部署博客" class="headerlink" title="码云静态部署博客"></a>码云静态部署博客</h1><p>前提要有码云的账号，这个就不多说了。</p><p>注册ok后就点击新建仓库，用来存放本地上传的博客</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e917313504f4bcb04890bb4.png"  alt=""></p><p>然后对仓库进行相应的配置</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e917324504f4bcb048919ad.png"  alt=""></p><p>创建仓库后，点击克隆/下载复制好你的仓库网址</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e917337504f4bcb04892967.png"  alt=""></p><p>在打开你的博客的根目录的_config.yml_找到deploy配置如下，这里需要注意，冒号是英文的冒号，冒号后必须要空格，引号可加可不加</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e917347504f4bcb04893686.png"  alt=""></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: 你刚才复制的目录</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>最后在博客目录下用gitbash运行打开git面板，输入代码来安装安装hexo-deployer-git模块</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e91735c504f4bcb04894696.png"  alt=""></p><p>安装好后，在git面板上输入git g -d就可以通过git把博客部署在码云了</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git g -d</span><br></pre></td></tr></table></figure><h1 id="源码托管部署码云（防止更换电脑电脑）"><a href="#源码托管部署码云（防止更换电脑电脑）" class="headerlink" title="源码托管部署码云（防止更换电脑电脑）"></a>源码托管部署码云（防止更换电脑电脑）</h1><h2 id="创建托管环境"><a href="#创建托管环境" class="headerlink" title="创建托管环境"></a>创建托管环境</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9272e2c2a9a83be5d74833.png"  alt=""></p><h3 id="引入源码仓库地址"><a href="#引入源码仓库地址" class="headerlink" title="引入源码仓库地址"></a>引入源码仓库地址</h3><p>桌面新建文件夹</p><ol><li>用git bash打开新建文件夹</li><li>在新建的仓库中复制地址</li></ol><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e927482c2a9a83be5d8e7c1.png"  alt=""></p><p>git面板使用复制:鼠标右键paste</p><p>在git 面板里使用以下命令然后回车</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone 复制的网址</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9274dcc2a9a83be5d94628.png"  alt=""></p><h3 id="复制git目录"><a href="#复制git目录" class="headerlink" title="复制git目录"></a>复制git目录</h3><p>打开新建文件夹，里面会有仓库的上传地址，然后复制.git文件目录</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e927528c2a9a83be5d9994b.png"  alt=""></p><p>把.git目录复制到本地博客目录下</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92785ac2a9a83be5dd08ce.png"  alt=""></p><ul><li>public: 静态文件目录</li><li>node_modules：hexo底层文件目录</li><li>scaffolds：我也不知道，没分析</li><li>source：源码目录，存放博客或者页面配置目录</li><li>.gitignore：git过滤文件</li><li>themes：主题文件</li><li>_config.yml：hexo的配置文件</li><li>下面几个json就不要深究了，没意义了，反正也不做改动的</li></ul><h3 id="编辑-gitignore"><a href="#编辑-gitignore" class="headerlink" title="编辑.gitignore"></a>编辑.gitignore</h3><p>使用文本工具打开该文件。</p><p>.gitignore存放的是过滤文件，在此文档中的文件，是不会被上传的，这里需要删除public,因为部署的时候需要将码云的page定位到上传的public目录</p><blockquote><p>public目录:存放的hexo生成的静态文件也就是hexo g命令生成的静态目录</p></blockquote><p>.gitignore配置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">*.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">.deploy*&#x2F;</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e927696c2a9a83be5db3048.png"  alt=""></p><h2 id="上传博客到码云仓库"><a href="#上传博客到码云仓库" class="headerlink" title="上传博客到码云仓库"></a>上传博客到码云仓库</h2><ol><li><p>使用git bash打开博客目录</p></li><li><p>使用hexo g 生成静态目录public</p></li><li><p>使用git add . 将blog要上传的文件提交到缓存。这里我理解的是暂时提交到计算机内存里，不知道这理解对不对 （add 和.有个空格的）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></li><li><p>使用git commit-m （提交解释） 例如如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit-m  部署博客</span><br></pre></td></tr></table></figure></li><li><p>使用git push提交文件，第一次提交如果文件较多或者较大或者网速不好，会比较慢。</p></li></ol><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9278eec2a9a83be5dd9c09.png"  alt=""></p><h2 id="使用码云page部署博客"><a href="#使用码云page部署博客" class="headerlink" title="使用码云page部署博客"></a>使用码云page部署博客</h2><p>打开码云仓库点击服务，然后选择pages</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e92793fc2a9a83be5ddf87c.png"  alt=""></p><p>分支不变，这里还是只用了一个主分支master</p><p>部署目录选择/public</p><p>建议使用枪支https这样会降低网站报红</p><p><img src="/" class="lazyload" data-src="https://pic.downk.cc/item/5e9279a7c2a9a83be5de7461.png"  alt=""></p><p>然后点击生成的域名，就直接映射到静态网页了。</p><h2 id="css没有效果"><a href="#css没有效果" class="headerlink" title="css没有效果"></a>css没有效果</h2><p>如果采用这种方式部署后，网页没有css，配置博客配置文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url:  http:&#x2F;&#x2F;yz-yq.gitee.io&#x2F;blog</span><br><span class="line">root: &#x2F;blog&#x2F;</span><br></pre></td></tr></table></figure><h2 id="以后部署博客"><a href="#以后部署博客" class="headerlink" title="以后部署博客"></a>以后部署博客</h2><ol><li>直接用git bash打开博客目录，</li><li>先hexo clean删除public静态文件以及缓存</li><li>然后使用hexo g生成public</li><li>使用git add .</li><li>使用git commit -m 说明（必须要有说明才能使用git push）</li><li>使用git push</li><li>打开码云 找到博客仓库，找到服务 pages 然后直接点击更新，等待1分钟就部署成功</li><li>如果更换了电脑，直接git clone仓库源码就可以了。也可以直接下载仓库zip</li></ol><h1 id="多分支部署"><a href="#多分支部署" class="headerlink" title="多分支部署"></a>多分支部署</h1><p>这里参照GitHub多分支部署</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10系统永久激活 office2003~2019安装、破解</title>
      <link href="/archives/4045953268.html"/>
      <url>/archives/4045953268.html</url>
      
        <content type="html"><![CDATA[<h1 id="一般kms激活（180天）"><a href="#一般kms激活（180天）" class="headerlink" title="一般kms激活（180天）"></a>一般kms激活（180天）</h1><p>在某宝上一个数字激活码还是比较便宜，不懂的直接上某宝购买就是了。但是没必要。所以我给大家分享一下永久激活的方式，这样就可以一劳永逸了</p><a id="more"></a><h2 id="下载激活器"><a href="#下载激活器" class="headerlink" title="下载激活器"></a>下载激活器</h2><blockquote><p>链接: <a href="https://pan.baidu.com/s/1GuoXUqd5ssLCHRxnbNJv4A" target="_blank" rel="noopener">https://pan.baidu.com/s/1GuoXUqd5ssLCHRxnbNJv4A</a> 提取码: u6fc</p></blockquote><p>我这里分享了两个激活器</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307140424397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这个激活器也是通过kms方式激活的，但是只管180天，不嫌麻烦的小伙伴可以直接双击打开</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307140528902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里需要更新一下，更新就好了</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307140610105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里随便找个姿势下载</p><p>好的，下载好后双击运行</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307140757383.png"  alt="在这里插入图片描述"></p><p>这里会自动识别你电脑的系统版本。当然这里也能激活 win10、win8、win7也能激活office 以及各种常用收费软件。</p><p>鼠标点击Windows系统就可以了，但是<strong>必须联网</strong></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307140953271.png"  alt="在这里插入图片描述"></p><p>这里可能会因为网络原因稍有卡顿，不用担心</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307141038710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>现在已经搞定了</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="win10系统激活-office2003-2019安装"><a href="#win10系统激活-office2003-2019安装" class="headerlink" title="win10系统激活 office2003~2019安装"></a>win10系统激活 office2003~2019安装</h1><p>win激活的方式有很多中，可以通过kms方式激活，也可以通过数字激活，以及在网上购买序列号，这里使用kmstool工具对win永久激活</p><h3 id="（1）下载激活工具"><a href="#（1）下载激活工具" class="headerlink" title="（1）下载激活工具"></a>（1）下载激活工具</h3><blockquote><p><a href="https://pan.baidu.com/s/1ofQEYQzi_hrjM4qV7SlV8g" target="_blank" rel="noopener">https://pan.baidu.com/s/1ofQEYQzi_hrjM4qV7SlV8g</a> 提取码: ih91</p></blockquote><h3 id="（2）-使用kmstool"><a href="#（2）-使用kmstool" class="headerlink" title="（2） 使用kmstool"></a>（2） 使用kmstool</h3><p>选中win10 Digtal Activation</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/22/84XW1e.png"  alt="84XW1e.png"></p><p>点击Activate Windows10</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/22/84X7AP.png"  alt="84X7AP.png"></p><p>成功破解</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/22/84jeBR.png"  alt="84jeBR.png"></p><p>如果需要其他版本破解私聊我，空了我就帮你解决</p><h1 id="检测是否激活成功"><a href="#检测是否激活成功" class="headerlink" title="检测是否激活成功"></a><strong>检测是否激活成功</strong></h1><p>鼠标 右键此电脑，点击属性</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200307141629922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h1 id="office安装和激活"><a href="#office安装和激活" class="headerlink" title="office安装和激活"></a>office安装和激活</h1><h2 id="安装office"><a href="#安装office" class="headerlink" title="安装office"></a>安装office</h2><p>打开kms tool 点击office</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/22/84jUEt.png"  alt="84jUEt.png"></p><p><strong>如果电脑上有office组件，请先卸载office以及office证书</strong></p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/22/84v4ot.png"  alt="84v4ot.png"></p><p>卸载成功后点击安装office，这里记得先配好你要安装的版本以及语言</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/22/84xFOJ.png"  alt="84xFOJ.png"></p><p>之后就可以安装啦，这里是在线安装，一般都是1G到2G的左右的空间，</p><h2 id="激活office"><a href="#激活office" class="headerlink" title="激活office"></a>激活office</h2><p>安装后一般都是没有开始激活的，这里需要手动激活。可以桌面右键新建一个office新建一个word文档在文件-账户里查看激活状态，这里注意，激活的时候需要关闭该文档</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200401164959305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="鼠标 右键此电脑，点击属性"></p><p>按照步骤点击，一步一步执行完</p><h2 id="检测是否激活成功-1"><a href="#检测是否激活成功-1" class="headerlink" title="检测是否激活成功"></a>检测是否激活成功</h2><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200401165141522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020040116521426.png"  alt="在这里插入图片描述"></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200401165235960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统激活 </tag>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows系统安装、制作U盘工具，vm虚拟机U盘安装windows</title>
      <link href="/archives/3679495888.html"/>
      <url>/archives/3679495888.html</url>
      
        <content type="html"><![CDATA[<p><strong>微软官方介质安装绝对是纯净版，U盘PE安装的方式是看你的ios镜像是否是纯净版的</strong></p><a id="more"></a><h2 id="首先，下载微软官方u盘安装工具-准备一个8GU盘"><a href="#首先，下载微软官方u盘安装工具-准备一个8GU盘" class="headerlink" title="首先，下载微软官方u盘安装工具 准备一个8GU盘"></a>首先，下载微软官方u盘安装工具 准备一个8GU盘</h2><blockquote><p>链接: <a href="https://pan.baidu.com/s/1vrv7dV6Oj89SKA70XUvORw" target="_blank" rel="noopener">https://pan.baidu.com/s/1vrv7dV6Oj89SKA70XUvORw</a> 提取码: pz03</p></blockquote><p>ps：如果连接失效了记得给我说一下哈，我好更新一哈</p><p>这是1809版本的，也是目前次新版的系统咯，个人觉得这个版本目前的比较稳定，也可以安装好后自己升级成1903版本，看个人需要咯。</p><p>这个有个缺点，只能制作微软最新的系统，各位想找老版本的系统就另寻途径了吧。<br><strong><em>如果是给其他电脑安装系统，或者自己的电脑重做系统记得准备U盘至少8G</em></strong><br><strong>这里注意，制作系统启动U盘，都会格式化U盘数据，记得先备份U盘文件</strong><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020030412520785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>点击了接受协议后就是这么个样纸</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200304125315350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>ok现在可以选择升级本台电脑的系统，或者创建另外一台安装介质。当然这里的<strong>升级电脑都是升级的最新系统，如果你的是win7 可以通过该介质升级到最新的win10系统</strong></p><p>好的我们开始制作系统U盘</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200304125750391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>ok，我们可以根据这台电脑的配置来制作相应 的win10配置也可以不用个勾选</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020030412593555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><strong>取消勾选我们可以选择体系，这里都选择制作32位64位的系统看具体需要 但是如果勾选的条件越多，需要u盘空间就越大，8GU盘完全满足</strong></p><p>选完后点击下一步即可<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200304130244524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述">选择你的U盘就是了。我这里的u盘制作系统盘所有两个分区和普通不一样你们不用在意选中们的了，点击下一步<br>之后等待一段时间<br><strong>这里需要在线下载系统镜像。这里出现短暂C盘占用过大情况不用单行制作结束会自动清理占用内存</strong></p><p><strong>如果有事情退出制作也没关系直接关闭窗口就行了</strong><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200304130641915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>制作好U盘后就是这样的</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200304130844260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里需要注意一下，<strong>U盘的logo以及名字不要修改（切记）里面的其他文件目录不要删除和修改<br>你可以创建一个文件夹来存放其他文件，和普通U盘一样使用</strong>例如我这里就创建了一个文件夹</p><h2 id="安装Win10"><a href="#安装Win10" class="headerlink" title="安装Win10"></a>安装Win10</h2><p>好的，制作好后怎么使用呢</p><p>1.将需要做系统的电脑设置成U盘启动，这里不同的电脑不同的方式不一样，自行百度就ok ，<em>一般都是重启狂按Esc就可以直接修改启动项了。</em></p><p>2.啥都不用管，只要插入 U盘（制作了系统的U盘）电脑会自动读取，<br>如果电脑没有识别，就百度相关型号电脑的U盘启动方式</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305162437425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>好的再这里我们可以选择制作32位还是64位的系统 如果电脑硬件不是特别差，<strong>建议还是选择64位的</strong> 回车就ok</p><p>3.这里我们选择的是64位的</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305162715264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305162729557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>ok这里跟着节奏走 点击没有密匙<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/202003051628274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这里可以选择你要安装的 版本 这里取决于你制作U盘的时候是否做的完全的，完全的就是这样纸<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305162941410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这里我们选择的是专业版，点击下一步<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305163037925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这里当然是我接受<img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305163120123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里点击自定义安装，如果是升级就点击默认的就是了<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305163232290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里选择你要安装系统的磁盘，我是赞vm虚拟机了安装的 所有我只分配了60G的空间而且只有一个硬盘，一般的固态是128G的 ，根据实际需求来选择你要安装的硬盘，建议选择固态硬盘安装系统<br>在这里也可以实现对硬盘的分区操作，例如我这里给他分配30G的空间来做系统盘，剩下的30G 空间来放其他的东西<br>当然默认系统盘是C盘的盘符<br>现在进行分区操作<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305163612924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>点击新建 然后给选择的硬盘分区，这里注意点，别选中了你的U盘了，虽然可能是分区失败的。然后写下你要分区的大小１G = 1024M 自己换算一下就欧克</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305163634934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>在分区成功后，还有30G 的空间没有分配，如果没有分配，那30G就没真正的起来 ，所有我们还是要给他分下区 。这里就直接点应用就好了，剩下的空间都在作为一个分区</p><p>如果你的电脑的硬盘分过区了 ，找到之前放系统的分区 或者硬盘格式化或者删除就行了，然后再分区，这样之前的系统就被干掉了。这样只会动你的系统盘，其他盘的或者其他区的文件并不会丢失。这就是从装了系统后，东西还在。因为只动了系统盘里的东西</p><p>４.好的现在就是见证奇迹的时刻了啥都不管，自动会重启的，你也可以最后手动重启。然后就是新系统的配置了。这里就不在衍生了</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305163649390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><h2 id="U盘PE系统安装"><a href="#U盘PE系统安装" class="headerlink" title="U盘PE系统安装"></a>U盘PE系统安装</h2><p>这里要制作PE系统工具。按照什么系统之家　、大白菜、　老毛桃之类的U盘制作方式就好了<br>你也可以用我的PE工具</p><blockquote><p>链接: <a href="https://pan.baidu.com/s/1KqS6Je5spbPF9QerCxXrLg" target="_blank" rel="noopener">https://pan.baidu.com/s/1KqS6Je5spbPF9QerCxXrLg</a> 提取码: hqg3</p></blockquote><p>老规矩，下载好后解压</p><p>这是解压后样纸</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305164736622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里有个安装步骤，不懂的可以关注公众号，虽然不是我的，但是里面的资源可以是我的。。哈哈哈</p><p>话不多说，直接点击制作程序　双击即可　这个软件响应速度有点慢，　如果打开了后没反应，不用紧张，等待一下</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020030516500440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>好滴　，然后点击这个PE到U盘，你也可以安装到系统盘，这个是制作ＰＥ系统的工具箱，什么是PE系统呢，自己百度一下吧。</p><p>然后是这么个样纸的界面<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305165147568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"><br>这里就根据选择就好了，选择你的U盘 然后啥都不变，就立即安装就行了。这里注意，制作系统启动U盘，都会格式化U盘数据，记得先备份U盘文件<br>好滴　制作好后你会发现你的U盘多的个分区<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305165455899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里不用在意这么多，在U盘较大的空间的哪个盘，你也可以存放自己的数据，也可以作为U盘使用。<strong>这里注意：镜像文件是放在较大的空间里的</strong></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305165750500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>你可以用各种姿势来放这个ｉｓｏ文件，但是你要确保你找得到。<br>好了，在准备好了启动U盘和ｉｓｏ文件后，就可以安装系统啦</p><p>我这里就不图文演示了。<br>1.然后老规矩 ，把电脑启动设置成U盘启动，然后选择你的U盘作为启动盘<br>2.然后会自动进入系统盘。<br>3.进入PE系统后，点击桌面上的系统安装<br>这里注意，如果你的硬盘没有分区，记得一定要先分区，才能使用（安装系统），如果是分好区的硬盘，就直接选中安装</p><p>PE系统里有分区工具，也有数据恢复工具，我就懒得做演示了，不懂的可以私聊我 。或者百度PE系统安装的姿势都是可以的。</p><h2 id="虚拟机通过U盘安装系统"><a href="#虚拟机通过U盘安装系统" class="headerlink" title="虚拟机通过U盘安装系统"></a>虚拟机通过U盘安装系统</h2><p>好的，之前我也是找了半天，才找回了点丢失的记忆，主要是演示要用到虚拟机。这里我就把我的记忆在定格一下，也方便需要的朋友们。<br>首先你得有个虚拟机，<br>这里我就不说这个了<br>点击我给的网盘。自己拿把，记得给我点赞就行了</p><blockquote><p>链接: <a href="https://pan.baidu.com/s/1EBszQw-AJTl8-fnglrBY5A" target="_blank" rel="noopener">https://pan.baidu.com/s/1EBszQw-AJTl8-fnglrBY5A</a> 提取码: ugr2<br>链接: <a href="https://pan.baidu.com/s/1IDL-yuRN0j4KMyguo9rCeQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1IDL-yuRN0j4KMyguo9rCeQ</a> 提取码: td0d</p></blockquote><p>第一个是ＶＭ１５的安装文件<br>第二个当然是注册码，各位也可以不嫌麻烦的百度，如果在注册码不能用的情况下。当然我这里基本都是能用的</p><p><strong>ＶＭ虚拟机的其他系统通过U盘安装的方法也差不多。这里需要配置好就行了</strong><br>好的　然后各位就自行安装了。<br><em>这里我多一下嘴，如果各位电脑支持VT模式，建议在ｂｉｏｓ里把VT打开，啥是VT？可以百度一下，自己的电脑是否支持VT，打开ｂｉｏｓ看看就知道了，前提了解VT是啥</em></p><p>好的安装后创建一个虚拟机</p><p>这里来创建一个　ｗｉｎ１０的虚拟机</p><p>1.创建一个虚拟机</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171216249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里直接点下一步</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171243118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>如果你电脑里有你要安装的系统镜像就可以选择中间有下拉框的那里选中你的ios 文件，可以点击浏览找<br>没有就稍后安装（这里使用U盘介质安装）</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171407619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里选择win10<br><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171428935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>啥都不管，直接下一步</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171443553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>看你想法咯，想给他多点的爱就多点把，60G 其实够了<br>欧克  虚拟机就创建完成了<br>现在开始 用U盘制作系统了，U盘是系统U盘哈，通过上文的方式来制作就ok</p><p>点击编辑设置</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171623647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>点击添加</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171707883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>点击硬盘，在下一步</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171733665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171752196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>这里使用物理磁盘，主要是选择U盘</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171805375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><strong>好滴，执行这一步的时候注意，你的U盘一定要插入电脑里，这样才会读取到，现在加上U盘，我电脑里有3个磁盘了。这里选择数值最大的一个</strong></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305171842323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><strong>如果不放心是否是选中了U盘　就点击单个分区　点击下一步看看大小</strong></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172003316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>好滴，确认过眼神，是我们要找到人，返回，再选中使用整个磁盘点击下一步就ｏｋ</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172107613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>点击完成</p><p>![在这里插入图片描述](<a href="https://img-blog.csdnimg.cn/20200305172231218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20200305172231218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70</a>)</p><p>不要忘记了这个确定</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172318271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><strong>然后鼠标指针选中这里鼠标右键　点击电源，再选中启动打开固件（最后一个选项）</strong></p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172422136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>好的，如果出现了这个错误</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172516255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>可能是我们在新建硬盘的时候的姿势不对</p><p>这里解决方法来咯</p><p>点击编辑设置</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172728428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>找到你之前添加的硬盘<br>把他干掉</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305172821166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>然后在添加硬盘，在走一篇添加流程（和之前的流程一样）<br><strong>如果还是有错误这个弹窗，就再来一次，干掉，在添加</strong><br><strong>然后鼠标指针选中这里鼠标右键　点击电源，再选中启动打开固件（最后一个选项）</strong></p><p>这里使用（向右键）-&gt;选择到boot </p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305173145530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>然后向下键到这里在回车</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305173236568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>回车后这个样纸</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305173327418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>然后在向下选中到我圈着的磁盘，一般都是最后一个。按+这个键 把他弄到第一个位置</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305173421903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>好的 然后在在按向上键 回到Hard drive</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305173517618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>然后在按+键把Hard drive弄到第一位置</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305173549571.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p>欧克 直接按键盘F１０就欧克了，就会直接U盘启动了<br>然后通过U盘安装系统的姿势来操作</p><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020030517371996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA5MDA4,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述"></p><p><strong>好的 各位觉得有用的小老弟/老妹记得给我点个赞哈，爱你们，么么哒</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win系统安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（一）零基础windows环境本地搭建Hexo博客</title>
      <link href="/archives/743675268.html"/>
      <url>/archives/743675268.html</url>
      
        <content type="html"><![CDATA[<p> Hexo是基于node.js制作的一个博客工具。它是一个静态页面生成和上传的工具。也就说，Hexo是个纯静态的网站。至于为何会选中Hexo呢，主要 还是因为它的主题样式多，官方的主题都有200多种。</p><p>这里是Hexo在本地安装，暂时不需要部署到我们的服务器上。（如果需要部署的童鞋，可以看我后面的博客）</p><p>我们只需要在本地通过markdown也可以通过Typora（个人推荐使用）编写文章，然后让Hexo帮我们生成静态的html页面，并通过Hexo将生成的html文件上传到我们的服务器。</p><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><blockquote><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a></p></blockquote><p>下载Windows (x64)长期支持版 Long Term Support (LTS) schedule。按提示逐步安装即可。</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8cAjKJ.png"  alt="8cAjKJ.png"></p><p>安装完成后打开cmd查看版本号验证是否安装成功</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\高冷的男神&gt;node -v</span><br><span class="line">v12.16.1</span><br></pre></td></tr></table></figure><p>Node.js中自带了npm包管理工具，在cmd中查看npm版本。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\高冷的男神&gt;npm -v</span><br><span class="line">6.13.4</span><br></pre></td></tr></table></figure><h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><p>git是一个版本控制工具，国外镜像下载巨慢，没有耐心的我告辞。</p><h2 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h2><blockquote><p>官网：<a href="https://git-scm.com/download/](https://git-scm.com/download/)" target="_blank" rel="noopener">https://git-scm.com/download/](https://git-scm.com/download/)</a></p></blockquote><p>这里推荐使用我的网盘连接资源</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/19SaJtW7WkF542RCjZAMHaA" target="_blank" rel="noopener">https://pan.baidu.com/s/19SaJtW7WkF542RCjZAMHaA</a><br>提取码：wsn9</p></blockquote><p>如果网盘资源还是觉得慢，就前往淘宝 Git for Windows 镜像下载 git 安装包，</p><blockquote><p><a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/git-for-windows/</a></p><p>版本随意，都是windows环境的git安装包，选择.1后缀的路径，在根据电脑配置，选择Git前缀然后选择-32或者-64位的，</p></blockquote><p>实在实在还是不会，就自行百度</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/86zq3R.png"  alt="86zq3R.png"></p><h2 id="安装git-1"><a href="#安装git-1" class="headerlink" title="安装git"></a>安装git</h2><p>直接点击install，然后跟着节奏走。一路的next</p><p><a href="https://imgchr.com/i/8cFkvj" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8cFkvj.png"  alt="8cFkvj.png"></a></p><h2 id="检测是否安装好了git"><a href="#检测是否安装好了git" class="headerlink" title="检测是否安装好了git"></a>检测是否安装好了git</h2><p>（1）桌面鼠标右键:如果有git gui和git    bash就ok了</p><p><a href="https://imgchr.com/i/8ck71e" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8ck71e.png"  alt="8ck71e.png"></a></p><p>（2）在cmd中输入 git  –version</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8cA91g.png"  alt="8cA91g.png"></p><h1 id="搭建hexo博客"><a href="#搭建hexo博客" class="headerlink" title="搭建hexo博客"></a>搭建hexo博客</h1><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在桌面鼠标右键打开git bash here</p><p>在git面板中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>-g：全局安装</p><p>结果如图</p><p><a href="https://imgchr.com/i/8c1BrV" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8c1BrV.png"  alt="8c1BrV.png"></a></p><p>在查看hexo版本（检测是否安装成功）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>结果如图</p><p><a href="https://imgchr.com/i/8c1oVO" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8c1oVO.png"  alt="8c1oVO.png"></a></p><p>这里也说明了hexo是基于node.js开发的 hexo版本是3.1.0的</p><p><strong>注意：如果有需要卸载hexo的情况：可以使用npm uninstall hexo-cli -g来删除hexo3.0以上的版本，之前的版本使用npm uninstall hexo -g</strong></p><h2 id="安装hexo服务"><a href="#安装hexo服务" class="headerlink" title="安装hexo服务"></a>安装hexo服务</h2><p>Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-server</span><br></pre></td></tr></table></figure><h3 id="卸载hexo"><a href="#卸载hexo" class="headerlink" title="卸载hexo"></a>卸载hexo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-cli -g</span><br></pre></td></tr></table></figure><p>结果如图</p><p><a href="https://imgchr.com/i/8c8Jpj" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8c8Jpj.png"  alt="8c8Jpj.png"></a></p><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>在D盘新建Hexo文件用来存放个人博客，进入该文件夹，在Hexo中在新建一个空文件myblog 作为hexo项目（博客）目录</p><p>在myblog鼠标右键git bash here打卡git面板对myblog初始化 因为冲github上下载，所以有点小慢，为了解决就把npm设置为淘宝镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>检查是否修改成功</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br><span class="line"></span><br><span class="line">页面结果：https:&#x2F;&#x2F;registry.npm.taobao.org&#x2F;</span><br></pre></td></tr></table></figure><p>如果结果是一淘宝镜像网址，就可以执行init了</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>实例如图：</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8cv2tJ.png"  alt="8cv2tJ.png"></p><p>下载完成后自动在文件中部署项目文件</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8gpI8H.png"  alt="8gpI8H.png"></p><h2 id="启动博客"><a href="#启动博客" class="headerlink" title="启动博客"></a>启动博客</h2><p>在myblogs文件夹下启动hexo服务。这里还是在git面板里操作</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server </span><br><span class="line">或者 hexo s</span><br></pre></td></tr></table></figure><p>操作后如图所示</p><p><a href="https://imgchr.com/i/8gloW9" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8gloW9.png"  alt="8gloW9.png"></a></p><p>此时在本地打开浏览器，通过 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 便可访问基于Hexo的个人博客主页了。如下图所示：</p><p><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/03/20/8g1iOP.png"  alt="8g1iOP.png"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>令牌、标识符、注释、关键字和程序构成方式</title>
      <link href="/archives/3583131316.html"/>
      <url>/archives/3583131316.html</url>
      
        <content type="html"><![CDATA[<h1 id="令牌"><a href="#令牌" class="headerlink" title="令牌"></a>令牌</h1><p>c程序是由各种令牌组成 。令牌也就是关键字、标识符、常量、字符串值，或者是一个符号。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello, World! \n"</span>);</span><br></pre></td></tr></table></figure><p>在这里用到了5个令牌<br> 1.printf<br>  2.(<br>  3.”Hello, World! \n”<br>  4.)<br>  5.;</p><p><strong>printf 是标识符<br>（     符号<br>）    符号<br>“Hello, World! \n” 字符串值<br>分号是语句结束符。也就是说，每个语句必须以分号结束。它表明一个逻辑实体的结束。</strong></p><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>用来标识变量、函数，或任何其他用户自定义项目的名称<br><strong>注意：</strong><br>（1）一个标识符以字母 A-Z 或 a-z 或下划线 _ 开始，后跟零个或多个字母、下划线和数字（0-9）。<strong>这里需要注意的是：这里的下划线 不是-（减号）也不是——  而是英文的下划线 _</strong></p><p>（2）C 标识符内不允许出现标点字符，比如 @、$ 和 %。<br>（3）C 是区分大小写的编程语言。因此，在 C 中，Qiezi和 qiezi 是两个不同的标识符。<br>下面是有效的标识符</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">_temp</span><br><span class="line"> zoom </span><br><span class="line"> zhangsan</span><br><span class="line"> Lisi</span><br><span class="line"> demo01</span><br><span class="line"> test02</span><br><span class="line"> Dog</span><br></pre></td></tr></table></figure><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>注释是用来解释说明的，编写代码的时候也要养成做好注释的习惯 。当然 注释是里的内容是不会参与编译和运行的</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">   多行注释</span></span><br><span class="line"><span class="comment">   多行注释</span></span><br><span class="line"><span class="comment">   多行注释</span></span><br><span class="line"><span class="comment">   */</span></span><br></pre></td></tr></table></figure><p>//也叫行级注释 因为只能注释一行<br>/* <em>/ 这个是多行注释 也叫快级注释  这种格式的注释可以单行或多行。<br>*</em>注意：不能在注释内嵌套注释，注释也不能出现在字符串或字符值中**<br>错误演示</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//我是//张三</span></span><br><span class="line">char a ='//A';</span><br></pre></td></tr></table></figure><h1 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h1><p><strong>关键字（保留字）不能作为常量名、变量名或其他标识符名称。关键字是c自带库中的</strong></p><p> auto  声明自动变量<br>  break   跳出当前循环<br>  case   开关语句分支<br>  int     整型类型<br>  double 双精度浮点类型<br>  char  声明字符型变量或函数返回值类型 </p><p>这里只是部分，想看更多自行访问度娘</p><blockquote><p><a href="https://zhidao.baidu.com/question/345164364.html" target="_blank" rel="noopener">https://zhidao.baidu.com/question/345164364.html</a></p></blockquote><h1 id="程序构成方式"><a href="#程序构成方式" class="headerlink" title="程序构成方式"></a>程序构成方式</h1><ol><li>c语言程序由函数构成，每个函数可以实现一个或多个功能。 </li><li>一个正规程序可以有多个函数，但是有且只有一个主函数。 </li><li>函数只有在被调用的时候才执行，主函数由系统调用执行。</li><li> 函数的格式必须按照规范（标识符格式）书写。 建议使用驼峰命名法</li><li>C 语言程序文件的后缀为 .c </li></ol>]]></content>
      
      
      <categories>
          
          <category> C语言学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言基础 </tag>
            
            <tag> 令牌 </tag>
            
            <tag> 标识符 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
